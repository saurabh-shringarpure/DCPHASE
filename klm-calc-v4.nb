(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    468889,       9767]
NotebookOptionsPosition[    451656,       9489]
NotebookOutlinePosition[    451997,       9504]
CellTagsIndexPosition[    451954,       9501]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData["                                      "], "Input",
 CellChangeTimes->{{3.7993380713807974`*^9, 
  3.7993380749690304`*^9}},ExpressionUUID->"fc150282-8acb-485a-9fd8-\
8cd950595556"],

Cell[CellGroupData[{

Cell["Method: Finding the complete state and then projecting", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7990832561478186`*^9, 3.7990832748020067`*^9}, {
   3.799083783397294*^9, 3.799083784535287*^9}, {3.7990872944586153`*^9, 
   3.799087295623496*^9}, 3.7990873936997795`*^9, {3.7991436519751663`*^9, 
   3.7991436564900665`*^9}},ExpressionUUID->"ed282fc1-b91e-4684-80fc-\
9b7c5a8cd08d"],

Cell[TextData[{
 "Initial state in terms of the creation operators  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"represented", "    ", "by", "   ", "the", " ", 
     RowBox[{"symbols", ":", "      ", 
      SubscriptBox["c", 
       RowBox[{"T", ",", " ", "a", ",", " ", "b", ",", " ", "c"}]]}]}], ")"}],
    TraditionalForm]],ExpressionUUID->"2fae3b99-d334-4aad-a01d-d6520ae74cce"]
}], "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.799083281067198*^9, 3.799083328178293*^9}, {
   3.79908627795654*^9, 3.799086297884268*^9}, 3.7990873936997795`*^9, {
   3.7991436519761653`*^9, 
   3.7991436564900665`*^9}},ExpressionUUID->"c613112d-ff92-4d84-8f79-\
e1bc1b576f13"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "\[Psi]", ",", "\[Epsilon]", ",", "\[Alpha]", ",", "\[Beta]", ",", "X"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"norm", "[", "x_", "]"}], "=", 
   FractionBox["1", 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox["\[Epsilon]", "2"]}]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Psi]", "T"], "=", 
   RowBox[{
    RowBox[{"norm", "[", "\[Epsilon]", "]"}], 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"\[Epsilon]", " ", 
       SubscriptBox["c", "T"]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Psi]", "abc"], "=", 
   RowBox[{
    RowBox[{"\[Alpha]", " ", 
     SubscriptBox["c", "b0"]}], "+", 
    RowBox[{"\[Beta]", " ", 
     SubscriptBox["c", "a"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Psi]", "=", 
  RowBox[{"Expand", "[", 
   RowBox[{
    SubscriptBox["\[Psi]", "T"], 
    SubscriptBox["\[Psi]", "abc"]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"\[ImaginaryI]", " ", "r"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "r"}], ",", "t"}], "}"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7990833621574163`*^9, 3.7990835046415415`*^9}, {
   3.7990835399381857`*^9, 3.799083550215722*^9}, {3.7990836100517635`*^9, 
   3.7990836113442516`*^9}, {3.7990843193392887`*^9, 3.799084365410133*^9}, {
   3.7990844058610024`*^9, 3.799084406228967*^9}, 3.799087393700777*^9, {
   3.799136665093402*^9, 3.799136671685215*^9}, {3.7991436519761653`*^9, 
   3.7991436564910645`*^9}, 3.7996978522571163`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"cb27a031-6616-4475-b60a-d0ce1f3250d0"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[Beta]", " ", 
    SubscriptBox["c", "a"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[Alpha]", " ", 
    SubscriptBox["c", "b0"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[Beta]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "a"], " ", 
    SubscriptBox["c", "T"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[Alpha]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "b0"], " ", 
    SubscriptBox["c", "T"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7990835418600063`*^9, 3.7990835507183685`*^9}, {
   3.799083611968628*^9, 3.799083635269291*^9}, 3.7990843110255117`*^9, {
   3.7990843482470055`*^9, 3.799084366351612*^9}, 3.7990844139722624`*^9, 
   3.799087393700777*^9, 3.7991366969045897`*^9, {3.7991436519761653`*^9, 
   3.7991436564910645`*^9}, 3.7996011702732925`*^9, 3.799697896364051*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"8f98ad88-fdba-43fd-98e4-a22d9577b5bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extra beamsplitter in Rail 2", "Subsubsection",
 CellChangeTimes->{{3.7996977725089226`*^9, 
  3.7996977865615983`*^9}},ExpressionUUID->"d9f1dcbd-e050-4660-9685-\
1e051c79e55e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["c", "b0"], ",", 
     SubscriptBox["c", "d0"]}], "}"}], "=", 
   RowBox[{"B", ".", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["c", "b"], ",", 
      SubscriptBox["c", "d"]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.799697790643303*^9, 3.7996978833484535`*^9}, {
  3.7996979184609175`*^9, 3.7996979189045677`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"2d00d780-f67f-4b83-932a-c236438083bd"],

Cell[CellGroupData[{

Cell["\<\
Modes T and a mix at the first beamsplitter:                                  \
                                                                              \
                                                                              \
                                                                              \
                                                                              \
                                                                              \
                                                                              \
                                                                              \
   \
\>", "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.799083508551092*^9, 3.799083519025055*^9}, {
   3.799084475443775*^9, 3.799084480842329*^9}, 3.799087393700777*^9, {
   3.7991436519761653`*^9, 3.7991436564910645`*^9}, {3.799338075185395*^9, 
   3.799338096530762*^9}},ExpressionUUID->"88ee5585-2ccb-4252-b59f-\
27ba4d5eca4a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["c", "T"], ",", 
     SubscriptBox["c", "a"]}], "}"}], "=", 
   RowBox[{"B", ".", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["c", "T1"], ",", 
      SubscriptBox["c", "a1"]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", "\[Psi]"}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7990835266895657`*^9, 3.7990835952144256`*^9}, 
   3.799087393700777*^9, {3.7991436519761653`*^9, 3.7991436564910645`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"6736ffe6-5efe-47d6-8f9e-1c7c27406de7"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[Alpha]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"t", " ", 
       SubscriptBox["c", "b"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "r", " ", 
       SubscriptBox["c", "d"]}]}], ")"}]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[Beta]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"t", " ", 
       SubscriptBox["c", "a1"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "r", " ", 
       SubscriptBox["c", "T1"]}]}], ")"}]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[Alpha]", " ", "\[Epsilon]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"t", " ", 
       SubscriptBox["c", "b"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "r", " ", 
       SubscriptBox["c", "d"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "r", " ", 
       SubscriptBox["c", "a1"]}], "+", 
      RowBox[{"t", " ", 
       SubscriptBox["c", "T1"]}]}], ")"}]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[Beta]", " ", "\[Epsilon]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"t", " ", 
       SubscriptBox["c", "a1"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "r", " ", 
       SubscriptBox["c", "T1"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "r", " ", 
       SubscriptBox["c", "a1"]}], "+", 
      RowBox[{"t", " ", 
       SubscriptBox["c", "T1"]}]}], ")"}]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.799083596259615*^9, 3.7990836356672277`*^9, 3.7990844173492713`*^9, 
   3.799087393700777*^9, 3.7991366984568844`*^9, {3.7991436519761653`*^9, 
   3.7991436564910645`*^9}, 3.7996979266853876`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"4afe4222-d524-4398-b46c-53442c88b570"],

Cell[BoxData[
 RowBox[{"Expand", "[", "\[Psi]", "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7990873937018113`*^9, {3.7991436519771605`*^9, 3.7991436564920616`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"1b3f899d-aca2-44b4-9926-e533e2a860f6"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"t", " ", "\[Beta]", " ", 
    SubscriptBox["c", "a1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{
   "\[ImaginaryI]", " ", "r", " ", "t", " ", "\[Beta]", " ", "\[Epsilon]", 
    " ", 
    SubsuperscriptBox["c", "a1", "2"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"t", " ", "\[Alpha]", " ", 
    SubscriptBox["c", "b"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{
   "\[ImaginaryI]", " ", "r", " ", "t", " ", "\[Alpha]", " ", "\[Epsilon]", 
    " ", 
    SubscriptBox["c", "a1"], " ", 
    SubscriptBox["c", "b"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "r", " ", "\[Alpha]", " ", 
    SubscriptBox["c", "d"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "2"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "a1"], " ", 
    SubscriptBox["c", "d"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "r", " ", "\[Beta]", " ", 
    SubscriptBox["c", "T1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "2"], " ", "\[Beta]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "a1"], " ", 
    SubscriptBox["c", "T1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["t", "2"], " ", "\[Beta]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "a1"], " ", 
    SubscriptBox["c", "T1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["t", "2"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "b"], " ", 
    SubscriptBox["c", "T1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{
   "\[ImaginaryI]", " ", "r", " ", "t", " ", "\[Alpha]", " ", "\[Epsilon]", 
    " ", 
    SubscriptBox["c", "d"], " ", 
    SubscriptBox["c", "T1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{
   "\[ImaginaryI]", " ", "r", " ", "t", " ", "\[Beta]", " ", "\[Epsilon]", 
    " ", 
    SubsuperscriptBox["c", "T1", "2"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.799083912309419*^9, 3.799084307223675*^9, 3.7990844210643034`*^9, 
   3.7990873937018113`*^9, 3.7991367004406347`*^9, {3.7991436519771605`*^9, 
   3.7991436564920616`*^9}, 3.7996979314283657`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"05acdc94-205d-4404-9518-3e5c86464100"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["A", "0"], ",", 
    SubscriptBox["A", "1"], ",", 
    SubscriptBox["A", "2"]}], "}"}], "=", 
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Expand", "[", "\[Psi]", "]"}], ",", 
    SubscriptBox["c", "T1"]}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7990836610514064`*^9, 3.799083662038782*^9}, {
   3.799083714222274*^9, 3.7990837483769155`*^9}, {3.7990838355864954`*^9, 
   3.7990838875017576`*^9}, {3.799084093126999*^9, 3.799084143734744*^9}, {
   3.7990841819834538`*^9, 3.7990842068041344`*^9}, {3.7990842705148144`*^9, 
   3.7990842826892314`*^9}, 3.7990873937018113`*^9, {3.7991436519771605`*^9, 
   3.7991436564920616`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"1a5e1205-88f3-4429-ba40-c40c26e5f8d8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"t", " ", "\[Beta]", " ", 
      SubscriptBox["c", "a1"]}], 
     SqrtBox[
      RowBox[{"1", "+", 
       SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
    FractionBox[
     RowBox[{
     "\[ImaginaryI]", " ", "r", " ", "t", " ", "\[Beta]", " ", "\[Epsilon]", 
      " ", 
      SubsuperscriptBox["c", "a1", "2"]}], 
     SqrtBox[
      RowBox[{"1", "+", 
       SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
    FractionBox[
     RowBox[{"t", " ", "\[Alpha]", " ", 
      SubscriptBox["c", "b"]}], 
     SqrtBox[
      RowBox[{"1", "+", 
       SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
    FractionBox[
     RowBox[{
     "\[ImaginaryI]", " ", "r", " ", "t", " ", "\[Alpha]", " ", "\[Epsilon]", 
      " ", 
      SubscriptBox["c", "a1"], " ", 
      SubscriptBox["c", "b"]}], 
     SqrtBox[
      RowBox[{"1", "+", 
       SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "r", " ", "\[Alpha]", " ", 
      SubscriptBox["c", "d"]}], 
     SqrtBox[
      RowBox[{"1", "+", 
       SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["r", "2"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
      SubscriptBox["c", "a1"], " ", 
      SubscriptBox["c", "d"]}], 
     SqrtBox[
      RowBox[{"1", "+", 
       SuperscriptBox["\[Epsilon]", "2"]}]]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "r", " ", "\[Beta]"}], 
     SqrtBox[
      RowBox[{"1", "+", 
       SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["r", "2"], " ", "\[Beta]", " ", "\[Epsilon]", " ", 
      SubscriptBox["c", "a1"]}], 
     SqrtBox[
      RowBox[{"1", "+", 
       SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["t", "2"], " ", "\[Beta]", " ", "\[Epsilon]", " ", 
      SubscriptBox["c", "a1"]}], 
     SqrtBox[
      RowBox[{"1", "+", 
       SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["t", "2"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
      SubscriptBox["c", "b"]}], 
     SqrtBox[
      RowBox[{"1", "+", 
       SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
    FractionBox[
     RowBox[{
     "\[ImaginaryI]", " ", "r", " ", "t", " ", "\[Alpha]", " ", "\[Epsilon]", 
      " ", 
      SubscriptBox["c", "d"]}], 
     SqrtBox[
      RowBox[{"1", "+", 
       SuperscriptBox["\[Epsilon]", "2"]}]]]}], ",", 
   FractionBox[
    RowBox[{
    "\[ImaginaryI]", " ", "r", " ", "t", " ", "\[Beta]", " ", "\[Epsilon]"}], 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox["\[Epsilon]", "2"]}]]]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7990837235632925`*^9, {3.799083847545556*^9, 3.7990838892261295`*^9}, 
   3.799084149824458*^9, 3.799084207790495*^9, 3.7990843021871395`*^9, 
   3.79908442486817*^9, 3.7990873937018113`*^9, 3.7991367008099017`*^9, {
   3.7991436519771605`*^9, 3.7991436564920616`*^9}, {3.7996979490938215`*^9, 
   3.7996979600540795`*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"7719ec21-6b61-4d9b-90ad-93738e2912c9"],

Cell["The target passes through the nonlinear gate:", "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.799084044679553*^9, 3.799084065002183*^9}, {
   3.7990844689202156`*^9, 3.799084470205784*^9}, 3.7990873937018113`*^9, {
   3.7991436519771605`*^9, 
   3.7991436564920616`*^9}},ExpressionUUID->"e5cf3cf1-2642-4a92-9407-\
5a662719d3c0"],

Cell[BoxData[
 RowBox[{"\[Psi]", "=", 
  RowBox[{
   SubscriptBox["A", "0"], "+", 
   RowBox[{
    SubscriptBox["A", "1"], 
    SubscriptBox["c", "T1"]}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "X"}]], 
    SubscriptBox["A", "2"], 
    SuperscriptBox[
     SubscriptBox["c", "T1"], "2"]}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7990840705364227`*^9, 3.799084072719593*^9}, {
   3.7990842104743376`*^9, 3.799084294860735*^9}, 3.7990873937018113`*^9, {
   3.7991436519771605`*^9, 3.7991436564920616`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"c4e9629f-cbcc-401b-aad7-638192fa8b84"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"t", " ", "\[Beta]", " ", 
    SubscriptBox["c", "a1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{
   "\[ImaginaryI]", " ", "r", " ", "t", " ", "\[Beta]", " ", "\[Epsilon]", 
    " ", 
    SubsuperscriptBox["c", "a1", "2"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"t", " ", "\[Alpha]", " ", 
    SubscriptBox["c", "b"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{
   "\[ImaginaryI]", " ", "r", " ", "t", " ", "\[Alpha]", " ", "\[Epsilon]", 
    " ", 
    SubscriptBox["c", "a1"], " ", 
    SubscriptBox["c", "b"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "r", " ", "\[Alpha]", " ", 
    SubscriptBox["c", "d"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "2"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "a1"], " ", 
    SubscriptBox["c", "d"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "r", " ", "\[Beta]"}], 
      SqrtBox[
       RowBox[{"1", "+", 
        SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["r", "2"], " ", "\[Beta]", " ", "\[Epsilon]", " ", 
       SubscriptBox["c", "a1"]}], 
      SqrtBox[
       RowBox[{"1", "+", 
        SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["t", "2"], " ", "\[Beta]", " ", "\[Epsilon]", " ", 
       SubscriptBox["c", "a1"]}], 
      SqrtBox[
       RowBox[{"1", "+", 
        SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["t", "2"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
       SubscriptBox["c", "b"]}], 
      SqrtBox[
       RowBox[{"1", "+", 
        SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
     FractionBox[
      RowBox[{
      "\[ImaginaryI]", " ", "r", " ", "t", " ", "\[Alpha]", " ", "\[Epsilon]",
        " ", 
       SubscriptBox["c", "d"]}], 
      SqrtBox[
       RowBox[{"1", "+", 
        SuperscriptBox["\[Epsilon]", "2"]}]]]}], ")"}], " ", 
   SubscriptBox["c", "T1"]}], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "X"}]], " ", "r", " ", "t", " ", "\[Beta]",
     " ", "\[Epsilon]", " ", 
    SubsuperscriptBox["c", "T1", "2"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7990842991552105`*^9, 3.799084433568714*^9, 3.7990873937018113`*^9, 
   3.799136701067224*^9, {3.7991436519771605`*^9, 3.7991436564930587`*^9}, 
   3.7996979649662137`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"f0daa879-ce76-4adf-bf0e-dc1268b4e35a"],

Cell["Modes T1 and b mix at the second beamsplitter: ", "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.799084483603941*^9, 3.799084513164936*^9}, 
   3.799087393702806*^9, {3.7991436519781585`*^9, 
   3.7991436564930587`*^9}},ExpressionUUID->"d6b062c3-bf2b-4231-a749-\
1db986b78436"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["c", "T1"], ",", 
     SubscriptBox["c", "b"]}], "}"}], "=", 
   RowBox[{"B", ".", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["c", "T2"], ",", 
      SubscriptBox["c", "b1"]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", "\[Psi]", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.799084527780846*^9, 3.799084568824088*^9}, {
   3.7990846707865553`*^9, 3.7990846737486057`*^9}, 3.799087393702806*^9, {
   3.7991436519781585`*^9, 3.7991436564930587`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"a455cec6-8e9d-466d-8311-a66e81e32944"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"t", " ", "\[Beta]", " ", 
    SubscriptBox["c", "a1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{
   "\[ImaginaryI]", " ", "r", " ", "t", " ", "\[Beta]", " ", "\[Epsilon]", 
    " ", 
    SubsuperscriptBox["c", "a1", "2"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["t", "2"], " ", "\[Alpha]", " ", 
    SubscriptBox["c", "b1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "2"], " ", "\[Beta]", " ", 
    SubscriptBox["c", "b1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "r", " ", 
    SuperscriptBox["t", "2"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "a1"], " ", 
    SubscriptBox["c", "b1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["r", "3"], " ", "\[Beta]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "a1"], " ", 
    SubscriptBox["c", "b1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "r", " ", 
    SuperscriptBox["t", "2"], " ", "\[Beta]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "a1"], " ", 
    SubscriptBox["c", "b1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "r", " ", 
    SuperscriptBox["t", "3"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
    SubsuperscriptBox["c", "b1", "2"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "X"}]], " ", 
    SuperscriptBox["r", "3"], " ", "t", " ", "\[Beta]", " ", "\[Epsilon]", 
    " ", 
    SubsuperscriptBox["c", "b1", "2"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "r", " ", "\[Alpha]", " ", 
    SubscriptBox["c", "d"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "2"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "a1"], " ", 
    SubscriptBox["c", "d"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "2"], " ", "t", " ", "\[Alpha]", " ", "\[Epsilon]", 
    " ", 
    SubscriptBox["c", "b1"], " ", 
    SubscriptBox["c", "d"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "r", " ", "t", " ", "\[Alpha]", " ", 
    SubscriptBox["c", "T2"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "r", " ", "t", " ", "\[Beta]", " ", 
    SubscriptBox["c", "T2"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "2"], " ", "t", " ", "\[Alpha]", " ", "\[Epsilon]", 
    " ", 
    SubscriptBox["c", "a1"], " ", 
    SubscriptBox["c", "T2"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "2"], " ", "t", " ", "\[Beta]", " ", "\[Epsilon]", 
    " ", 
    SubscriptBox["c", "a1"], " ", 
    SubscriptBox["c", "T2"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["t", "3"], " ", "\[Beta]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "a1"], " ", 
    SubscriptBox["c", "T2"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "2"], " ", 
    SuperscriptBox["t", "2"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "b1"], " ", 
    SubscriptBox["c", "T2"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["t", "4"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "b1"], " ", 
    SubscriptBox["c", "T2"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "X"}]], " ", 
    SuperscriptBox["r", "2"], " ", 
    SuperscriptBox["t", "2"], " ", "\[Beta]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "b1"], " ", 
    SubscriptBox["c", "T2"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "r", " ", 
    SuperscriptBox["t", "2"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "d"], " ", 
    SubscriptBox["c", "T2"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "r", " ", 
    SuperscriptBox["t", "3"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
    SubsuperscriptBox["c", "T2", "2"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "X"}]], " ", "r", " ", 
    SuperscriptBox["t", "3"], " ", "\[Beta]", " ", "\[Epsilon]", " ", 
    SubsuperscriptBox["c", "T2", "2"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7990845694334955`*^9, 3.7990846742662387`*^9, 3.799087393702806*^9, 
   3.7991367012946167`*^9, {3.7991436519781585`*^9, 3.7991436564930587`*^9}, 
   3.7996979709262233`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"133fb080-42dc-4b24-b238-632907a85f1a"],

Cell["Modes T2 and c mix at the third beamsplitter:", "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7990845530721984`*^9, 3.799084566270913*^9}, {
   3.799084630385564*^9, 3.7990846438216305`*^9}, 3.799087393702806*^9, {
   3.7991436519781585`*^9, 
   3.7991436564930587`*^9}},ExpressionUUID->"56f15145-a3ab-4b2a-820c-\
b6f48e5eb0f2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["c", "T2"], ",", 
     SubscriptBox["c", "c"]}], "}"}], "=", 
   RowBox[{"B", ".", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["c", "T3"], ",", 
      SubscriptBox["c", "c1"]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", "\[Psi]", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.799084725773511*^9, 3.799084743849207*^9}, {
   3.7990848048461204`*^9, 3.7990848142789426`*^9}, 3.799087393702806*^9, {
   3.7991436519781585`*^9, 3.7991436564930587`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"c3b1e03d-4c0d-47eb-b200-af74b641c6f1"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"t", " ", "\[Beta]", " ", 
    SubscriptBox["c", "a1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{
   "\[ImaginaryI]", " ", "r", " ", "t", " ", "\[Beta]", " ", "\[Epsilon]", 
    " ", 
    SubsuperscriptBox["c", "a1", "2"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["t", "2"], " ", "\[Alpha]", " ", 
    SubscriptBox["c", "b1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "2"], " ", "\[Beta]", " ", 
    SubscriptBox["c", "b1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "r", " ", 
    SuperscriptBox["t", "2"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "a1"], " ", 
    SubscriptBox["c", "b1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["r", "3"], " ", "\[Beta]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "a1"], " ", 
    SubscriptBox["c", "b1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "r", " ", 
    SuperscriptBox["t", "2"], " ", "\[Beta]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "a1"], " ", 
    SubscriptBox["c", "b1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "r", " ", 
    SuperscriptBox["t", "3"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
    SubsuperscriptBox["c", "b1", "2"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "X"}]], " ", 
    SuperscriptBox["r", "3"], " ", "t", " ", "\[Beta]", " ", "\[Epsilon]", 
    " ", 
    SubsuperscriptBox["c", "b1", "2"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "2"], " ", "t", " ", "\[Alpha]", " ", 
    SubscriptBox["c", "c1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "2"], " ", "t", " ", "\[Beta]", " ", 
    SubscriptBox["c", "c1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["r", "3"], " ", "t", " ", "\[Alpha]", " ", "\[Epsilon]", 
    " ", 
    SubscriptBox["c", "a1"], " ", 
    SubscriptBox["c", "c1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["r", "3"], " ", "t", " ", "\[Beta]", " ", "\[Epsilon]", 
    " ", 
    SubscriptBox["c", "a1"], " ", 
    SubscriptBox["c", "c1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "r", " ", 
    SuperscriptBox["t", "3"], " ", "\[Beta]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "a1"], " ", 
    SubscriptBox["c", "c1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["r", "3"], " ", 
    SuperscriptBox["t", "2"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "b1"], " ", 
    SubscriptBox["c", "c1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "r", " ", 
    SuperscriptBox["t", "4"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "b1"], " ", 
    SubscriptBox["c", "c1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "X"}]], " ", 
    SuperscriptBox["r", "3"], " ", 
    SuperscriptBox["t", "2"], " ", "\[Beta]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "b1"], " ", 
    SubscriptBox["c", "c1"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["r", "3"], " ", 
    SuperscriptBox["t", "3"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
    SubsuperscriptBox["c", "c1", "2"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "X"}]], " ", 
    SuperscriptBox["r", "3"], " ", 
    SuperscriptBox["t", "3"], " ", "\[Beta]", " ", "\[Epsilon]", " ", 
    SubsuperscriptBox["c", "c1", "2"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "r", " ", "\[Alpha]", " ", 
    SubscriptBox["c", "d"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "2"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "a1"], " ", 
    SubscriptBox["c", "d"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "2"], " ", "t", " ", "\[Alpha]", " ", "\[Epsilon]", 
    " ", 
    SubscriptBox["c", "b1"], " ", 
    SubscriptBox["c", "d"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "2"], " ", 
    SuperscriptBox["t", "2"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "c1"], " ", 
    SubscriptBox["c", "d"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "r", " ", 
    SuperscriptBox["t", "2"], " ", "\[Alpha]", " ", 
    SubscriptBox["c", "T3"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "r", " ", 
    SuperscriptBox["t", "2"], " ", "\[Beta]", " ", 
    SubscriptBox["c", "T3"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "2"], " ", 
    SuperscriptBox["t", "2"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "a1"], " ", 
    SubscriptBox["c", "T3"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "2"], " ", 
    SuperscriptBox["t", "2"], " ", "\[Beta]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "a1"], " ", 
    SubscriptBox["c", "T3"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["t", "4"], " ", "\[Beta]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "a1"], " ", 
    SubscriptBox["c", "T3"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "2"], " ", 
    SuperscriptBox["t", "3"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "b1"], " ", 
    SubscriptBox["c", "T3"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["t", "5"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "b1"], " ", 
    SubscriptBox["c", "T3"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "X"}]], " ", 
    SuperscriptBox["r", "2"], " ", 
    SuperscriptBox["t", "3"], " ", "\[Beta]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "b1"], " ", 
    SubscriptBox["c", "T3"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["r", "2"], " ", 
    SuperscriptBox["t", "4"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "c1"], " ", 
    SubscriptBox["c", "T3"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "X"}]], " ", 
    SuperscriptBox["r", "2"], " ", 
    SuperscriptBox["t", "4"], " ", "\[Beta]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "c1"], " ", 
    SubscriptBox["c", "T3"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "r", " ", 
    SuperscriptBox["t", "3"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
    SubscriptBox["c", "d"], " ", 
    SubscriptBox["c", "T3"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", "r", " ", 
    SuperscriptBox["t", "5"], " ", "\[Alpha]", " ", "\[Epsilon]", " ", 
    SubsuperscriptBox["c", "T3", "2"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "X"}]], " ", "r", " ", 
    SuperscriptBox["t", "5"], " ", "\[Beta]", " ", "\[Epsilon]", " ", 
    SubsuperscriptBox["c", "T3", "2"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.799084815163538*^9, 3.799087393702806*^9, 3.799136701561901*^9, {
   3.7991436519781585`*^9, 3.7991436564940557`*^9}, 3.799697978386067*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"91d8b115-8d4d-4fea-bbfc-d6ad12a70a83"],

Cell["\<\
Project onto the state where we have 0,0,1 photons in the modes \
\[OpenCurlyQuote]a1\[CloseCurlyQuote], \[OpenCurlyQuote]b1\[CloseCurlyQuote] \
and \[OpenCurlyQuote]c1\[CloseCurlyQuote] respectively 
The \[OpenCurlyQuote]1\[CloseCurlyQuote] in the labels of the modes denotes \
that they are outputs modes of beamsplitters \
\>", "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.799085239137124*^9, 3.799085280606283*^9}, {
   3.799086327314589*^9, 3.7990864313434362`*^9}, 3.799087393702806*^9, {
   3.7991436519781585`*^9, 
   3.7991436564940557`*^9}},ExpressionUUID->"f717ac82-8e99-4263-b925-\
432fd429468a"],

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"CoefficientList", "[", 
      RowBox[{
       RowBox[{"Expand", "[", "\[Psi]", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["c", "a1"], ",", 
         SubscriptBox["c", "b1"], ",", 
         SubscriptBox["c", "c1"], ",", 
         SubscriptBox["c", "d"]}], "}"}]}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1", ",", "2", ",", "1"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7990848535349565`*^9, 3.799084913887658*^9}, {
   3.7990849767525864`*^9, 3.7990849874350348`*^9}, {3.7990850268546124`*^9, 
   3.7990850336963615`*^9}, {3.7990866250585904`*^9, 3.7990867118558073`*^9}, 
   3.799087393703804*^9, {3.7991436519791574`*^9, 3.7991436564940557`*^9}, {
   3.7996979860620437`*^9, 3.7996979919262524`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"6366c83a-54f9-427e-a8b9-2ed807be358d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["r", "2"], " ", "t", " ", "\[Alpha]", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["t", "3"], " ", "\[Epsilon]", " ", 
        SubscriptBox["c", "T3"]}]}], ")"}]}], 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox["\[Epsilon]", "2"]}]]]}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "2"], " ", "t", " ", "\[Beta]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "X"}]], " ", 
       SuperscriptBox["t", "3"], " ", "\[Epsilon]", " ", 
       SubscriptBox["c", "T3"]}]}], ")"}]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7990849144451437`*^9, 3.7990849879845576`*^9, 3.7990850345131807`*^9, {
   3.7990866448476644`*^9, 3.7990866621075554`*^9}, {3.7990866984526377`*^9, 
   3.7990867137886043`*^9}, 3.799087393703804*^9, 3.799136702439405*^9, {
   3.7991436519791574`*^9, 3.7991436564940557`*^9}, 3.799697993271758*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"6d53a656-4fe8-4461-90c1-b896280537e6"],

Cell[TextData[{
 "This is the unnormalized state obtained from the postselection.\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["c", "T3"], TraditionalForm]],ExpressionUUID->
  "67521d78-189f-4f8c-99ea-f3ad2e645469"],
 " here represents the creation operator in the target mode after the third \
and final beamsplitter.\n"
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.799085307429574*^9, 3.799085374558079*^9}, {
   3.7990864379138975`*^9, 3.7990864456711802`*^9}, 3.799087393703804*^9, {
   3.7991436519791574`*^9, 
   3.7991436564940557`*^9}},ExpressionUUID->"7e8d4a28-8956-404a-8b9b-\
95b1a51a20da"],

Cell["Probability of success", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.799086450266873*^9, 3.7990864562857947`*^9}, 
   3.799087393703804*^9, {3.7991436519791574`*^9, 
   3.7991436564940557`*^9}},ExpressionUUID->"2cc46486-3b03-4e55-b7d6-\
41989bcab6d0"],

Cell[TextData[{
 "Here we have considered only the probabilistic operations due to three \
postselections. However, there is also a factor that arises from the \
nonlinear-phase ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", "\[ImaginaryI]X"], TraditionalForm]],
  ExpressionUUID->"ec10f342-d97e-4885-970e-6ba9ec50b1d7"],
 " gate from the KLM paper."
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7990864594363813`*^9, 3.799086595796796*^9}, {
   3.7990867499738674`*^9, 3.799086817913244*^9}, 3.799087393703804*^9, {
   3.7991436519791574`*^9, 
   3.7991436564940557`*^9}},ExpressionUUID->"6101fe0b-d95b-47f9-9345-\
c569d5e087eb"],

Cell[TextData[{
 "For case I: corresponding to the input of ",
 Cell[BoxData[
  SubscriptBox[
   TemplateBox[{"01"},
    "Ket"], "ab"]],ExpressionUUID->"7c8e1dd8-e0c1-4389-a704-097ae45dd358"],
 " as the ",
 StyleBox["control ",
  FontWeight->"Bold"],
 "(\[Alpha] term), the probability amplitude that we get after normalizing \
the state in the previous section:"
}], "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7990865989493647`*^9, 3.799086603599973*^9}, {
   3.7990867455766735`*^9, 3.7990867459257402`*^9}, {3.7990868215245886`*^9, 
   3.7990868241276646`*^9}, {3.799086967586115*^9, 3.799087008848853*^9}, 
   3.799087047210251*^9, {3.7990870922308993`*^9, 3.799087169421589*^9}, 
   3.799087393703804*^9, {3.799143651980152*^9, 
   3.7991436564950533`*^9}},ExpressionUUID->"3fb6c8ba-16f8-4d52-913c-\
cbaf65cfe42c"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"\[Epsilon]", ",", "r"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["p", "I"], "=", 
  RowBox[{
   RowBox[{"-", "t"}], 
   FractionBox[
    SuperscriptBox["r", "2"], 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox["\[Epsilon]", "2"]}]]], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"2", 
        SuperscriptBox["t", "3"], "\[Epsilon]"}], ")"}], 
      "2"]}]]}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.799086834191758*^9, 3.799086921274962*^9}, 
   3.799087393703804*^9, {3.799136719351713*^9, 3.7991367239357967`*^9}, {
   3.7991382568735375`*^9, 3.7991382823155217`*^9}, {3.7991435009568615`*^9, 
   3.799143532785809*^9}, 3.799143593199319*^9, {3.7991436519811497`*^9, 
   3.7991436564950533`*^9}, 3.799698081154842*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"358096dd-111d-402b-84d8-f2154a2d9135"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "2"], " ", "t", " ", 
    SqrtBox[
     RowBox[{"1", "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["t", "6"], " ", 
       SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.799136702703668*^9, 3.799136735344104*^9, 3.7991381624948807`*^9, 
   3.799138305422782*^9, 3.79914334660821*^9, 3.7991435027022195`*^9, 
   3.799143534122199*^9, 3.7991435947850246`*^9, {3.7991436519811497`*^9, 
   3.7991436564950533`*^9}, 3.799698082030884*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"6d3dcdbe-3b50-41ea-b3d6-4fe70f550be1"],

Cell[TextData[{
 "For case II: corresponding to the input of ",
 Cell[BoxData[
  SubscriptBox[
   TemplateBox[{"10"},
    "Ket"], "ab"]],ExpressionUUID->"d0ce64b4-3be6-4aa9-aa44-23e3ff8780ac"],
 " as the ",
 StyleBox["control",
  FontWeight->"Bold"],
 " (\[Beta] term), the probability amplitude that we get after normalizing \
that the state is given by:"
}], "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7990865989493647`*^9, 3.799086603599973*^9}, {
   3.7990867455766735`*^9, 3.7990867459257402`*^9}, {3.7990868215245886`*^9, 
   3.7990868241276646`*^9}, {3.799086967586115*^9, 3.799087008848853*^9}, {
   3.799087047210251*^9, 3.7990870674770694`*^9}, {3.799087172176182*^9, 
   3.799087174205784*^9}, 3.7990873937047977`*^9, {3.7991436519811497`*^9, 
   3.7991436564950533`*^9}},ExpressionUUID->"75a67585-2c84-4eae-a49f-\
2dd34d77c758"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["p", 
   StyleBox[
    RowBox[{"I", 
     StyleBox["I",
      FontSlant->"Plain"]}]]], "=", 
  RowBox[{
   RowBox[{"-", "t"}], 
   FractionBox[
    SuperscriptBox["r", "2"], 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox["\[Epsilon]", "2"]}]]], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"2", 
        SuperscriptBox["t", "3"], "\[Epsilon]"}], ")"}], "2"]}]]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7990871961900425`*^9, 3.7990872093668127`*^9}, 
   3.7990873937047977`*^9, {3.7991367414192224`*^9, 3.799136747324915*^9}, {
   3.7991436519811497`*^9, 3.799143656496049*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"32246f4c-ca20-4153-b9df-17e9528e5eee"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "2"], " ", "t", " ", 
    SqrtBox[
     RowBox[{"1", "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["t", "6"], " ", 
       SuperscriptBox["\[Epsilon]", "2"]}]}]]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[Epsilon]", "2"]}]]]}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7991367031644707`*^9, {3.7991367430368533`*^9, 3.7991367478631973`*^9}, 
   3.799143346611203*^9, {3.7991436519811497`*^9, 3.799143656496049*^9}, 
   3.7996980841899977`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"f6d22999-3aaa-41d5-9604-8a7fdac3b534"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Probability of Success", "Section",
 CellChangeTimes->{{3.799498121983304*^9, 
  3.799498133142479*^9}},ExpressionUUID->"6e66ea3c-6ab6-49d3-8417-\
629abe6cc929"],

Cell[CellGroupData[{

Cell["Method-I", "Subsection",
 CellChangeTimes->{{3.7997452398814454`*^9, 
  3.799745245859195*^9}},ExpressionUUID->"e4ec886a-fafc-410d-ab2e-\
dcad71bf5a5f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"t", ",", "\[Epsilon]", ",", "Ps"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", 
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["t", "2"]}]]}], ";", 
  RowBox[{"X", "=", 
   RowBox[{"\[Pi]", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ps", "[", 
    RowBox[{"\[Alpha]_", ",", "\[Phi]_", ",", "\[Epsilon]_", ",", "t_"}], 
    "]"}], "=", 
   RowBox[{"0.18082", "  ", 
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox["r", "4"], 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"4", 
            SuperscriptBox["t", "6"], 
            SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}]}], 
        RowBox[{"1", "+", 
         SuperscriptBox["\[Epsilon]", "2"]}]], 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Alpha]", "2"], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["\[Alpha]", "2"]}], ")"}], 
          SuperscriptBox["t", "2"]}], "+", 
         RowBox[{
          FractionBox[
           RowBox[{"2", "\[Alpha]", 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["\[Alpha]", "2"]}]], "t"}], 
           RowBox[{"1", "+", 
            RowBox[{"4", 
             SuperscriptBox["t", "6"], 
             SuperscriptBox["\[Epsilon]", "2"]}]}]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Phi]", "]"}], 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"4", 
                SuperscriptBox["t", "6"], 
                SuperscriptBox["\[Epsilon]", "2"], " ", 
                RowBox[{"Cos", "[", "X", "]"}]}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "4", 
             SuperscriptBox["t", "6"], 
             SuperscriptBox["\[Epsilon]", "2"], " ", 
             RowBox[{"Sin", "[", "X", "]"}]}]}], ")"}]}]}], ")"}]}], "]"}], 
     "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Ps", "[", 
      RowBox[{"\[Alpha]", ",", "0", ",", "0.1", ",", "t"}], "]"}], ",", 
     "0.004"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Mesh", "\[Rule]", " ", "None"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "1", "]"}], ",", 
      RowBox[{"Opacity", "[", "0.6", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", " ", "Full"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Cambria\>\""}], ",", " ", 
      "Black"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<\!\(\*SubscriptBox[\(P\), \(success\)]\) (\[Epsilon]=0.10, \
X=\[Pi]/2)\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.799745250948541*^9, 3.799745310312879*^9}, {
  3.79974545077264*^9, 3.7997454536080513`*^9}, {3.799745484937088*^9, 
  3.7997454955925045`*^9}, {3.799745670769889*^9, 3.799745735954584*^9}, {
  3.799749685907519*^9, 3.7997496874737177`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"3b866064-0f4a-4c5d-ac11-363ec9d3f38f"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx12QlcTekfx/Ez9r0Yo6KxJMpMGWlBRifGRMsoy4RQKYUSTU2yFZI94l4y
mUJZUtkirZbclj/JDDdL3FQqS4oKpWSmvzHz/Z1Xz7m317zmvJ73fTr3nM95
7rm3a4jbihke7TiOG/fpf+0/bWPmJKZuM/C3wDb8p8jHGz00zL1GWkQOsz7P
w6tsDlVoNcotTr142KprLSMvcPOsMJL35nUz+hqn+twkl59x23HW1oT/I1fv
gq61nHznVUvX+G22/I6RuQU+ivvkpS5rgoYsnMdbHXB7luKjII9yG/e+MNuD
/4L756eMPKX7IbfFWct4l+Q/wnSty8mXGA7q51G3gr+8JFrLWlJJvlHvbnPq
bh9+wNfLTvgonpFLpqcWLProwa++Y24s0a0iP6Q95PYDwzn8g81ds1J8qsk7
NPaVRnW25E3Ni+wUKa/IS/yHWjkbdOP3vj7xsLW1llz68mQjP03LHGN0vdww
t8rXqZDG2H6Z7lw963EfHp3hJ38a3T/f04w6w9NzMzMvFNpTZ/jfvedqd090
pc7wW18EG/catow6w4/OmfettMWfOsNf2GWOOGS3ijrDKwPPHDz582rqDC/a
mdnppu1K6gxftmZTYNO9FdQZftfPbHPnl67UGb40pDz6u7wfqTN8K3dy8pvp
vakzvPCKTsmWeYOpM/pVzvy+0NvpS5oH3zcyZMejxDE0xnaBh43CIWA6dYZn
rfUb0EnLnTrD/7gTU330rS91hveNPPSk3bbV1BkeZnjrRHriBupM84uunz/c
fhN1hg8Y9TFiflEIdYZPPFDU3PneeuoM7663yeVpQwB1hh/qv6e6b4IndYbb
GGvaGvjZUWe4zH5StyWD+lFneGqd5/t+q3SpMzpl1A22Xx48ljrDI65eCbfd
MoN+H37XY0Hou3eLaIytyZTmGH9nf+oMzyxK+H1GZDB1hksWa7Y31ttMneHR
3x60/K10O3WGt1h9MDnRMYw6w7tXJr+RxOygzrQf85jGkrTN1BkepV0zuVkr
iDrDA8PsFr+Y4kOd4Q7506JMm6ZTZ/hElympGz0GUGd4TYm8MbRCnzqjh05L
86SlTjOpM7zMdseU7908hXX5n8ef/SE8dWYA7RfODT3n1xK0kcbYdktbm9oy
bTt1hvcdoCOtdtpDneF3Q72s+r2XUGf49sgIM9dEKXWGD3zV1e5iFwl1hhuV
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
xgiva7yv6YeEaQdmJZDjPqzeb2/jvaPx/MqF7c75KMrpenVMCH9XI0nkOebn
Y3y9/Cc3X16ia/3pv/O8cpeJXPHp5pzy6X1N+Xy5yD9P/3SfZ/3Rvw+I/O/W
f35KRb738/7LRT70H/70eZL1i593/0zkUz4faJXIH34+nmqRe38+4Vci/3dU
p8I5Dl3ZzspdJnJ0Vj5fLnJ0Zh2dWUdn1tGZdXRmHZ1ZR2fW0Zl1dGYdnZU7
OstUdGZdJvK2ndn5cpG37SxT0VmmorNMRWeZis4yFZ1lKjrLVHSWqegsU9GZ
dY5DJ7azcpeJHGPl8+UiR2fW0Zl1dGYdnVlHZ9bRmXV0Zh2dWUdn1tFZuWM9
y1WsZ9ZlIm+7ntn5cpG3Xc9yFetZrmI9y1WsZ7mK9SxXsZ7lKtazXMV6lqtY
z3IV65l1jsN5s52Vu0zk6Kx8vlzkGLOOzqyjM+vozDo6s47OrKMz6+jMOjqz
js7KneNwfmxn5S4TOTorny8XOY6DdYxZR2fW0Zl1dGYdnVlHZ9bRmXV0Zh2d
lTvH4TzYzspdJnJ0Vj5fLnJ0Zh3HxzrGrKMz6+jMOjqzjs6sozPr6Mw6Oit3
jsPxsp2Vu0zk6Kx8vlzk6Mw6OrOO42YdY9bRmXV0Zh2dWUdn1tGZdXRW7hyH
42I7K3eZyNFZ+Xy5yNGZdXRmHZ1Zx/mwjjHr6Mw6OrOOzqyjM+vorNw5Ds/P
dlbuMpGjs/L5cpGjM+vozDo6s47OrOM8WceYdXRmHZ1ZR2fW0Vm5cxyeh+2s
3GUiR2fl8+UiR2fW0Zl1dGYdnVlHZ9Zx/qxjzDo6s47OrKOzcuc47I/trNxl
Ikdn5fPlIkdn1tGZdXRmHZ1ZR2fW0Zl1dGEdY9bRmXV0Vu4ch99jOyt3mcjR
Wfl8ucjRmXV0Zh2dWUdn1tGZdXRmHZ1ZRy/WMWYdnZU7fupEnZW7TOTorHy+
XOTozHrb7+vqRJ1Zb/t9XZ2oM+ttv6+rE3Vmve33dXWizqxjrLxDLG3Z/qz/
m+G1ivl1IscYv8fun3WMVbmq48f+lM9nv6eNVdmHfd5/50to23Zd1YocYzzO
zme9bWfx/pUfv0Tl8bP7bztf/P0t+7yYp+r42ef9P+KcmlI=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], EdgeForm[None], 
       Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[Polygon3DBox[CompressedData["
1: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
G3xuvd/JBtb//zqG5u8=
           "]],
          Annotation[#, "Charting`Private`Tag$6227#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.6], EdgeForm[None], 
       Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[Polygon3DBox[CompressedData["
1:eJxNmHf4T3UUx3/3ykyKhiQtuxAN6c+0d9GUlhlJNCgNKSKUElGyItIwGiIV
IWlISktGRINSUaSMzuu5r/tcf5zn/O4953PO63zu/d7P+/kd3ebWFl3TkpKS
F5KSklLhR4V/KezFsJZhp4edEdY4kpqF1Q07Jqx53Ls07DLjZ4Zdrj8r7Kqw
c8LODWsVdl7Y+WFXGD877Eo9eS2SrCb9bnL91dq5ru/oGmI32p9114ZdGHZR
2PHBVjusVlgb48zRVg9vBzmo1TrsAte3M84c7fXkXSM7eZ1kYqbOeuL3hnUJ
uyWsX9idYT3Cbg27PuyGsJvNpWc37zHHbUnG2tZ17WXsbpzY7cZhvEPf3p6t
3YNb9NfZu4N71lPPvt4f1lWuXs4A1z166vU2njNe4l4/4D24HpQbrruszd7c
raduH3PJe8hc2OeGTQubHtbXe8z9bthUY4NkYl8H2IPaj+hhfzTsPmd6TA/7
E/aG8Ul702eIceZ4XE/eQOvR77mwoa4bag3Wj7cu956Wg3VPhT0c1j9shB7e
Z4wzx7Nhg+UdZ29qDU+yd4X1o40zx1hZyRsmO3kT5OLeRD01ZoZNCpts/57u
F7/pkfI+by68U7wH48vyjXbfx8rIN2CUsVeMj/H5jDFvkvVG2HuE/aZbgz2b
oWdf3zQPrtedAa439NSbZXyK+9LDed5Ksm8SXG/LDder1mZvXtNTd4655L1j
7lT5Bvj85skKY8X4XuwMvyvsfZnY1/n2oPYCPezfhX0c9knYInOZ78Ow2fJ+
pJ9j7hzZP9HDtdB69PvAGuzBEuP8JpYm2W8G3uWugXFZ2Hsyfq6H8UvjcH2l
p/YKmWD5zHqs/yZssezf6sn71P705hvAt4Bv2UpngHG1eTCuk+OLsDXeo8/3
enhXuY41P5jLTBvkhvensK/l+lkP1y965lhrPfpt9B7PZJMexl/19NwsK1y/
6+H6Q0+9P/Xr5FrgXm/xHrzb5YPrN2tT96+w9c6xLexH87a6br17zbvG+/SP
NZjpX2eAfY98cO10Bvrs0jNHSZrF4U3SzMNYOv7+2/5l04yVPmmaxWEplWYe
3t3Wo9/Baba+jLbNWet4/6Cw/dKMg3UV0oz7v7B908zDWynN4syxf5p5eKuk
GQf9y4ftcO4D0izOHJX15JVLM3byDpGJmarqieca4go5Nrlf1dOMid/0oebS
83DvMccRacYKY8OwejLWME7sSOMwHqWHsZr12IPD9PSrqTbit4KWQXtwbqJv
rpI110nojLNk5xqNc7V5O3wveCfQPa2MoT8469EQ6KSW9jjDelyfb5w1aJpr
XYMe4m80Et9vzpkh8qExcn3CGdgrKTRQu6TQT23k7WAMVs79jvZkfWfn7Gge
3J3MyzVTJ3nbWZdvMecR32a+SXwrliaFpuliPzRCrn3wt8uOxuhmvx7mdXaO
XI/gORP5fqFtujpzN69vMt7T/eqSFHroXveFPPQDOgPdwBn+uLW4d59M6IUH
rf2Aa+DtawxGzrZ+SaFpBsjdzzw4+pt3l/H+ztrHurfZp4+zDrQWrIO8Jj5U
1t4+88eSQgMNkSnXO22s212OYcbg4Kwf7pxolcFJob0elX24a3I9xBq+e8t8
rm3dI3rk2rRHUmiISTKhL8ZYF+3xrLzjjMHKuT/enuiHic453jy4J5iXa6YJ
8o6xbq4bch2B5xvNuccZtcTe6Aj0BGfhUmO8s+iUF5JC60xPCp2U66ZXXD/S
3MnOMM28ca6b5n5Ncp5cc8xPCp2EVkAjcJ4vkgldkesj/GxrzHQNvd82b5oz
5Fobj87gXXnGmWb4zObJ/o7rJ9t7pnPM8nq6uXPdv/muhwMtsVgONMlC1y/y
OtdJ5A1wj0YkhWYiNthnMMpn+HpS6LCF7lGuqz6Wd4nXfJer+50mj3MdzbC/
33fOAc5wztZfZUVvfG3t5a7JtdE39kBjrPA94PxfJesK8+i90rwlxlc685fW
zXXbsqTQasRyzbQmKTRQronwP8qErliXFNro56TQPbkOwm+0x1rrfu66tfJu
dP1Se67WNrsvuU5CJ6AjUs/pXEuRh75BU2xNCi31h6xoib/l40zfLhdn9r/O
tN08OHaYt9H4Dnm3WPcH+2xx1p3WynXSzqTQOqlaqUQtkmumErUS2mafNHse
660NRxl1Dxzl1BzMudsezL3Ha9jLqlFgLa/m4FlusC5zVFA35JqpgnxV9tI+
ldUZ1K2kFmns/13q7KWBck2EP9j/d/B/j+vsX03tU9r4QWmhySo5/wHqm3Lm
Vt1L01TbS/ccKUcNNVQlfzc11E1HyV1aRvazUdix6qETvK6pBqklZ0XrVVcz
kYseOc55LnLvlvu7aGB9Zjk1rEnY0fagV3OfzX7qPNjqy3eS+9hAjkaua+rf
p/neVFTLnZhm/0uC5WR7NbR/XWesYo/Kxut7fYprL06ynvQ+0Hsner+ha+rp
T3aWRu4XPMdbq7b3mzrncdZij5o514HO1lhGdCFnOfqoifsF3/+o8bMc
           "]],
          Annotation[#, "Charting`Private`Tag$6227#2"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[
           0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
          "Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0EEywlEcwPF/lETRjgwa7UgsbTgBi6Zldu20qG1OUCfICXQCTqAToBQq
NsYRtEg+/xmLz/v+Zt68mffeXqVeqkWCICiSN4TzruVL02Q54owLLqlyTYsb
OtzTZUrB+SfN6Y8+s2Pu6Yn2dUNfdFMHmtGhbumrbuubvjNizIQPZhzb/9QD
jfFofuCOW9o0aXBFmXNOw/uFb+SbQ2fXdV/nukaKJKuskGCZOEvEiLLIAr//
f/cHTq4jzg==
        "]]}, 
      {GrayLevel[0], 
       Line3DBox[{566, 321, 562, 547, 336, 351, 366, 381, 396, 411, 426, 441, 
        456, 471, 486, 501, 516, 551, 568, 531, 564, 556, 532, 533, 534, 535, 
        536, 537, 538, 539, 540, 541, 542, 543, 544, 553, 569, 545, 565, 557, 
        530, 515, 500, 485, 470, 455, 440, 425, 410, 395, 380, 365, 350, 549, 
        567, 335, 563, 555, 334, 333, 332, 331, 330, 329, 328, 327, 326, 325, 
        324, 323, 322, 554, 566}]}}},
    VertexNormals->CompressedData["
1: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
     "]], {}},
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["t", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\[Alpha]", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      TemplateBox[{0}, "Spacer1"], HoldForm], TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{539.4671278497405, 404.},
  LabelStyle->{FontSize -> 20, FontFamily -> "Cambria", 
    GrayLevel[0]},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotLabel->FormBox[
   "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(success\\)]\\) (\[Epsilon]=0.10, X=\
\[Pi]/2)\"", TraditionalForm],
  PlotRange->{Full, Full, Full},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.920762490761671, -2.28322801430997, 1.5961019042508446`},
  ViewVertical->{-0.3036522856064954, 0.36095426084204574`, 
   0.881763750120135}]], "Output",
 CellChangeTimes->{{3.7997454436437864`*^9, 3.7997454554582915`*^9}, {
   3.799745489974537*^9, 3.7997454960465527`*^9}, {3.799745678964013*^9, 
   3.799745736673813*^9}, 3.7997458278998947`*^9},
 CellLabel->"Out[61]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzMfQmYHVWZds2pqrv03p10d3ZkcxcQZySOQAIOmywKioiAbAlbAknIBtn3
PeksvaW7k04CInsgggguARW3UaOOzhhccFRwmTgZxxk1M47nP+93ljqn7ql7
b4c4/+R5qnKX6ntPnfO97/d+S9W99MZZt02+88ZZt9984+suuPvG6bfdfvPM
150/7W7xUvhXQcBGB8Ffdb4uiMRjHgT+3dgg+Mu+cDI9DGeK3XL9Wkj7qEfs
8HqbPDxg9HJxXOD++7DY9qk/xf+X4sWfWl/xBnoYtann2MbjheQza+zPXG4d
g3/j1Ofi9X+2PvaNyd+Hzphy8pROVQfOpGfytXPtz/7JED5ssjrwXOvDxqnX
lg/1w3rUgfReMg3Vf4TvDWa90Wa/8aNj9rHOG//fPzYItaXQe2pRGoPEyoa0
KB9WB55qfZheYSxYkKfXYq+5W7ZcHT5etEZ2Ej2MJqv3GtXflRmrHtdka6yX
qtcuTY7Ll4OS/Lsh4u+L1rAVc2C+ZurXfGOW85Z35ld9rJ6SqiFb7XFfsMap
6KdRzc0+9d019HIOf6bxiLcwzMagetxXe5w9onPk+xk0UJ4kSj5nSFwQDvkv
nh/q9zlvVPV9zhv/37+vClqpln48a16RZaplI89nV8kKlY+zP5sMugJ6C1Uc
YzPHO+V3Lpk8eXKg/1WAY7H82/an/zV9OL/llltSX2FrktOxY3RQTh+EZ3is
/7ePP81zvP5Hr+oTshXKKcl54hg6LpYnov/G/gwc9xPrz9/q/jl9LcNefkao
P0O+kZywOfjH1oe92fNhofs58pl5KfT8RYl39p6d+4nMPU6eP72Bl35ofeLr
PZ+Yzxpj6rWc+dOXrE8kH0VTU6zyc/Kesz5ofeKJ5hMb6MUIljF48Vty2PBy
rTm171t/dnzqz0L9Z4cfvKlWvHF4fYscyPvfMUYOq8aM4x+tzzku9Tm1+Jwb
3tzO8Dn88LoWzjuH4dP4gXsacdiBz8+onyiOaTKfmTq571mfPjb16Q1N9qcf
mNvI+bZh9P9Dk9v4lA9O5DNvpWWib94/rWHvrPfkm5zBf9f6+NHm41PIpDkL
ivrbDsw5N2++DZ+Mb8M3LZm3XPz9zu7dEkD82bva9TH4G8xdMv3/YH3zyPLf
HKW/meFjxYJsvPb1dJr44oi+uEBfvHD6dL7wAyfLCd827PCzd9Thz82pp+b4
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
jNTgA4lxWkhl1p8xZ6gPKg1X/GdYwBnW4wzhigbHSYUxABElzjDGGY6QZ6jW
kJZ0d6Mx2QJOrmjBljIqa5pxYo7J0hKeJYenMRdYK6eJeLJ1Xs+Z82qh58Q1
e9/8hrfw2dPmYvw1GD64ZrCA4bdJIaiHT3bYaoYfUHyikAigin2ySlggWiqc
CFZp6TXj6USURWalG85Mlmqfe0qRZiZNxwp2nzJnlRIijclJDjY1NB0+810T
+eJ7lsaKZfZ2reRPdy3AJj5b7Ov4093Y9SwQT3sWikP2dPdgCrCJsxD7dkxG
DSZjmJmHUIUBFLB17UqkMU1Bre2CrpigDVWVVsOU+JdnX3OuvaDqTAw0A8lA
eE3WMYJPDnEGIpqBiO/tXMlf6LqDv9r1Tn6kZ0yIPDYTu+E5znux245d3/A8
5/3DI84HhgumOtR/Cn+1/wz+wvYp/OnehXxPT09wPKYlL21kQMZ7uzQh9+yq
VSDu2pV356bOY+dig3tya3zvlpB7vbJpTM9M9VjH3pia1+vzvkj+95THvmwv
iym59abb+OK5S0N7SjrVlHSPYai+RVnzksO8xGpe+I7hYms126GBU8WavNo/
XtjRC9un0lzt7V0l50oRnnhUsOkAtiXmCvHjLpLkTZgreHGEHgZKj935RiJ3
MVeHH7yxJsuNbZSzsK+KWSDDmLtU0PK2QXEuezq7+dOdC/hLXRfwI11jULgV
c1NuKmJMRY6mIrSnQowY+5Af2TGOvzownr/Uf5GYlqe3E7x6ejAF2IJhtA8x
L+Y10jqxmarITFWNiksl4SBWVbPUYDl7yy2AcDquPC1OLGqDnJsnMudGFthH
tY/Sc4Op4Xu2iYnZJiam8wJ+qPNtmJSuYamZiTONxJ0Zhn0N5ztbgaodp+rp
weSQpVAg04DTr8ejULqQATUHdcZc4D12kayvMRPRWAqtwz9YgPJ5aKBFrnG9
nIjH3YmwBGlBT8SBC8690EzE3m0CJ9vuwCSE6DWpYiISEwFYWhvozHP8yE5h
GDvEmQ/IM3+6T5z99lWtONs6ebbiETPnrdypPnnEqwBR566cCeoaU27HwkqW
2xklGebY5Xc/Iv971DOv0vnKOt4Jx5/IF89J5vTVbYJ3to0Bn6hJjTGpYdlJ
zbSuIua4lvNBQuCgnGgxuUG7NbuEpwEZO8o5RdYDO5pTdzp7536UdBZc2KVv
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
U8uYwz7GWuIPJGfqtQTiPr1jNpawLN7KLx6Cx521avHQBpbScG7q7na5eAvc
xSMFoRbvNKUZyFFtuqxGLN6JYvFuEou3JajF4tHaxRZJ/ouAn1g2QRvYh1g+
LJ6hzGbiTaLLJIQPzTJih8VTAqM615ZaS0qqDteeTSZVU6vK/DLPt8S0Vgwr
HKn1e6i9gfOH2wv2Ej/UTs9y2MeGaEODWanTCbKQImKpQ6wzM+tcdIVhbHg1
9qxzC/a5UprFGuuahY9mb5UrPq/yih/++Edq+OdureeLr3onn3nHLFpxwLW/
BsseY9nFoL6/4TwCKdY6KrvisWfFMxxkSlpmrDyrvPLMIy2ZwXNo0gs5F8+x
Wed2rHNqietpHylUt+mNljpMLbXyoWFlZi644KZFhwDdOcKw8iDR8RIUCl06
toSOKmDfmxUL1Gasso3reqxyUTHzs0KK/mH9KP4/BGmxjz2rzAw9J6ucc3GN
v0hWWVYMfQgPj8nSMjd4jrNwHGN9azh/pL1or/TDct31uw+1M/wFK7vM2gEz
I2CLhrkLHuYepdZ169pOvubOa3Wkd+Dzd6YueyOqVis411pXPEzVIt11/axY
1/nWug7Huoa0rhF/bMMy/od1Yl3XNWOLsLQEYIaVDT0LmoZt5QVlnpiwiqXN
5OtkaaPKSxth8YZjafGBYkXVygK/D8tDyqyqFsBiVX3gZa5nTq1vZMA70lpk
uOKFl5/EX17UxPdPNdf3eXn6Zrncs81yZ7cVlWIZaz5NrHmHWHPGt2/sb8fC
g6zXn6fXW9i22DOz6pk8XU4s+3iaGfxSIMNewyKH7iIzs8ixu8gxFlk440cB
4kcMiB9pp2c57GtxXKj8tUXcQZQsvIx6oKcR9aS8cyFrrX3eWVJ2jlbdQ9fq
hxps72sW/ia5tDPNwvuymrkyYNcLX8TCt6iF//n6d5iFz+vll17bbHy98tY+
2MeVQiYCPXOtIJFm5a0gFTz5rIBVZvEI6zwMVqAN4NF2etaAN3JZBhDaBnDk
Y8cZA4iyfHZB9fnYQi0xhVEpxPsSqEmXZlIYuFEu7YyhOO70mtdgzWPeu7Gf
YF+rVn/Xxq381+vfwv+0DhpN7HOS8f9chuejsoKclXXXLL3QA2UWGva0u83W
4KlVjzzYj8yqE/Zjter8MbGuj43ABj/z2IgcXoo8NlGLfQF/G5ZlBqZcAgzj
1fvGS5fQ53UJoekKS9FEvhJNQL8/dHOrTJPMMpfGJqLuemkC07JsQyaFCzrS
3v/Bt8VkHz+6t5F//Prh2j5qpFEI84ikoUjz2LfhHhgFmUcO+7gMQ6SUXuTm
JX0Gw4x/YEdnMKFJeZUzGKoGhqoiqwwmzKKJTIMRu8dHFNSjx4zV0GGkBx+D
HnwUSRrbdMKUhkgSaEg1R1leJHYVQ4Z5LJ67xHgRYR5ODiYlG1RX2Z2et+oT
/jgw/nWMf2N6A606/r/kr1/HF8xcJPmjxRiIGDhs47/XCtuQWz4xjyhtHj7L
SPkOsgxW1jLIZ7DS1Exrpj2EJpRLmYCkdpmZ+TgtXglxEDUwRRKPjajH6us1
f1yaBb2RxyFFHByZhY/chWfWwu/tX5lQgu5RJJ5Q/XA5jx3ky9tB4lEOLhqB
aT3w+am+QOE6aQJTMk2g4CTksPyHljYRTdz+vrNgBmQFrcaLiNE8qaxAbAIm
2g4ioyDDrPWnFF1O947SFWnDsAWZRoDjuk2IH/zlzCHyaEiiBYB8REPaEh4n
S3h8RGTcCgnOsBpz+PSOWYk5BKGygp3YEEiIfSRf6zFbbDRGFQYyUhHFrGsu
lAHGQhFgTKkv7WRSffDvkPrz2PxQ2AmZhlbMNrTLhKHdvYhv39AfFGBjI2Ft
4qwe2bCU/3DdmWRoodoT9djuKSrDPxTBREbKpNP9bsia0jOZ9peSsPBTraxK
+yMJE6btTyeJfXTkc0sxTE9olr1pm6zBPpE6eY9NJvFtQFKKtAzlpfrlNQRM
N0zvxAXcO3G1HnV/VeWeYqIlWJ2YaX54VTOyj94qtWr/PF36oWP+y2/HDYHw
fuPaYR6GSFzXLH1f74b+nLLIn657h6G+OMsiQ5cJZeVJVgfllmLEqDIjZips
fyg1UJIQS1lkSlSHWiO1J3bo48FYcd7eEeK4J/A0McG9I+hZDvuCsUNylbFr
h2HKDkNjh4IaZSc/CG8nCG8n9SuDEbsdRkzxIOnp0ZaAhgkK8zv87K1uApws
QrXFvl3ayDH7Fb8xrs2RMrdubkxafOF5hQO/FoSMxAxs7t6rzuZ7ls+F3YmR
C8OrgbnlYW4NeCQm55kN0/l/rB3F/0tYWxE2VzRG5lPluhRNRhYaIwvLyq7y
jMcqS3NWpaX5fC9T9RFlc64kf3SE4b7QmCAZXhEmqK3viRH0LMa+oN593Ar4
mLE+ZjwzUyx45AEZzb20+yLDgj6/jMQ8jLJ7p7bHLrNFQxNuuDD72SltMFEI
N7dFgYTbhx0bPWa/6zgq00ZdXvym4sUHDS8ujIV59jHYaKOyzN71/XhEz7S1
Prx+Kf+PNdJaQ+wTk2UZJvtnVZ2XnjplsilepECSVfDUvXZemXmUInMzD/jb
3a06jpRtE74oMtNuQ2O3UWW7JRsVlvnkCNV/LR7pjWw6bygUf/p4uwk4SQow
l0xLzVmTaSVzRg8gfHw3dl07i1UYr8OtiD51h7cv+vyQY8FH9euhdCtUQrh1
/TIVoDNstAAbhcfuy8Eea2GidcoyP7PuVn5kTTP/rzVkmWuayTzzWl2uS7w4
xTNBKHOk62kLMlx5YrJhqsDlT4+XT38ww7GJqjxKW4WpmorGQ8bxVsWskXLu
T8LN7zMcK000INMt4JAiDs7jz8gyQw/R+tKrKrOqRGdQBd+iq2gnDuncqRpV
B4NiJVPduqaT33H5BH5w4QiSAg9eR3eSSWTAlZaB/oV/lna4fCPj/nvqikCb
gMXBwrTFcZZxB2TdBVg3E4bd1wLrzinr3rlhK//F2rfAwuHS1gi2FSYewcRz
HhPPGUImocp0xd617rBKQh66kAA8+ofbOsJr7JFt7FmhfCJcE1NnQyHjCBYd
26a+bwQ9Y9gXDTEXFDh8xKw4mbkC18fJe/q6zdWqaRvH9Xc7tT2r6++YtvHO
wdLXPPpiYMtOPusjF/KHbmolfVFy1zrSFx8cgvG/xt8sbjHG77s1o6xo+dUH
2hCU8Rdh+3nYfsHYPlO2/7215xGzw/bz1du+Mvswi8eJwo2lmzS2T31k8jg7
atNWVmMJjsTEmWFzaXrSwh8l/Vti3QmRw5xH4nM/MVKaufhfbPRyHgcUjKlT
GMdMosuYulEgrEw4d+j+08jSHzfsHtns7oqPgrF7BHFIIZCRb7U2YeqyjhaS
ceOGUUs+coYwKWHe+FEpqUGkHUkLc4TIFf97pt5kTD1LVENT4P/FV/0N71i+
ucaYdQPMGjtS0euW8t8JFf1HYvM/roYJ/1FaeIrhY1h57LHyyGPlQ+dzkipE
5cM0nYMVlbGzY27s7dUYewmVU0oiZ4ydaBsWPzKU9r1vw4Q8HgX0oqH3nKH3
nElnMCNnKgjtkOLG54WIkWbe72d0XMeBR9vwaCt2W3a2WUytVYqKBqFSkh6u
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
oaBO7TvXevm1GSuTxRqRZLHiJCRMBFlpIc4U/NtUIa5Y0lqkWYrfJ0TZIImy
IKGp2NBU0AqeEiwlNsFSfUJ9bd+klJdgqU7BUlst9bVxVSlLrVjSC5LiSxb2
8oULevmC+fgZ4Pnze0N6WOCLxItLxQErFsv/Z9/Te+ia6XtAVYNXrvkNA1eJ
07vk1u17T7tslc1UkisoIhvtENQx+yXzTIKi0IS++fQhcVP32u6C4abQcFMB
3CRWoHf1Jv4jmaJS9T2lrZidlvr1IictJSPByI4EDWGltBYz1BXyn89vHI5H
LEVZoLwmN5cVxGm+IrpiSczY4FdYhq086mpjZXVVNOrK9D8LsvKX/1KNkG7p
D8fcR0Bw81cWYaWv5QpVsDhS37LtScLlsSErn7qSwSLaksbqYDGLuQLSWmIb
B/bCs6+PE8T6jXE5ek76i8iMpmz7ObERZDknvpS6K3QrhKxsRqs8fWW0ElSk
L1ZyFzjrSq/Q7h+gjnmqrQjqOrTrFP5c391p6mJEXe0ObZlk+wZJW1pcbdK0
tbJEXPGlgpEWL5K0JQiL3zuvl99zbw+fcw8CpNlze4QnFI/5veK1abN6jkye
1nvwsrv27nvv/O8akSVoS4msyxGO0Y0oGtK0pfq8j80vvOfxVKbQIvsXBLHJ
e9EUypLV6mW4/dTabuZJrxdd2ioq2sJdLZ5aOUnHhMyoKcpZsVTOys9UibQS
3wlBJfgJmxBFP5vfmOc/U8SFIFEGiCpIlEn4xSApq26oCSswpUOnHQqcVUec
9dsqOauCusK1nwvOTHhq4VmZN7EoufCsUVJW6UVn/6foigp1Y1Tpjl5ziCu0
icub5WIqIlS0lVBXE6iLWGucYKtz1XZOzrBWIsOShBhzWStJiAXqtnmmspnN
XrqUmOTFWMbd76hN1Y0VLSZrz86MPVImM0a1xFYjxI7sGQs2SzLzMjN2PNhM
ctmWUi7rEjJs27qUBAOXCRm2ernmsu0Jly0kCcbnEZdBbfXwWXN7OC4Kmz6r
m0+b2c2n3N195No7el+5+Nb7918y+8XvXT7vi4GSYd87b/JuzWVGhjWl+UzG
cEf7m/dpFnND0TM8FPZeSWHfuWLaE4eunzYgIuEu/LxiN7FXt+As2iz2ihP2
Com9/n75uZRp91FXaKiLgbnCsuIqRV4hyKuW/xQ78UgyWGwzGPgLiiuoTGIt
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
s+b+HRg4wcL+eWZehllPKYkFTrfV0mdhPseW3fwl37FZ/GxidsF9Qd2MwKf6
Z9ZnvjoBdqFWu7dAwqnu6cFXSTw02iwypvt2QI18VnpBFWrkp3h82XDX0n7g
sTRGyxKgZOmpG5WlpfWSpe3YqKwtKuHPxpCRhcLnuhnRDMMno2c+DUOJZa4f
e22O349xagbZJWf/VA/v/AZC52jjx0KN5WRhMLOPjQN34uoYQ/Fjr1n0jKxM
LcyhFZTMwCbZWYBvxSTXztRdY1SZ/BFpYXxR2ZW6C2OuNrBO165WtmOkMiuZ
UlKMXK6QXrpNQ3rtDo3ptZZ1NWnrKuLPMlkXC5a36GAJVrUQGzFYoIRWyj2a
o801P7vXqYw/uj8LkgfzFkkyrudmhlyY6R7/44ntWr74y1wKkoMWL+s0xUsw
LuXCQkqsN0gy47rLMa489+UTyZ4ZbzdckHFFensdvpzmDcuF6R2AKUaOcdkY
c18eA9O62Th7sdcTkpLdP8qsobke23wGP7uwbcoHJ1dP97iwDtfUVvG4MHzh
DhYsT9iwnF6zAxiZMDeBFWFwYG74EAZXBIuLGijpdDyZIWYyWnZnomUo1XyY
+TFlZhQpW9GPPef6MZlmciXj9yzFVPVxTv/5Iq6gFhv0YzJS8vq4ZWZjnA2o
lyJKZn2Y3vnWpmJsr463dWZgMkr6VGf4rnM+2v+45GGLR5rCOCyKubit/1+n
V6KzPAbW7kkv5fZ+PwpFS6nB9i8/fJn0ZDC17cHUwOCKyr9Jc2sCcxMXB/bW
bOzNmwhYCUCkC5m5gbOCBsfzTdIzTNDUBQCPX9Oy2cm2nqFomeph/Oy8byBo
+miZK/jnGdszdVAyf8CUfqxMWaYJlNyPSRrWyeyM2Rrn/XwxlhIy+ljAhB1c
z2jt+dMxTdHZ2tzawla2esihLaCgOkVFz4u3bgBLq21oIph66BkamjAyZmhk
Y2sbp9YTTgEs3exQcmoqdmJPBq7AouafN1k/Buoa0qnxBFNrZmd7FlT7iuO+
2Dl0G5OJZUt+YpldbUWrCUrunSvIxNT23UXbwsi65Drr4U6UdKzLFWiVVPbg
KLPvNnZiiBG6uH3gbye0TPnTnKboXI9Haw3b2pohj3YrfQaXWW06OU6v3h64
2XxlbQmzNlA34GezTkH9Lo1ZmnZn2+i+s4yp7efEz4OYO5NmpormmqYdlaVp
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
2VR02jAKu5OqnLPaI+GfTJ7VztlKuUeQc/Z2KgUcc0iSfcpiWvL+VTirib5/
MaPZanabbRatVsU9yBpmr+mc9cX5VVw1fmbOrNL9KaPDQ+6Y7njWgtwKdiTL
nVWCa3o1RF2Y2K66KBZMLFBo5Y3v5SmURKuiV5RBV4lGzzbe+F02qb8Xk6q8
Ma4Rl94YIq6S0Lwr3nzFfTWpLq3K09nNpJo5TTxIhQUkA9IpPzfOLHBUiuji
kWrXub70Erwjyel+j0u3OaddwrIe9wQKxZgNb/CtGKZQGJuYxGjzWtOo0yIX
nGoeVSq8iINTzqFPINfMaRakQ1WMqloLY/QY5tDoYR2aInv1sLrm0FN3981h
tn7mAtNMYgEnsYnI7xKHE1Gr6EB6fUdPelUHTN5puUnOVPpvTgiIx9Es9q49
KVEgjDC7jUjeunxbOYvbWbMYuUjUs7gLcaOFjovlSU5IzHiaidkvs2ood68q
mf2TTHIU9/XrWJ4Z7M2ZwaFWQP3zRyBszlIfBUIlTC0ckX5xw7Cujy6pRqfm
+NL1aQqP8cPwJzSBXYesXUZPaiawoCEoJzCGGYw20kjk4gTKksh9msPch/Ha
kDJtxCjOe0whwg2Pf3GEqP+V+bP7Lr3T12JP3/PjieioRbz3jFT3FBv498Xt
bQOHV08KZSYb0PQdGyI4R+HPRlSWlu2Ikb0q/6nRRxMY0QxuLGawyfalPqLj
ZCjcl6oWlgf3rWSzE9XwJv3oq3PsmsJvjjexkFpXzAx+zAmOy1rzZpCTGz6D
bpuKLiZmmtuiUBQc7ygJY1mryUi638z8zp5Pzqme4I+Cm9D8HR/yoHRDeGpK
A4IKNEbMXQwTF+OsFaTnbFLzRs5zXWvavOBTrWgB8OllYxaNMWogd57UcUTh
731WBfznmTWm7SrPtN2SM22+7iIzbRT2KM3g+z6osNdsajnPMRr64GjT+XFl
B9T4p/zpuCbaiS3gNjeneTvJ7zZny7gHNT2JuAinLCqxWNfEkUaztp6t8bFZ
80kCKl1E4uK4zCcPbtXNg75U8d1jffptnWD7urP2pAM23z1w8S9C2kssIVTz
ppCmfOV1w9J/n9Ha+9fjm509G42v3JLm7JSQr6Stkcsu1pR/RO8Yw5yJrN7l
mnzayE82a7Zy225+zmlWAFew91PxTT5tL7nT5pHdPzgtG+W+0Wnz9Y6b3Xsi
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
ySwPDjGdHQa/knoxNdXgk6AuDalK2f5KJ6r8H0+CYplqYJ1oZU6WzrZqD0zG
d8yTf7O51FMm7V5942zP2KD3sqdDDeV++jLNIXBG17WfQ7unry+otBTOCqaH
Ebz/D8FBquc8Vs5T4xPEhDRMdYWz5YdIaqS0azE7kBbD5Aha8yYnRnmTrdgX
K2rIOe4Cc07axn3OZx37fchaaL4xFdgqMuoonbGtDFTNmWo4BtODWvGyvqPI
eKnerLTaVA4W1aO0j8EDlD2HkYTEihM0xpbPgwtkuZibnVIzamKldk7GgzPF
3JDOjCbY7+OUzOW8tWhdPceQtE55zsXOIOjTl70hllfgM+cbRZ/EI4fGyrIc
7jubDY1K3lZmQ8OVFK5iaacnJwy+g59WzkjVPGRrdvQmm7cqCEdspLIwzVH/
pkdZxfQ2e1Sms9NVo4eHWs+crj4HOVJKJ+Bcezo/nhwpeF1dw+zAmTrSQ/CQ
0qCU7c9mp62MZz82TJb8z/xs0dLV1CXRa+WVPa+5crozfGxmdeBUNFhSMqti
QY0sDVYIk9/EP9pMYzNBXqmyDRy5cn2HIM9VmOt83HHLeGLU4aNxZcYsalTz
oimOPPpc9jz3qG55ZYEZA230hVSfwnT1kWnmFLR50Fhh5YJfxX7yFKRFwMvz
1Mca8j9SsS+ekemiO/c0seZM9b9J5hj6M7G5Sp1ZxfZV0jvop84F4J+s2uG7
jzajoO30RvZ6aoblf+mJaJn/Fz3pSgA=\
\>"],ExpressionUUID->"b9cbb8da-6f48-4181-98a5-2a8e72e5020a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Method-II", "Subsection",
 CellChangeTimes->{{3.7997452326601725`*^9, 
  3.799745236206147*^9}},ExpressionUUID->"865c54db-9689-4884-a7f5-\
963b0dd81852"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"t", "=", 
   FractionBox["1", 
    SuperscriptBox["2", 
     RowBox[{"1", "/", "3"}]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", 
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["t", "2"]}]]}], ";", 
  RowBox[{"X", "=", 
   RowBox[{"\[Pi]", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "[", "\[Epsilon]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ps", "[", 
    RowBox[{"\[Alpha]_", ",", "\[Phi]_", ",", "\[Epsilon]_"}], "]"}], "=", 
   RowBox[{"0.18082", "  ", 
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox["r", "4"], 
         SuperscriptBox["t", "2"], 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"4", 
            SuperscriptBox["t", "6"], 
            SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}]}], 
        RowBox[{"1", "+", 
         SuperscriptBox["\[Epsilon]", "2"]}]], 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Alpha]", "2"], "+", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["\[Alpha]", "2"]}], ")"}], "+", 
         RowBox[{
          FractionBox[
           RowBox[{"2", "\[Alpha]", 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["\[Alpha]", "2"]}]]}], 
           RowBox[{"1", "+", 
            RowBox[{"4", 
             SuperscriptBox["t", "6"], 
             SuperscriptBox["\[Epsilon]", "2"]}]}]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Phi]", "]"}], 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"4", 
                SuperscriptBox["t", "6"], 
                SuperscriptBox["\[Epsilon]", "2"], " ", 
                RowBox[{"Cos", "[", "X", "]"}]}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Phi]", "]"}], "4", 
             SuperscriptBox["t", "6"], 
             SuperscriptBox["\[Epsilon]", "2"], " ", 
             RowBox[{"Sin", "[", "X", "]"}]}]}], ")"}]}]}], ")"}]}], "]"}], 
     "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Ps", "[", 
      RowBox[{"\[Alpha]", ",", "\[Phi]", ",", 
       FractionBox["1", 
        SuperscriptBox["2", 
         RowBox[{"1", "/", "2"}]]]}], "]"}], ",", "0.0001"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Mesh", "\[Rule]", " ", "None"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Opacity", "[", "1", "]"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", " ", "Full"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Cambria\>\""}], ",", " ", 
      "Black"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<\!\(\*SubscriptBox[\(P\), \(success\)]\) \
(\[Epsilon]=\!\(\*FractionBox[\(1\), SuperscriptBox[\(2\), \(1/2\)]]\), X=\
\[Pi]/2)\>\""}]}], "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.799138106832697*^9, 3.7991381588975*^9}, {
   3.799138292014641*^9, 3.7991383174116955`*^9}, {3.7991383815093656`*^9, 
   3.799138477177618*^9}, 3.7991385429198585`*^9, {3.799139462243416*^9, 
   3.799139542114891*^9}, {3.7991405531838155`*^9, 3.799140565447098*^9}, {
   3.799140755348359*^9, 3.7991407627785378`*^9}, {3.799140979811495*^9, 
   3.799141107681628*^9}, {3.7991411604645567`*^9, 3.799141179503625*^9}, {
   3.799141980307149*^9, 3.7991420444915614`*^9}, {3.799142119747393*^9, 
   3.799142123622981*^9}, {3.799142221276947*^9, 3.7991422226402726`*^9}, {
   3.799142274894578*^9, 3.799142310390687*^9}, {3.799142348709284*^9, 
   3.799142364480085*^9}, {3.799142785875126*^9, 3.799142786451603*^9}, 
   3.7991433466101704`*^9, {3.7991435481946154`*^9, 3.7991435656529465`*^9}, {
   3.79914365198215*^9, 3.7991436564970465`*^9}, {3.799157301387926*^9, 
   3.799157355092184*^9}, {3.799157408252565*^9, 3.799157415044385*^9}, {
   3.799157496230934*^9, 3.7991576791074543`*^9}, {3.7993492411955614`*^9, 
   3.7993494181572948`*^9}, {3.7993494794111643`*^9, 3.799349516248027*^9}, 
   3.7993557160997887`*^9, {3.7993572209942074`*^9, 3.799357259173321*^9}, {
   3.799496142710043*^9, 3.799496176788968*^9}, {3.799496264907465*^9, 
   3.799496297755277*^9}, {3.7994986841910744`*^9, 3.7994987034346457`*^9}, {
   3.7995013442804804`*^9, 3.7995014711095223`*^9}, {3.799501508722*^9, 
   3.7995015307936163`*^9}, {3.799501562961705*^9, 3.799501585808585*^9}, 
   3.799501617003216*^9, {3.7995016564398203`*^9, 3.799501679165086*^9}, {
   3.7995021305084653`*^9, 3.799502156026267*^9}, {3.7996981232924967`*^9, 
   3.7996981495589094`*^9}, {3.799698342766898*^9, 3.7996984155828667`*^9}, {
   3.7996984653933935`*^9, 3.799698476109374*^9}, {3.79969859146311*^9, 
   3.7996986092675505`*^9}, {3.799698646064938*^9, 3.7996987246111584`*^9}, {
   3.799707582935545*^9, 3.7997075842851024`*^9}, {3.7997453249378843`*^9, 
   3.799745325810231*^9}, {3.799749670406885*^9, 3.799749672852001*^9}, {
   3.7997565932603045`*^9, 3.7997566001468897`*^9}, 3.8002062465401373`*^9, {
   3.800206281512972*^9, 3.8002062897256436`*^9}, {3.8002063218758464`*^9, 
   3.800206328097823*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"5897c199-35d6-4cad-b68d-608ec026f137"],

Cell[BoxData[
 RowBox[{"Ps", "[", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["2"]], ",", "0", ",", 
   FractionBox["1", 
    SqrtBox["2"]]}], "]"}]], "Input",
 CellChangeTimes->{{3.8002063565437555`*^9, 3.8002063685601206`*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"4bf202a3-1af5-47ef-b003-c45292c73d82"],

Cell[BoxData["0.0037373421708145125`"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.799138165192629*^9, {3.799138302980274*^9, 3.7991383180580096`*^9}, {
   3.7991383886343336`*^9, 3.799138477610464*^9}, 3.7991385444048624`*^9, {
   3.7991395312958136`*^9, 3.799139542801092*^9}, 3.799140763281186*^9, {
   3.7991409971431723`*^9, 3.7991410166340733`*^9}, {3.7991410521940017`*^9, 
   3.79914110836983*^9}, {3.799141168051277*^9, 3.799141180019287*^9}, {
   3.7991420013987637`*^9, 3.799142045117888*^9}, 3.799142124776931*^9, {
   3.7991423004123993`*^9, 3.799142310913287*^9}, {3.799142349528092*^9, 
   3.799142365039628*^9}, 3.799142787358162*^9, 3.7991433466101704`*^9, 
   3.799143479429411*^9, {3.7991435414346857`*^9, 3.799143566434851*^9}, {
   3.799143641933017*^9, 3.7991436564970465`*^9}, {3.7991573153714933`*^9, 
   3.7991573558292274`*^9}, {3.7991575448358335`*^9, 
   3.7991575672827997`*^9}, {3.7991576067062874`*^9, 3.799157680428917*^9}, 
   3.7993494233136005`*^9, {3.7993494662406306`*^9, 3.7993495169277124`*^9}, 
   3.79935724468915*^9, {3.799496147368593*^9, 3.799496181682887*^9}, {
   3.7994962669320536`*^9, 3.799496298299821*^9}, {3.7994986870713778`*^9, 
   3.799498704009159*^9}, 3.799501482640704*^9, 3.7995015311865654`*^9, {
   3.7995015717182426`*^9, 3.799501586743088*^9}, 3.7995016296593924`*^9, 
   3.7995016830586796`*^9, {3.799502150492058*^9, 3.7995021569787216`*^9}, 
   3.7996984211974783`*^9, {3.799698594177516*^9, 3.799698609905016*^9}, {
   3.799698674341732*^9, 3.799698725580905*^9}, 3.799707585921649*^9, 
   3.799745333820343*^9, 3.7997566021684484`*^9, 3.800206251904619*^9, {
   3.8002062925632353`*^9, 3.8002062972327147`*^9}, 3.8002063693227053`*^9},
 CellLabel->
  "Out[191]=",ExpressionUUID->"3154b081-f4b2-44e2-9101-c166ecebc593"],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{
  3.7997069663281336`*^9},ExpressionUUID->"36b235dd-df5e-455a-b988-\
006e87fb7619"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fidelity", "Section",
 CellChangeTimes->{{3.7993389835964975`*^9, 
  3.7993389847344203`*^9}},ExpressionUUID->"ed23c14e-89df-4790-a9bb-\
40cbf882a75b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "\[Alpha]", ",", "\[Phi]", ",", "X", ",", "t", ",", "t1", ",", "t2"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", "=", "0.1"}], ";", 
  RowBox[{"X", "=", 
   RowBox[{"\[Pi]", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"t_", ",", "\[Phi]_"}], "]"}], "=", 
   SqrtBox[
    RowBox[{
     SuperscriptBox["\[Alpha]", "2"], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[Alpha]", "2"]}], ")"}], 
      SuperscriptBox["t", "2"]}], "+", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "\[Alpha]", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["\[Alpha]", "2"]}]], "t"}], 
       RowBox[{"1", "+", 
        RowBox[{"4", 
         SuperscriptBox["t", "6"], 
         SuperscriptBox["\[Epsilon]", "2"]}]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
        RowBox[{"4", 
         SuperscriptBox["t", "6"], 
         SuperscriptBox["\[Epsilon]", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Phi]", "+", "X"}], "]"}]}]}], ")"}]}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{"t1_", ",", "t2_", ",", "\[Alpha]_", ",", "\[Phi]_"}], "]"}], "=", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{
      FractionBox["1", 
       RowBox[{
        RowBox[{"p", "[", 
         RowBox[{"t1", ",", "\[Phi]"}], "]"}], 
        RowBox[{"p", "[", 
         RowBox[{"t2", ",", "\[Phi]"}], "]"}], 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"4", 
             SuperscriptBox["t1", "6"], 
             SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"4", 
             SuperscriptBox["t2", "6"], 
             SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}]}]]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"4", 
            SuperscriptBox["t1", "3"], 
            SuperscriptBox["t2", "3"], 
            SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Alpha]", "2"], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["\[Alpha]", "2"]}], ")"}], "t1", " ", "t2"}]}], 
          ")"}]}], "+", 
        RowBox[{"\[Alpha]", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["\[Alpha]", "2"]}]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"t1", "+", "t2"}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
              RowBox[{"4", 
               SuperscriptBox["t1", "3"], 
               SuperscriptBox["t2", "3"], 
               SuperscriptBox["\[Epsilon]", "2"], " ", 
               RowBox[{"Cos", " ", "[", 
                RowBox[{"\[Phi]", "+", "X"}], "]"}]}]}], ")"}]}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"t2", "-", "t1"}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Phi]", "]"}], "+", 
              RowBox[{"4", 
               SuperscriptBox["t1", "3"], 
               SuperscriptBox["t2", "3"], 
               SuperscriptBox["\[Epsilon]", "2"], " ", 
               RowBox[{"Sin", " ", "[", 
                RowBox[{"\[Phi]", "+", "X"}], "]"}]}]}], ")"}]}]}], ")"}]}]}],
        ")"}]}], "]"}], "2"]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7991401709277506`*^9, 3.799140256514941*^9}, {
   3.799140500985359*^9, 3.799140515346966*^9}, {3.7991405733958197`*^9, 
   3.7991407386759844`*^9}, 3.7991422121942253`*^9, {3.7991423321545024`*^9, 
   3.7991423379859457`*^9}, 3.7991433466101704`*^9, {3.79914365198215*^9, 
   3.7991436564970465`*^9}, 3.7991574504604335`*^9, {3.799338997256114*^9, 
   3.799339178401739*^9}, {3.799339234876023*^9, 3.79933927901029*^9}, {
   3.7993393447718887`*^9, 3.7993396591407127`*^9}, {3.7993397022015705`*^9, 
   3.7993397076212916`*^9}, {3.799339948557847*^9, 3.799339982186192*^9}, {
   3.7993400450251207`*^9, 3.799340070630872*^9}, {3.7993402801686897`*^9, 
   3.7993402863622437`*^9}, {3.7993454870375414`*^9, 
   3.7993456929822636`*^9}, {3.799347259296341*^9, 3.7993472748096066`*^9}, {
   3.7993473153075194`*^9, 3.7993473878532968`*^9}, {3.799355753828616*^9, 
   3.799355810589058*^9}, {3.7993558885948997`*^9, 3.7993560172626343`*^9}, {
   3.799356096227776*^9, 3.7993561686356554`*^9}, {3.7993563832944684`*^9, 
   3.799356414699957*^9}, {3.7993566138428097`*^9, 3.799356636462078*^9}, {
   3.799356721319132*^9, 3.7993567363453655`*^9}, {3.7993567722181187`*^9, 
   3.799356797660675*^9}, {3.7994990345327673`*^9, 3.79949910342066*^9}, {
   3.799500212056779*^9, 3.79950024454196*^9}, {3.799500305996718*^9, 
   3.799500466167654*^9}, {3.7997568122942963`*^9, 3.799756815801916*^9}, {
   3.7997569286538796`*^9, 3.7997569311013365`*^9}, {3.7997573773151608`*^9, 
   3.7997574420341015`*^9}, {3.799757905735572*^9, 3.7997579261100607`*^9}, {
   3.799758012904972*^9, 3.799758115979395*^9}, {3.7997582232776513`*^9, 
   3.7997583035500364`*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"87f5c8b6-c350-4eb7-bfd6-1e1a4813b302"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"F", "[", 
     RowBox[{"1", ",", "t", ",", "\[Alpha]", ",", "0"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Cambria\>\""}], ",", " ", 
      "Black"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<F (with \[Alpha],\[Beta]\[Rule]Reals, \[Epsilon]=0.10, \
X=\[Pi]/2)\>\""}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Opacity", "[", "0.9", "]"}], "}"}]}], ",", 
   RowBox[{"Mesh", "\[Rule]", " ", "None"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7991401709277506`*^9, 3.799140256514941*^9}, {
   3.799140500985359*^9, 3.799140515346966*^9}, {3.7991405733958197`*^9, 
   3.7991407386759844`*^9}, 3.7991422121942253`*^9, {3.7991423321545024`*^9, 
   3.7991423379859457`*^9}, 3.7991433466101704`*^9, {3.79914365198215*^9, 
   3.7991436564970465`*^9}, 3.7991574504604335`*^9, {3.799338997256114*^9, 
   3.799339178401739*^9}, {3.799339234876023*^9, 3.79933927901029*^9}, {
   3.7993393447718887`*^9, 3.799339452829836*^9}, {3.799347050427482*^9, 
   3.799347221407331*^9}, {3.7993474023349824`*^9, 3.799347410061702*^9}, {
   3.799347464659646*^9, 3.7993475012639465`*^9}, {3.7993569071724477`*^9, 
   3.799356911479954*^9}, {3.7993569656295347`*^9, 3.7993569782787724`*^9}, {
   3.799357111983324*^9, 3.799357133428174*^9}, {3.799357181206971*^9, 
   3.7993572101810055`*^9}, 3.7993572720943727`*^9, {3.7994993744822464`*^9, 
   3.799499374788421*^9}, {3.7995004850491915`*^9, 3.799500652097745*^9}, 
   3.7995007743669744`*^9, 3.7995016227378902`*^9, {3.7995021110494704`*^9, 
   3.799502117281813*^9}, {3.7995022184416046`*^9, 3.7995022291290436`*^9}, 
   3.799502287934251*^9, 3.79975667395012*^9, {3.799756767463065*^9, 
   3.79975676766353*^9}, {3.799756934692772*^9, 3.7997569370883265`*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"919b0c43-5cbf-4336-869e-7b46cff0f328"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJxd2As0lPkfx3HWHlubpKRISpF7CtuWwtj8qYmERe53UoySdHHpXkpiowiV
rkioFEpJypQSWqVIuV+7zFjdVMrac/6f5/uccY7zO/Oa5/nNb94z8xi/GT5r
7fx/EhMTGxr5lRj5PeV0oXifTpgJxtTR6bZvKwScNbomqbO4BRz4SjsDBXW+
gJPb2zisyr3DeMlb/tfyewKOaslEg2JeFeM/jq9Wla8ScGr46ldUuXWMSyXs
zNnwRMCJ1eU/4jU9Y/x6UnzFcKuAY5Hi013Ea2K8NTB28tkPAo642H8/rYzH
yldtfyMt5HherYlT5bYzHhfVe7NujpBTGnhcgZvYyXjlhZjYJEchR1EpOJPX
1M34ydsTe/13CDlb/l5okKjax7iemix3UZ6Q83zP6NtFvDeMi1ndvhhRL+TM
W9hg1VT0jvG0VNWWh++FnEOCzMbhYSHjA8P//dBtdNVL2dPf8Zo6Y1wZPG+d
+BvqDK/+ZNws+5Y6w3XVDKIchNQZHuTonv7jI3WGK48zyNMRFzKd4Y/t8msr
xwuZzvDACfs/BGhQZ3iKooTrVHPqDL9RvrLWahV1hodUyIivPUid4XWTnkx9
eJU6w4UFAcv1G6kzXN9kwL72A3WGi3ZGvzPKOy4uGUXHwc+fba93H3HcxpjV
5ZduMFrIdIbvsRH2NYwRMp3hlvtH5QSNdENn+GvFaWmDU6gzvPPhNyNvTeoM
15Res9XImDrDP23zjb3oSJ3h1YU17cbh1Bl+a/mBwr9SqDP86IubsvNvUGf4
LJf0bN+X1Bm+fiBzw+WP1JlZj0hndOqMfW7uPJ06w/MPHLPhTafz4dej8o6p
KVNnjAa9ctrrZ1JneJOXvJadOnWG10ls0i+bQ53hegXnYuKNqDP8SJLFXHtr
6gyXjD41bOxPneHrkzqcu7dTZ/jUW42bpp2kzvBbL8d6Xr5NneHqtqluKi3U
Ga6WYai68RN1hou+n9Fjw/c7Q6l61BleGB/XladHneHX+oszXPRpXvjzt2Zh
Yb9RZ4yWEy8kti2gzvBmfceefabUGV7skdQ5x4o6w/0kqjf4ulFneFSRpJV9
KHWGS1xOdsmNpc7w/fJ+4m5Z1Jl5vloR7zz51Bn+RkKXv7ONOsOlpH4+PeMz
dYaLdsbzvh436aa0KXWGB12SCVUxpc7wL04Z2x6ZUmf4Ns1W7arF9HhwS7cJ
V95bUGeMy6aEREyyps7wIq9pOq+dqDP8ZEB4zT+rqDP88O/Ru90iqTO82aT2
9qtE6gzfHzIjMjqPOjOv/+utct4PqDPcIelzakIHdYZrzS5fWczqDBe9bjCf
V3Edv1WW1Bk+d63K6mhL6gwvzq37U8OKOsNTlOZFKllTZ7hb4jVrZTtaB9y2
bThf6ESdMYaFcA7q+1JnuHJcir1XKHVmrusDn+ee2UWd4RvcZk+8kkqd4Sbn
Y346X0Cd4Z+TV2tVPaLO8P+t3DPKvos6w/sX2D81HKTO8EGRznge1koHxOTs
qTNcO9jygo49dYZr1HaavbKnzvCtz4xl6x2pM/xHefP5hy7UGf5l+/Bdnjet
D77I9aWNYxB1Zr53NPZpCjdTZ3hYcWC7Syx1hsspfcmyzaDOcPnC8pLPRdQZ
3qZ0tzW3ljrDzYKl7z7rps5wsdDp93JYneGi1w2s91rtOil7F+oMj5O5dJLn
Qp3h0saR7Wqu1Bmep/DnTG136sx8voPj+Ore1Bke4zJusGwVdYZ/81laGx1K
64bPSZmkVraVOjPHW9i2HEugzvCJc7nHq85QZ/iXyy/DwkuoM9ymsr9Fqo46
w5XHnrg4pZc6M/Obbn/16xfqDP8q0hnrKjQ5EqXtQZ3h8lqbjZZ4UGd4ZevR
xjGe1Ble77nMY5Y3dYbnVzudXeRPneHVXVYTeoOoM/O5H/DiZYdTZ/i9XJlD
1Tvp+cCPte364JdEnTG6i/FmTM2izvClQQFnlEqpM1w21CC75wl1hu/9e909
pT7qDI84tGejM6szXPS6gcc/IJWg4+pJneE5ds0BWzypMzy+/5KplRd1hk+e
LWe424c6wxXMz4TfD6DO8J1xSx5k86gzPNVYJS99E3WGxwVEB3bups7wto6I
mF1H6HnCI8O0Xymep84YjZpkMupuUWf4tND0Ss166gzf0C4j94zVGT74wrE0
idWZcZHOeJxKvcGDqu7UGT7NtfCyuTt1hgdd/yVcy4M6w82yCjTjvKgznOe1
pUWW9X6Gl2QU9dkGU2f49yNb7Ao2Umf4MguTZzxWZ7iDmX7FRlZn+CzLX1S8
WZ3hgbMf3zAvo84Yk73WmpxkdYY76w7d0HxNneH+lhL+BazO8CGRzpjvatJS
21QH6gzP6FeffMuBOsOfKthuLnGkznB/7sIXjs7UGf5XmtU7cw/qDO9dW3ZH
MYA6wwMfl/H/YF2f4R/HGh7s2Uad4Qr3+dr9h6gzfFm8enJTJnWGR9lbCi6w
rhvwABWrX+8/pc4Y7zY7x9az3s/M/+VGIT6nWZ3hot/rcN5Q4f3enYupM1zJ
Q+Zl7mLqDK93yk59ZEad4RfNXzbwLagzXFkzZKmPFXWGd5XFVVs4UGf494Gs
pV3e1BleIp+gE7SeOsMn9R17k7uXOsP9ecf1pE9QZ/jX4m7FVcXUGf5b+bkF
PY+pF5w7v0N1sIc6Y5wwWcNYhdUZLtoZ90fnpHWq8WkfCS5ckZDpzdqvg2ud
c3UfYu3XwQ3XqI+2Y+3XwbV1TsTksfbr4HPiOup+b6P9Oni13wqbBtZ+HfN3
ZvyN04rjqDP8n5zR7t9Z+3Xwo/E184pZ+3XMOg/3u+5g7dfBl8yvrVzO2q+D
n7b0jdjN2q+Df3zocbeatV+HUfD/zl3XJR+pcU8zox9/7yWdRgHTH565tUJc
c8R9D3OSeE0C5vhSswqN1iGaF/5BZH6c16mi9XOJDr2+8PyagPlXRxy3MVqP
T2sY/E6Ox8mT6W4vHaL5MZ98eUPO+wo6H5794cAU9vGYp65Hy1iXT/PiPHzv
ffE4RU+Tm8iMyYV6K3xqBZyIP8KKinh0f+sMH6EO63jc/zH+lM2+yULmNkYF
bktyEOt9jvOW+Gxq9GbNj/ubS2UDNFjzY70Bx/Nr1Vnrx3mfRNaPecbOqjB6
V0HH4/5+kc8d5rGbV74/hrV+nHf1wcw0DdbrK9m6TpKb+JYj+eLbZwdrcrwf
3wxd0t+3mB7PqmfMOlWugJMV6xUZbyjk/AtesCZ/
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.9], EdgeForm[None], 
       Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[Polygon3DBox[CompressedData["
1:eJwBGwXk+iFib1JiAgAAAK4BAAADAAAA4gIRFQUGEgIDEwMEKhobFgYHGAgJ
GQkKGgoLGwsMFAQFFwcIHAwN7+XkJBQVIRESIhITJRUWJhYXKRkaIBARJxcY
KBgZHQ0OSDg5KxscLR0eMiIjLx8gMCAhLBwdMyMkNSUmNiYnNycoOCgpMSEi
OSkqOiorOyssPi4vPy8wQDAxQTEyIxMUQjIzRjY3PCwtRDQ1RTU2QzM0Rzc4
STk6gXFyZFRVTz9ASzs8UEBBUkJDVUVGUUFCU0NEVERFTT0+Tj4/VkZHV0dI
Xk5PWkpLXExNX09QSjo7YFBRYlJTWEhJWUlKYVFSY1NUNCQlZVVWemprZlZX
bFxdaFhZbV1eb19gcmJjbl5fcGBhcWFiaVlaa1tcc2NkdGRle2tsd2doeGhp
fGxtZ1dYfW1uf29wdWVmdmZnfm5vgHBx+/zEgnJzhHR1iXl6hXV2hnZ3no6P
inp7jHx9jX1+jn5/j3+Ah3d4kICBkYGCkoKDlISFlYWGloaHmIiJi3t8mYmK
nY2Ok4OEm4uMnIyNmoqLu6usvKytoZGSpZWWopKTo5OUoJCRp5eYqZmaqpqb
q5ucrJydpJSVrZ2erp6fr5+gsaGisqKjs6OktKSln4+QtqanuqqrsKChuKip
uamqt6eoXU1Ova2u7ejSwrKzv6+wwLCx2MjJw7O0xra3x7e4yLi5ybm6wbGy
yrq7y7u8zLy9zr6/z7/A0MDB0cHC+rbF0sLD18fIzb2+1cXG1sbH5sXUg3N0
vq6v28vM38/Q3MzN3c3O2srL4NDR4+IQAhIRAxMSBBQT3s7PBRUUBhYVBxcW
CRkYChoZCxsaDBwb2cnKDR0cEiIhCBgXECAfESEg5B0OEyMiFCQjFSUkMEA/
GiopFycmGysqHS0sITEwHCwrHy8uIDAvGCgnGSkoIjIxIzMyKTk4JjY1Jzc2
Kjo5hZWUKzs6Lj49JDQzJTU0LDw7Lz8+KDg3MUFARVVUMkJBN0dGNERDOEhH
OkpJPk5NOUlIO0tKPU1MNUVENkZFP09OQFBPRlZVQ1NSRFRTR1dWM0NCSFhX
SlpZQVFQQlJRSVlYTFxbhpaVTV1cT19eVGRjUWFgUmJhVWVkVmZlWWloXGxr
V2dmWGhnU2NiW2tqXW1saHh3X29uYHBvYXFwYnJxanp5Y3NyZ3d2Xm5tZXV0
ZnZ1ZHRzTl5da3t6fo6NUGBfcIB/bX18cYGAc4OCdoaFcoKBdISDdYWEbn59
b39+d4eGeYmIf4+OfIyLfY2MgJCPbHx7gZGQg5OSeoqJe4uKgpKRhJSTqJiZ
iJiX8u7jorKxjZ2cipqZjp6dkKCfk6Oij5+ekaGgkqKhi5uajJyblKSjlaWk
nKyrmamomqqpna2swNDPnq6toLCvl6emmKinn6+uobGwm6uqo7OyuMjHpLSz
qrq5p7e2q7u6rb28sMC/rLy7rr69r7++qLi3qbm4scHAssLBucnItsbFt8fG
usrJpra1u8vKvc3Ms8PC+sS1vMzLvs7NiZmYv8/OFiYl0ujRx9fW8OfmyNjX
ytrZzd3cydnYy9vazNzbxdXUxtbVzt7dz9/e6+QO7uriEOIRHeQewtLR5OUe
7ObU0ODf6ODR/Pvm/OfEwdHQ8eno7/fl6Ong9u4B8+/r4+7i6+/k7fHo9+8P
+PDT7PDm9PDs9fHt+fHh7vIB8Pjn8fXh7vbq8fnp4uoCtvq1+vvE7/MP8PTT
+/rF5vvF5/zmK2xvLw==
           "]],
          Annotation[#, "Charting`Private`Tag$10517#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, 
     {GrayLevel[0], 
      Line3DBox[{246, 1, 242, 227, 16, 31, 46, 61, 76, 91, 106, 121, 136, 151,
        166, 181, 196, 231, 248, 211, 244, 236, 212, 213, 214, 215, 216, 217, 
       218, 219, 220, 221, 222, 223, 224, 233, 249, 225, 245, 237, 210, 195, 
       180, 165, 150, 135, 120, 105, 90, 75, 60, 45, 30, 229, 247, 15, 243, 
       235, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 234, 246}]}},
    VertexNormals->CompressedData["
1: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

     "]], {}},
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["t", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\[Alpha]", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      TemplateBox[{0}, "Spacer1"], HoldForm], TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{609., Automatic},
  LabelStyle->{FontSize -> 20, FontFamily -> "Cambria", 
    GrayLevel[0]},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotLabel->FormBox[
   "\"F (with \[Alpha],\[Beta]\[Rule]Reals, \[Epsilon]=0.10, X=\[Pi]/2)\"", 
    TraditionalForm],
  PlotRange->{Full, Full, Full},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.7595786078182531`, -2.6639160038529113`, 1.1213539349040051`},
  ViewVertical->{-0.1826446220675104, 0.2765150301222371, 
   0.9434937096485141}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.799140214336709*^9, {3.7991402475608883`*^9, 3.799140257074418*^9}, 
   3.7991405159314036`*^9, {3.799140586822921*^9, 3.7991407393052826`*^9}, {
   3.799142334905184*^9, 3.7991423385644016`*^9}, 3.7991433466101704`*^9, {
   3.79914365198215*^9, 3.7991436564970465`*^9}, 3.799339445094921*^9, {
   3.799347225126693*^9, 3.7993472370123405`*^9}, 3.799347279780126*^9, {
   3.7993474120344353`*^9, 3.799347449156441*^9}, 3.799356912795953*^9, {
   3.7993569664096065`*^9, 3.7993569790820746`*^9}, {3.7993571855983562`*^9, 
   3.7993572109591384`*^9}, 3.799357272916485*^9, {3.799499376186685*^9, 
   3.799499383140102*^9}, {3.799500474347791*^9, 3.799500508189348*^9}, {
   3.7995006141821194`*^9, 3.7995006528048553`*^9}, 3.799501623719267*^9, 
   3.7995021180108657`*^9, 3.79950223165928*^9, {3.7997566744557805`*^9, 
   3.7997566808895597`*^9}, 3.7997567220584755`*^9, {3.799756768422537*^9, 
   3.799756780993883*^9}, 3.799756822370386*^9, {3.7997569394021473`*^9, 
   3.7997569461321783`*^9}, 3.7997574787300196`*^9, 3.799758122187785*^9, 
   3.799758247217681*^9, {3.7997582855531616`*^9, 3.7997583063973885`*^9}},
 CellLabel->
  "Out[154]=",ExpressionUUID->"cffa904f-156b-497d-9366-89543bb640cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"GraphicsRow", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Ps", "[", 
           RowBox[{"\[Alpha]", ",", "\[Phi]", ",", "\[Epsilon]", ",", "t"}], 
           "]"}], ",", "0.002"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Alpha]", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"Mesh", "\[Rule]", " ", "None"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Opacity", "[", "1", "]"}], ",", 
           RowBox[{"Opacity", "[", "0.6", "]"}]}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", " ", "Full"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Cambria\>\""}], ",", " ", 
           "Black"}], "}"}]}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<\!\(\*SubscriptBox[\(P\), \(success\)]\) (with \
\[Alpha]\[Rule]Real, \[Beta]=\!\(\*SqrtBox[\(1 - \
\*SuperscriptBox[\(\[Alpha]\), \(2\)]\)]\)\!\(\*SuperscriptBox[\(\
\[ExponentialE]\), \(\[ImaginaryI]\\\ \[Phi]\)]\)  , \[Epsilon]=0.10, \
X=\[Pi]/2)\>\""}]}], "]"}], ",", 
      RowBox[{"Plot3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"F", "[", 
           RowBox[{"1", ",", "t", ",", "\[Alpha]", ",", "\[Phi]"}], "]"}], 
          ",", "0.99"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Alpha]", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Cambria\>\""}], ",", " ", 
           "Black"}], "}"}]}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<F (with \[Alpha]\[Rule]Real, \[Beta]=\!\(\*SqrtBox[\(1 - \
\*SuperscriptBox[\(\[Alpha]\), \(2\)]\)]\)\!\(\*SuperscriptBox[\(\
\[ExponentialE]\), \(\[ImaginaryI]\\\ \[Phi]\)]\)  , \[Epsilon]=0.10, \
X=\[Pi]/2)\>\""}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Opacity", "[", "0.9", "]"}], ",", 
           RowBox[{"Opacity", "[", "0.4", "]"}]}], "}"}]}], ",", 
        RowBox[{"Mesh", "\[Rule]", " ", "None"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "}"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}], ",", 
     RowBox[{"Appearance", "\[Rule]", " ", "\"\<Open\>\""}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7995017038820286`*^9, 3.799501804426318*^9}, {
   3.799501877730439*^9, 3.7995019497046723`*^9}, {3.7995020048612995`*^9, 
   3.7995020684213963`*^9}, {3.7997584099810033`*^9, 3.7997584121581793`*^9}, 
   3.799758453018921*^9, {3.7997585214397416`*^9, 3.799758529816347*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"77ca27b1-eab3-49d2-b937-bf2fe0bb5dcf"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Phi]$$ = 4.084070449666731, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Phi]$$], 0, 2 Pi}}, Typeset`size$$ = {
    953., {205., 209.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Phi]$19155$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Phi]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Phi]$$, $CellContext`\[Phi]$19155$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> GraphicsRow[{
         Plot3D[{
           $CellContext`Ps[$CellContext`\[Alpha], $CellContext`\[Phi]$$, \
$CellContext`\[Epsilon], $CellContext`t], 0.002}, {$CellContext`t, 0, 
           1}, {$CellContext`\[Alpha], 0, 1}, AxesLabel -> Automatic, Mesh -> 
          None, ImageSize -> Full, PlotStyle -> {
            Opacity[1], 
            Opacity[0.6]}, PlotRange -> Full, 
          LabelStyle -> {FontSize -> 15, FontFamily -> "Cambria", Black}, 
          PlotLabel -> 
          "\!\(\*SubscriptBox[\(P\), \(success\)]\) (with \
\[Alpha]\[Rule]Real, \[Beta]=\!\(\*SqrtBox[\(1 - \
\*SuperscriptBox[\(\[Alpha]\), \(2\)]\)]\)\!\(\*SuperscriptBox[\(\
\[ExponentialE]\), \(\[ImaginaryI]\\ \[Phi]\)]\)  , \[Epsilon]=0.10, \
X=\[Pi]/2)"], 
         Plot3D[{
           $CellContext`F[
           1, $CellContext`t, $CellContext`\[Alpha], $CellContext`\[Phi]$$], 
           0.99}, {$CellContext`t, 0, 1}, {$CellContext`\[Alpha], 0, 1}, 
          AxesLabel -> Automatic, 
          LabelStyle -> {FontSize -> 15, FontFamily -> "Cambria", Black}, 
          PlotLabel -> 
          "F (with \[Alpha]\[Rule]Real, \[Beta]=\!\(\*SqrtBox[\(1 - \
\*SuperscriptBox[\(\[Alpha]\), \(2\)]\)]\)\!\(\*SuperscriptBox[\(\
\[ExponentialE]\), \(\[ImaginaryI]\\ \[Phi]\)]\)  , \[Epsilon]=0.10, \
X=\[Pi]/2)", ImageSize -> Full, PlotStyle -> {
            Opacity[0.9], 
            Opacity[0.4]}, Mesh -> None, PlotRange -> Full]}], 
      "Specifications" :> {{$CellContext`\[Phi]$$, 0, 2 Pi, Appearance -> 
         "Open"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1004., {264., 270.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7995017762327023`*^9, 3.7995018049678698`*^9}, 
   3.799501893326758*^9, {3.799501939623054*^9, 3.799501950499548*^9}, {
   3.799502006019169*^9, 3.799502070120854*^9}, {3.7997583923710623`*^9, 
   3.7997584127196465`*^9}, 3.7997584539564133`*^9, 3.7997585321959505`*^9},
 CellLabel->
  "Out[158]=",ExpressionUUID->"71aaa3a1-8d8b-4452-a853-eb77789fd679"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bellini\[CloseCurlyQuote]s protocol", "Section",
 CellChangeTimes->{{3.799600146703771*^9, 
  3.799600152031498*^9}},ExpressionUUID->"7068b226-0d67-49f3-b6ef-\
b562f8dc3f6e"],

Cell[CellGroupData[{

Cell["\[Pi]/2 gate", "Subsubsection",
 CellChangeTimes->{{3.8000877394055443`*^9, 
  3.800087742849337*^9}},ExpressionUUID->"663df88b-ce12-4794-a409-\
b6c7d6fcca0a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"2", "+", "x"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"soln1", ",", "soln2"}], "}"}], "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["g", "2"]}], "==", 
      RowBox[{"3", "+", 
       RowBox[{"2", " ", "x"}]}]}], ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"Abs", "[", 
   RowBox[{"soln1", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"Arg", "[", 
   RowBox[{"soln1", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"Abs", "[", 
   RowBox[{"2", "+", 
    RowBox[{"soln1", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"Arg", "[", 
   RowBox[{"2", "+", 
    RowBox[{"soln1", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8000877514339514`*^9, 3.8000880501794825`*^9}, {
  3.8000881209098344`*^9, 3.800088183183288*^9}, {3.8000883015269566`*^9, 
  3.8000883261283684`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"cb0fe6d4-c15b-4856-ad05-a815d48041fa"],

Cell[BoxData["3.2298515804224848`"], "Output",
 CellChangeTimes->{{3.8000879888133497`*^9, 3.8000880327534375`*^9}, 
   3.8000880686263895`*^9, {3.800088125580616*^9, 3.8000881416534986`*^9}, {
   3.8000881753764524`*^9, 3.8000881836660013`*^9}, 3.8000883275216885`*^9, 
   3.8003603748792887`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"440966df-0143-41dc-828f-4eda72e897d2"],

Cell[BoxData[
 RowBox[{"-", "2.434301283099756`"}]], "Output",
 CellChangeTimes->{{3.8000879888133497`*^9, 3.8000880327534375`*^9}, 
   3.8000880686263895`*^9, {3.800088125580616*^9, 3.8000881416534986`*^9}, {
   3.8000881753764524`*^9, 3.8000881836660013`*^9}, 3.8000883275216885`*^9, 
   3.8003603748842754`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"3f805db0-2ad6-4bf0-83f2-2ffe6e0689dc"],

Cell[BoxData["2.147459380130091`"], "Output",
 CellChangeTimes->{{3.8000879888133497`*^9, 3.8000880327534375`*^9}, 
   3.8000880686263895`*^9, {3.800088125580616*^9, 3.8000881416534986`*^9}, {
   3.8000881753764524`*^9, 3.8000881836660013`*^9}, 3.8000883275216885`*^9, 
   3.8003603748902593`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"93c36bce-5529-4220-b1af-7ac51eadd950"],

Cell[BoxData[
 RowBox[{"-", "1.7843356199911347`"}]], "Output",
 CellChangeTimes->{{3.8000879888133497`*^9, 3.8000880327534375`*^9}, 
   3.8000880686263895`*^9, {3.800088125580616*^9, 3.8000881416534986`*^9}, {
   3.8000881753764524`*^9, 3.8000881836660013`*^9}, 3.8000883275216885`*^9, 
   3.8003603748972397`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"6cd9f8d8-a7ee-43dc-afa4-e4aef013dbd9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"N", "[", 
  RowBox[{"Abs", "[", 
   RowBox[{"soln2", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"Arg", "[", 
   RowBox[{"soln2", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"Abs", "[", 
   RowBox[{"2", "+", 
    RowBox[{"soln2", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"Arg", "[", 
   RowBox[{"2", "+", 
    RowBox[{"soln2", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.800088195430538*^9, 3.800088208921588*^9}, {
  3.8000883415492935`*^9, 3.800088365821542*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"e0bdeede-3657-4b0c-a596-cad135c25780"],

Cell[BoxData["1.548058749915056`"], "Output",
 CellChangeTimes->{3.8000882092985764`*^9, 3.800088366360214*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"d795ab52-eee6-4a57-afb9-7d7f361dc515"],

Cell[BoxData["3.077802391893041`"], "Output",
 CellChangeTimes->{3.8000882092985764`*^9, 3.800088366370409*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"643815f4-295c-4842-b18f-72214428a1af"],

Cell[BoxData["0.46566654962266196`"], "Output",
 CellChangeTimes->{3.8000882092985764`*^9, 3.8000883663771696`*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"a388f7bf-f3f5-43b5-8e6a-8df9aa828fef"],

Cell[BoxData["0.21353929319623774`"], "Output",
 CellChangeTimes->{3.8000882092985764`*^9, 3.8000883663851476`*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"0de50cfa-0c88-4e8c-b030-fa3d4b3bef8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["soln2"], "Input",
 CellChangeTimes->{{3.800088242840988*^9, 3.800088245123042*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"15c6ce75-ff22-469b-bf33-ecbbe49ba12d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "-", "\[ImaginaryI]"}], ")"}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     SqrtBox[
      RowBox[{"1", "-", "\[ImaginaryI]"}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.800088245891837*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"39611847-d897-411a-bb1a-c9da958fd036"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"2", "+", "soln1"}]}]], "Input",
 CellChangeTimes->{{3.8000882575590277`*^9, 3.8000882670476155`*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"3863b838-8fc1-4f22-9ba6-835778e30599"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", "+", 
   RowBox[{"(", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "-", "\[ImaginaryI]"}], ")"}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       SqrtBox[
        RowBox[{"1", "-", "\[ImaginaryI]"}]]}]}]}], ")"}]}], "}"}]], "Output",
 CellChangeTimes->{3.800088267649008*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"a9299611-5e44-47c2-a5de-4cbcf67f4f66"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[Pi] gate", "Subsubsection",
 CellChangeTimes->{{3.80008770635042*^9, 
  3.8000877132348447`*^9}},ExpressionUUID->"6c4740cf-2363-4556-81c4-\
0af46262bcc6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
     SubscriptBox["c", "T"], ",", 
     SubscriptBox["c", "a"], ",", 
     SubscriptBox["c", "T1"], ",", 
     SubscriptBox["c", "a1"], ",", 
     SubscriptBox["c", "b"], ",", 
     SubscriptBox["c", "b1"], ",", "\[Psi]", ",", "t1", ",", "t2", ",", "t3", 
     ",", "r1", ",", "r2", ",", "r3", ","}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]", "=", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["A", "0"], "+", " ", 
     RowBox[{
      SubscriptBox["A", "1"], 
      SubscriptBox["c", "T"]}], "+", 
     RowBox[{
      SubscriptBox["A", "2"], 
      FractionBox[
       SuperscriptBox[
        SubscriptBox["c", "T"], "2"], 
       SqrtBox["2"]]}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        SubscriptBox["\[Theta]", "1"], "]"}], ",", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", "  ", 
           SubscriptBox["\[Phi]", "1"]}]]}], 
        RowBox[{"Sin", "[", 
         SubscriptBox["\[Theta]", "1"], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          SubscriptBox["\[Phi]", "1"]}]], 
        RowBox[{"Sin", "[", 
         SubscriptBox["\[Theta]", "1"], "]"}]}], ",", 
       RowBox[{"Cos", "[", 
        SubscriptBox["\[Theta]", "1"], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", GridBox[{
   {
    RowBox[{
     RowBox[{"B2", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "2"], "]"}], ",", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", "  ", 
              SubscriptBox["\[Phi]", "2"]}]]}], 
           RowBox[{"Sin", "[", 
            SubscriptBox["\[Theta]", "2"], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", 
             SubscriptBox["\[Phi]", "2"]}]], 
           RowBox[{"Sin", "[", 
            SubscriptBox["\[Theta]", "2"], "]"}]}], ",", 
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "2"], "]"}]}], "}"}]}], "}"}]}], ";"}]},
   {
    RowBox[{
     RowBox[{
      RowBox[{"B3", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "3"], "]"}], ",", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", "  ", 
               SubscriptBox["\[Phi]", "3"]}]]}], 
            RowBox[{"Sin", "[", 
             SubscriptBox["\[Theta]", "3"], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              SubscriptBox["\[Phi]", "3"]}]], 
            RowBox[{"Sin", "[", 
             SubscriptBox["\[Theta]", "3"], "]"}]}], ",", 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "3"], "]"}]}], "}"}]}], "}"}]}], ";"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["c", "T"], ",", 
         SubscriptBox["c", "a"]}], "}"}], "=", 
       RowBox[{"B1", ".", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["c", "T1"], ",", 
          SubscriptBox["c", "a1"]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"PDC", "[", "\[Lambda]_", "]"}], "=", 
       RowBox[{"1", "+", 
        RowBox[{"\[Lambda]", " ", 
         SubscriptBox["c", "T1"], " ", 
         SubscriptBox["c", "b"]}]}]}], ";"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Psi]", "=", 
       RowBox[{
        RowBox[{"PDC", "[", "\[Lambda]", "]"}], "\[Psi]"}]}], ";"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["c", "T1"], ",", 
         SubscriptBox["c", "c"]}], "}"}], "=", 
       RowBox[{"B2", ".", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["c", "T2"], ",", 
          SubscriptBox["c", "c1"]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["c", "a1"], ",", 
         SubscriptBox["c", "c1"]}], "}"}], "=", 
       RowBox[{"B3", ".", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["c", "a2"], ",", 
          SubscriptBox["c", "c2"]}], "}"}]}]}], ";"}]}]}
  }], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.799600161526129*^9, 3.799600292091386*^9}, {
   3.7996004189868298`*^9, 3.7996004301038494`*^9}, {3.7996005152642612`*^9, 
   3.7996006829190707`*^9}, {3.7996007148750443`*^9, 
   3.7996007718976808`*^9}, {3.7996008072123785`*^9, 3.799600810320636*^9}, {
   3.7996008937891216`*^9, 3.7996009021592717`*^9}, {3.799600989965607*^9, 
   3.7996011602442627`*^9}, {3.7996011950506835`*^9, 3.799601221261483*^9}, {
   3.799601259155484*^9, 3.7996012835985703`*^9}, {3.7996028683140497`*^9, 
   3.799602885918189*^9}, 3.799602948593134*^9, {3.7999326628139877`*^9, 
   3.799932698509794*^9}, {3.799939125145218*^9, 3.7999392734394517`*^9}, {
   3.7999393082136507`*^9, 3.7999393377732325`*^9}, {3.799939417452677*^9, 
   3.799939437967784*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"7bfa545d-e8d3-42a7-8be2-0e2d397c21c5"],

Cell[BoxData[
 TemplateBox[{
  "ClearAll","ssym",
   "\"\\!\\(\\*SubscriptBox[\\\"c\\\", \\\"T\\\"]\\) is not a symbol or a \
string.\"",2,1,1,26602786232075615453,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.799939471633419*^9, 3.7999611145961967`*^9, 
  3.7999611870135517`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"b81606f2-a88a-4dcd-9240-01e838a62400"],

Cell[BoxData[
 TemplateBox[{
  "ClearAll","ssym",
   "\"\\!\\(\\*SubscriptBox[\\\"c\\\", \\\"a\\\"]\\) is not a symbol or a \
string.\"",2,1,2,26602786232075615453,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.799939471633419*^9, 3.7999611145961967`*^9, 
  3.799961187195068*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"6e0f4b29-5a67-4e37-9c00-1a39c069db4e"],

Cell[BoxData[
 TemplateBox[{
  "ClearAll","ssym",
   "\"\\!\\(\\*SubscriptBox[\\\"c\\\", \\\"T1\\\"]\\) is not a symbol or a \
string.\"",2,1,3,26602786232075615453,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.799939471633419*^9, 3.7999611145961967`*^9, 
  3.799961187210034*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"df0bec35-edcb-43ee-a25a-e6a45c45bf0a"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ClearAll\\\", \
\\\"::\\\", \\\"ssym\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,1,4,26602786232075615453,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.799939471633419*^9, 3.7999611145961967`*^9, 
  3.7999611872259846`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"8c09ed86-0d29-495e-9994-259f0f02c756"],

Cell[BoxData[
 TemplateBox[{
  "ClearAll","wrsym",
   "\"Symbol \\!\\(\\*RowBox[{\\\"Null\\\"}]\\) is Protected.\"",2,1,5,
   26602786232075615453,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.799939471633419*^9, 3.7999611145961967`*^9, 
  3.799961187240946*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"5000a312-57a0-4e8f-825e-01bb1cd6fd69"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "Null", "}"}], ",", 
   RowBox[{"{", 
    SuperscriptBox["Null", "6"], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7999394717116847`*^9, 3.7999611147926707`*^9, 
  3.799961187258896*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"f2c7d4de-0a95-487c-8faa-de2c8b1795ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"out", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"CoefficientList", "[", 
       RowBox[{
        RowBox[{"Expand", "[", "\[Psi]", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["c", "a2"], ",", 
          SubscriptBox["c", "b"], ",", 
          SubscriptBox["c", "c2"]}], "}"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2", ",", "1"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Lambda]", ",", 
      SubscriptBox["c", "T2"]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.79960236188949*^9, 3.7996024081713457`*^9}, {
   3.7996024560039473`*^9, 3.799602481227659*^9}, 3.7996025132392364`*^9, {
   3.7996029076062803`*^9, 3.7996029123513875`*^9}, {3.799602961573372*^9, 
   3.799602970119089*^9}, {3.7999335684319563`*^9, 3.799933569195528*^9}, 
   3.799939704093296*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"195c9618-d766-49b5-98c2-f2642a95a88b"],

Cell[BoxData[
 RowBox[{"\[Lambda]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Phi]", "2"], "-", 
          SubscriptBox["\[Phi]", "3"]}], ")"}]}]]}], " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "2"], "]"}], " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "3"], "]"}], " ", 
     SubscriptBox["A", "0"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", 
           SubscriptBox["\[Phi]", "1"]}]]}], " ", 
        RowBox[{"Cos", "[", 
         SubscriptBox["\[Theta]", "2"], "]"}], " ", 
        RowBox[{"Cos", "[", 
         SubscriptBox["\[Theta]", "3"], "]"}], " ", 
        RowBox[{"Sin", "[", 
         SubscriptBox["\[Theta]", "1"], "]"}], " ", 
        SubscriptBox["A", "1"]}], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Phi]", "2"], "-", 
            SubscriptBox["\[Phi]", "3"]}], ")"}]}]], " ", 
        RowBox[{"Cos", "[", 
         SubscriptBox["\[Theta]", "1"], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", 
          SubscriptBox["\[Theta]", "2"]}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         SubscriptBox["\[Theta]", "3"], "]"}], " ", 
        SubscriptBox["A", "1"]}]}], ")"}], " ", 
     SubscriptBox["c", "T2"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SqrtBox["2"]}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["\[Phi]", "1"]}]], " ", 
        RowBox[{"Cos", "[", 
         SubscriptBox["\[Theta]", "1"], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          SubscriptBox["\[Theta]", "2"], "]"}], "2"], " ", 
        RowBox[{"Cos", "[", 
         SubscriptBox["\[Theta]", "3"], "]"}], " ", 
        RowBox[{"Sin", "[", 
         SubscriptBox["\[Theta]", "1"], "]"}], " ", 
        SubscriptBox["A", "2"]}], "-", 
       FractionBox[
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Phi]", "2"], "-", 
             SubscriptBox["\[Phi]", "3"]}], ")"}]}]], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "1"], "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           SubscriptBox["\[Theta]", "2"], "]"}], "2"], " ", 
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "2"], "]"}], " ", 
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "3"], "]"}], " ", 
         SubscriptBox["A", "2"]}], 
        SqrtBox["2"]]}], ")"}], " ", 
     SubsuperscriptBox["c", "T2", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.799602410922764*^9, {3.7996024569811835`*^9, 3.7996025139463763`*^9}, {
   3.7996028918052855`*^9, 3.799602912832471*^9}, {3.7996029562221365`*^9, 
   3.7996029709061556`*^9}, 3.7999327063806257`*^9, 3.799933571441429*^9, 
   3.799939304381507*^9, 3.799939392522521*^9, 3.7999395515721436`*^9, 
   3.7999612764344416`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"9ab4316a-2724-4dac-b0e4-44c6ddb1b1f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["V", "0"], ",", 
     SubscriptBox["V", "1"], ",", 
     SubscriptBox["V", "2"]}], "}"}], "=", 
   RowBox[{"CoefficientList", "[", 
    RowBox[{"out", ",", 
     SubscriptBox["c", "T2"]}], "]"}]}], ";"}], "\n", 
 SubscriptBox["V", "0"]}], "Input",
 CellChangeTimes->{{3.7999335586865225`*^9, 3.799933603135711*^9}, {
   3.7999393524551497`*^9, 3.7999393640879736`*^9}, 3.7999397137689996`*^9, {
   3.799961153103229*^9, 3.7999611634126616`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"2806e762-1657-4227-8f16-16eef844baae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Phi]", "2"], "-", 
       SubscriptBox["\[Phi]", "3"]}], ")"}]}]]}], " ", "\[Lambda]", " ", 
  RowBox[{"Sin", "[", 
   SubscriptBox["\[Theta]", "2"], "]"}], " ", 
  RowBox[{"Sin", "[", 
   SubscriptBox["\[Theta]", "3"], "]"}], " ", 
  SubscriptBox["A", "0"]}]], "Output",
 CellChangeTimes->{3.7999612766319137`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"33948807-c567-41be-8f99-5c4dbeb708ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox["V", "1"]], "Input",
 CellChangeTimes->{{3.7999335586865225`*^9, 3.799933603135711*^9}, {
   3.7999393524551497`*^9, 3.7999393640879736`*^9}, 3.7999397137689996`*^9, {
   3.799961153103229*^9, 3.799961166013706*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"011417a2-66b5-4131-801e-43a0858ce461"],

Cell[BoxData[
 RowBox[{"\[Lambda]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["\[Phi]", "1"]}]]}], " ", 
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "2"], "]"}], " ", 
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "3"], "]"}], " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "1"], "]"}], " ", 
     SubscriptBox["A", "1"]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "-", 
         SubscriptBox["\[Phi]", "3"]}], ")"}]}]], " ", 
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "1"], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       SubscriptBox["\[Theta]", "2"]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "3"], "]"}], " ", 
     SubscriptBox["A", "1"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7999612768004627`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"282e9437-7b7a-4e72-8c9d-e52660394606"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["V", "2"], "=", 
  RowBox[{
   SqrtBox["2"], 
   SubscriptBox["V", "2"]}]}]], "Input",
 CellChangeTimes->{{3.7999335586865225`*^9, 3.799933603135711*^9}, {
   3.7999393524551497`*^9, 3.7999393640879736`*^9}, 3.7999397137689996`*^9, {
   3.799961153103229*^9, 3.799961166013706*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"20b76a85-addf-4c45-acfc-bc1fc059e3b1"],

Cell[BoxData[
 RowBox[{
  SqrtBox["2"], " ", "\[Lambda]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SqrtBox["2"]}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       SubscriptBox["\[Phi]", "1"]}]], " ", 
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "1"], "]"}], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "2"], "]"}], "2"], " ", 
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "3"], "]"}], " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "1"], "]"}], " ", 
     SubscriptBox["A", "2"]}], "-", 
    FractionBox[
     RowBox[{"3", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Phi]", "2"], "-", 
          SubscriptBox["\[Phi]", "3"]}], ")"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        SubscriptBox["\[Theta]", "1"], "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        SubscriptBox["\[Theta]", "2"], "]"}], "2"], " ", 
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "2"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "3"], "]"}], " ", 
      SubscriptBox["A", "2"]}], 
     SqrtBox["2"]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7999397250697145`*^9, 3.7999612769370975`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"937c8342-9fd8-40b6-b18b-8300a41fa343"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["V", "0"], "=", 
  FractionBox[
   SubscriptBox["V", "0"], 
   SubscriptBox["A", "0"]]}]], "Input",
 CellChangeTimes->{{3.799939752842589*^9, 3.799939760387963*^9}, {
  3.799939825640197*^9, 3.799939839604843*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"2844b9f8-3a8b-418a-a23b-5e1e833924fd"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"\[ImaginaryI]", " ", 
     SubscriptBox["\[Phi]", "2"]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     SubscriptBox["\[Phi]", "3"]}]}]], " ", "\[Lambda]", " ", 
  RowBox[{"Sin", "[", 
   SubscriptBox["\[Theta]", "2"], "]"}], " ", 
  RowBox[{"Sin", "[", 
   SubscriptBox["\[Theta]", "3"], "]"}]}]], "Output",
 CellChangeTimes->{3.799939840974507*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"d7943dbe-f65e-44e8-af5b-a031c8150556"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["V", "1"], "=", 
  FractionBox[
   SubscriptBox["V", "1"], 
   SubscriptBox["A", "1"]]}]], "Input",
 CellChangeTimes->{{3.7999398432462626`*^9, 3.7999398519210443`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"f11048f0-5662-4e93-ad1b-8bfaf85ee94a"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", 
     SubscriptBox["\[Phi]", "2"]}]], " ", "\[Lambda]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Phi]", "1"], "+", 
          SubscriptBox["\[Phi]", "2"]}], ")"}]}]], " ", 
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "2"], "]"}], " ", 
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "3"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "1"], "]"}], " ", 
      SubscriptBox["A", "1"]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["\[Phi]", "3"]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SubscriptBox["\[Phi]", "2"]}]]}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "1"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Theta]", "2"]}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "3"], "]"}], " ", 
      SubscriptBox["A", "1"]}]}], ")"}]}], 
  RowBox[{"2", " ", 
   SubscriptBox["A", "1"]}]]], "Output",
 CellChangeTimes->{3.7999398529075613`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"55f11d18-a5df-458b-b6f9-a6c3358755b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["V", "1"], "=", 
  RowBox[{"FullSimplify", "[", 
   SubscriptBox["V", "1"], "]"}]}]], "Input",
 CellChangeTimes->{{3.7999398670259905`*^9, 3.7999398724976583`*^9}, {
  3.7999399522855206`*^9, 3.7999399560058823`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"93b5cfe7-d008-416f-8eb9-6b8b4673f6ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[Lambda]"}], " ", 
  RowBox[{"Cos", "[", 
   SubscriptBox["\[Theta]", "2"], "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       SubscriptBox["\[Phi]", "1"]}]], " ", 
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "3"], "]"}], " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "1"], "]"}]}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       SubscriptBox["\[Phi]", "3"]}]], " ", 
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "1"], "]"}], " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "2"], "]"}], " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "3"], "]"}], " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Phi]", "2"], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.799939877684492*^9, 3.7999399619123707`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"a12b81d4-3957-494e-abce-59b8b15f6062"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["V", "2"], "=", 
  RowBox[{"FullSimplify", "[", 
   FractionBox[
    SubscriptBox["V", "2"], 
    SubscriptBox["A", "2"]], "]"}]}]], "Input",
 CellChangeTimes->{{3.799939885622215*^9, 3.7999399079539137`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"eb7d34b2-c0db-4671-9adb-ec9273f9a515"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    SubscriptBox["\[Phi]", "2"]}]], " ", "\[Lambda]", " ", 
  SuperscriptBox[
   RowBox[{"Cos", "[", 
    SubscriptBox["\[Theta]", "2"], "]"}], "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Phi]", "1"], "+", 
          SubscriptBox["\[Phi]", "2"]}], ")"}]}]]}], " ", 
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "3"], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       SubscriptBox["\[Theta]", "1"]}], "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       SubscriptBox["\[Phi]", "3"]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         SubscriptBox["\[Phi]", "2"]}]]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "1"], "]"}], "2"], " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "2"], "]"}], " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "3"], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7999399128698792`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"a17d4f4f-9be3-44ae-8484-dc9f4173392b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"frac1", "=", 
  RowBox[{"FullSimplify", "[", 
   FractionBox[
    SubscriptBox["V", "1"], 
    SubscriptBox["V", "0"]], "]"}]}]], "Input",
 CellChangeTimes->{{3.799939921522563*^9, 3.799939926691558*^9}, {
  3.799939989481224*^9, 3.799939996894535*^9}, {3.799940226601424*^9, 
  3.7999402283739495`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"73c1c1f1-9b2d-4c7f-9b62-dc8cb5a8d43e"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Phi]", "2"], "+", 
      SubscriptBox["\[Phi]", "3"]}], ")"}]}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["\[Phi]", "1"]}]]}], " ", 
     RowBox[{"Cot", "[", 
      SubscriptBox["\[Theta]", "2"], "]"}], " ", 
     RowBox[{"Cot", "[", 
      SubscriptBox["\[Theta]", "3"], "]"}], " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "1"], "]"}]}], "+", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       SubscriptBox["\[Phi]", "3"]}]], " ", 
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "1"], "]"}], " ", 
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "2"], "]"}], " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Phi]", "2"], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7999399294926677`*^9, 3.799939963285141*^9, 
  3.799939999812259*^9, 3.7999402315513425`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"7257dc97-37dd-429d-bcee-e79926b671bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"frac2", "=", 
  RowBox[{"FullSimplify", "[", 
   FractionBox[
    SubscriptBox["V", "2"], 
    SubscriptBox["V", "0"]], "]"}]}]], "Input",
 CellChangeTimes->{{3.7999399676133127`*^9, 3.7999399801660333`*^9}, {
  3.7999400110884943`*^9, 3.799940037905197*^9}, {3.799940233519069*^9, 
  3.799940235273322*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"a093cc00-4335-4120-a82e-aac71dfc0d9a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", 
   SubscriptBox["\[Theta]", "2"], "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
          SubscriptBox["\[Phi]", "2"]}]]}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "1"], "]"}], "2"], " ", 
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "2"], "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Phi]", "1"], "-", 
         SubscriptBox["\[Phi]", "2"], "-", 
         SubscriptBox["\[Phi]", "3"]}], ")"}]}]], " ", 
     RowBox[{"Cot", "[", 
      SubscriptBox["\[Theta]", "2"], "]"}], " ", 
     RowBox[{"Cot", "[", 
      SubscriptBox["\[Theta]", "3"], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       SubscriptBox["\[Theta]", "1"]}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.799939982324698*^9, {3.799940025604391*^9, 3.7999400493798532`*^9}, 
   3.799940235769997*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"7e25b07c-9e44-44b0-a195-7856ca5520b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mag1", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"ComplexExpand", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"ComplexExpand", "[", "frac1", "]"}], "+", 
          RowBox[{
           RowBox[{"ComplexExpand", "[", "frac1", "]"}], "\[Conjugate]"}]}], 
         "2"], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"ComplexExpand", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"ComplexExpand", "[", "frac1", "]"}], "-", 
          RowBox[{
           RowBox[{"ComplexExpand", "[", "frac1", "]"}], "\[Conjugate]"}]}], 
         RowBox[{"2", "\[ImaginaryI]"}]], "]"}], "2"]}], ")"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.799940247581499*^9, 3.7999403117485714`*^9}, {
  3.7999403586917553`*^9, 3.7999405488976555`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"029eba9d-caf8-4de2-8abb-7c090e50c2de"],

Cell[BoxData[
 RowBox[{"\[Sqrt]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     FractionBox["1", "4"], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "2"], "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Phi]", "1"], "-", 
           SubscriptBox["\[Phi]", "2"], "-", 
           SubscriptBox["\[Phi]", "3"]}], "]"}], " ", 
         RowBox[{"Cot", "[", 
          SubscriptBox["\[Theta]", "3"], "]"}], " ", 
         RowBox[{"Csc", "[", 
          FractionBox[
           SubscriptBox["\[Theta]", "2"], "2"], "]"}], " ", 
         RowBox[{"Sec", "[", 
          FractionBox[
           SubscriptBox["\[Theta]", "2"], "2"], "]"}], " ", 
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "1"], "]"}]}], "-", 
        RowBox[{"4", " ", 
         RowBox[{"Cos", "[", 
          SubscriptBox["\[Theta]", "1"], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           SubscriptBox["\[Phi]", "2"], "]"}], "2"]}]}], ")"}], "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Phi]", "2"], "+", 
          SubscriptBox["\[Phi]", "3"]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cot", "[", 
             SubscriptBox["\[Theta]", "2"], "]"}]}], " ", 
           RowBox[{"Cot", "[", 
            SubscriptBox["\[Theta]", "3"], "]"}], " ", 
           RowBox[{"Sin", "[", 
            SubscriptBox["\[Theta]", "1"], "]"}], " ", 
           RowBox[{"Sin", "[", 
            SubscriptBox["\[Phi]", "1"], "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "1"], "]"}], " ", 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "2"], "]"}], " ", 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Phi]", "3"], "]"}], " ", 
           RowBox[{"Sin", "[", 
            SubscriptBox["\[Phi]", "2"], "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Phi]", "1"], "]"}], " ", 
           RowBox[{"Cot", "[", 
            SubscriptBox["\[Theta]", "2"], "]"}], " ", 
           RowBox[{"Cot", "[", 
            SubscriptBox["\[Theta]", "3"], "]"}], " ", 
           RowBox[{"Sin", "[", 
            SubscriptBox["\[Theta]", "1"], "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "1"], "]"}], " ", 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "2"], "]"}], " ", 
           RowBox[{"Sin", "[", 
            SubscriptBox["\[Phi]", "2"], "]"}], " ", 
           RowBox[{"Sin", "[", 
            SubscriptBox["\[Phi]", "3"], "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Phi]", "2"], "+", 
          SubscriptBox["\[Phi]", "3"]}], "]"}]}]}], ")"}], "2"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.7999402542339897`*^9, 3.7999403209036427`*^9}, 
   3.7999403948455906`*^9, {3.7999404458736506`*^9, 3.7999404685566645`*^9}, 
   3.7999405396095314`*^9, 3.799940710102621*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"2e970190-b16d-4c0d-a9b5-fdd307a2e328"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"phase1", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"ArcTan", "[", 
     RowBox[{"ComplexExpand", "[", 
      FractionBox[
       RowBox[{"ComplexExpand", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"ComplexExpand", "[", "frac1", "]"}], "-", 
          RowBox[{
           RowBox[{"ComplexExpand", "[", "frac1", "]"}], "\[Conjugate]"}]}], 
         RowBox[{"2", "\[ImaginaryI]"}]], "]"}], 
       RowBox[{"ComplexExpand", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"ComplexExpand", "[", "frac1", "]"}], "+", 
          RowBox[{
           RowBox[{"ComplexExpand", "[", "frac1", "]"}], "\[Conjugate]"}]}], 
         "2"], "]"}]], "]"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.799941604981309*^9, 3.799941620749161*^9}, {
  3.799941671135485*^9, 3.799941784385076*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"b24772bb-484f-4c85-9e47-93d84e5140d8"],

Cell[BoxData[
 RowBox[{"ArcTan", "[", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "1"], "]"}]}], " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "2"], "]"}], " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "3"], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       SubscriptBox["\[Phi]", "2"]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "3"], "]"}], " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "1"], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       SubscriptBox["\[Phi]", "1"], "-", 
       SubscriptBox["\[Phi]", "2"], "-", 
       SubscriptBox["\[Phi]", "3"]}], "]"}]}]}], 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "3"], "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       SubscriptBox["\[Phi]", "1"], "-", 
       SubscriptBox["\[Phi]", "2"], "-", 
       SubscriptBox["\[Phi]", "3"]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "1"], "]"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "1"], "]"}], " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "2"], "]"}], " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "3"], "]"}], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Phi]", "2"], "]"}], "2"]}]}]], "]"}]], "Output",
 CellChangeTimes->{{3.799941729645342*^9, 3.7999417540317907`*^9}, 
   3.7999417910895214`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"1f890f7f-d83f-4fad-b0b0-3b6714285e0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mag2", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"ComplexExpand", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"ComplexExpand", "[", "frac2", "]"}], "+", 
          RowBox[{
           RowBox[{"ComplexExpand", "[", "frac2", "]"}], "\[Conjugate]"}]}], 
         "2"], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"ComplexExpand", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"ComplexExpand", "[", "frac2", "]"}], "-", 
          RowBox[{
           RowBox[{"ComplexExpand", "[", "frac2", "]"}], "\[Conjugate]"}]}], 
         RowBox[{"2", "\[ImaginaryI]"}]], "]"}], "2"]}], ")"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.799945262126396*^9, 3.7999452856594887`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"6c24e2b3-f11e-46f8-9c57-f312e945c91f"],

Cell[BoxData[
 RowBox[{"\[Sqrt]", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "2"], "]"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         SubscriptBox["\[Theta]", "1"], "]"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         SubscriptBox["\[Theta]", "2"], "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"5", "-", 
         RowBox[{"4", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Phi]", "2"]}], "]"}]}]}], ")"}]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         SubscriptBox["\[Theta]", "1"], "]"}], "3"], " ", 
       RowBox[{"Cos", "[", 
        SubscriptBox["\[Theta]", "2"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Phi]", "1"], "-", 
           SubscriptBox["\[Phi]", "2"], "-", 
           SubscriptBox["\[Phi]", "3"]}], "]"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Phi]", "1"], "+", 
            SubscriptBox["\[Phi]", "2"], "-", 
            SubscriptBox["\[Phi]", "3"]}], "]"}]}]}], ")"}], " ", 
       RowBox[{"Cot", "[", 
        SubscriptBox["\[Theta]", "2"], "]"}], " ", 
       RowBox[{"Cot", "[", 
        SubscriptBox["\[Theta]", "3"], "]"}], " ", 
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Theta]", "1"], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cot", "[", 
         SubscriptBox["\[Theta]", "2"], "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cot", "[", 
         SubscriptBox["\[Theta]", "3"], "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", 
          SubscriptBox["\[Theta]", "1"]}], "]"}], "2"]}]}], ")"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.799945445005666*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"a7a44764-87c6-4392-91df-0de71aba4c05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"phase2", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ArcTan", "[", 
    RowBox[{"ComplexExpand", "[", 
     FractionBox[
      RowBox[{"ComplexExpand", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"ComplexExpand", "[", "frac2", "]"}], "-", 
         RowBox[{
          RowBox[{"ComplexExpand", "[", "frac2", "]"}], "\[Conjugate]"}]}], 
        RowBox[{"2", "\[ImaginaryI]"}]], "]"}], 
      RowBox[{"ComplexExpand", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"ComplexExpand", "[", "frac2", "]"}], "+", 
         RowBox[{
          RowBox[{"ComplexExpand", "[", "frac2", "]"}], "\[Conjugate]"}]}], 
        "2"], "]"}]], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.799945289044563*^9, 3.7999453100298796`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"ea1e350b-1408-451b-8667-abb1e391066d"],

Cell[BoxData[
 RowBox[{"ArcTan", "[", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "8"}], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "1"], "]"}], "2"], " ", 
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "2"], "]"}], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "2"], "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "3"], "]"}], "2"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       SubscriptBox["\[Phi]", "2"]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       SubscriptBox["\[Theta]", "1"]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       SubscriptBox["\[Theta]", "2"]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       SubscriptBox["\[Phi]", "1"], "-", 
       SubscriptBox["\[Phi]", "2"], "-", 
       SubscriptBox["\[Phi]", "3"]}], "]"}]}]}], 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "1"], "]"}], "2"], " ", 
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "2"], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SubscriptBox["\[Phi]", "2"]}], "]"}]}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "2"], "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "3"], "]"}], "2"]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{
       SubscriptBox["\[Phi]", "1"], "-", 
       SubscriptBox["\[Phi]", "2"], "-", 
       SubscriptBox["\[Phi]", "3"]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       SubscriptBox["\[Theta]", "1"]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       SubscriptBox["\[Theta]", "2"]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       SubscriptBox["\[Theta]", "3"]}], "]"}]}]}]], "]"}]], "Output",
 CellChangeTimes->{3.7999454569976006`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"bb528e58-e145-45d9-a9e4-6bd76fe8dbd3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"phase2", "-", "phase1"}], "]"}]], "Input",
 CellChangeTimes->{{3.7999459261497793`*^9, 3.799945969817051*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"6a57dcc9-44b6-49be-ac1c-9b491dfc4c53"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ArcTan", "[", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "1"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "2"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "3"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Phi]", "2"]}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "3"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "1"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Phi]", "1"], "-", 
        SubscriptBox["\[Phi]", "2"], "-", 
        SubscriptBox["\[Phi]", "3"]}], "]"}]}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "3"], "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{
        SubscriptBox["\[Phi]", "1"], "-", 
        SubscriptBox["\[Phi]", "2"], "-", 
        SubscriptBox["\[Phi]", "3"]}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "1"], "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "1"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "2"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "3"], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Phi]", "2"], "]"}], "2"]}]}]], "]"}], "+", 
  RowBox[{"ArcTan", "[", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "8"}], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        SubscriptBox["\[Theta]", "1"], "]"}], "2"], " ", 
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "2"], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Theta]", "2"], "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Theta]", "3"], "]"}], "2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Phi]", "2"]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Theta]", "1"]}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Theta]", "2"]}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Theta]", "3"]}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Phi]", "1"], "-", 
        SubscriptBox["\[Phi]", "2"], "-", 
        SubscriptBox["\[Phi]", "3"]}], "]"}]}]}], 
    RowBox[{
     RowBox[{"4", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        SubscriptBox["\[Theta]", "1"], "]"}], "2"], " ", 
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "2"], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Phi]", "2"]}], "]"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Theta]", "2"], "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Theta]", "3"], "]"}], "2"]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        SubscriptBox["\[Phi]", "1"], "-", 
        SubscriptBox["\[Phi]", "2"], "-", 
        SubscriptBox["\[Phi]", "3"]}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Theta]", "1"]}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Theta]", "2"]}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Theta]", "3"]}], "]"}]}]}]], "]"}]}]], "Output",
 CellChangeTimes->{{3.799945960350363*^9, 3.79994598863943*^9}},
 CellLabel->"Out[63]=",ExpressionUUID->"a30e1074-6134-4a8f-9b24-37e165b6ff52"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Unequal ",
 StyleBox["t - Method -II",
  FontSlant->"Italic"]
}], "Subsection",
 CellChangeTimes->{{3.7999589034438286`*^9, 
  3.7999589223991423`*^9}},ExpressionUUID->"7ab357db-88de-4e61-a78d-\
fa2464cf1d5d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
     SubscriptBox["c", "T"], ",", 
     SubscriptBox["c", "a"], ",", 
     SubscriptBox["c", "T1"], ",", 
     SubscriptBox["c", "a1"], ",", 
     SubscriptBox["c", "b"], ",", 
     SubscriptBox["c", "b1"], ",", "\[Psi]", ",", "t", ",", "t1", ",", "t2", 
     ",", "t3", ",", "r1", ",", "r2", ",", "r3"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]", "=", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["A", "0"], "+", " ", 
     RowBox[{
      SubscriptBox["A", "1"], 
      SubscriptBox["c", "T"]}], "+", 
     RowBox[{
      SubscriptBox["A", "2"], 
      FractionBox[
       SuperscriptBox[
        SubscriptBox["c", "T"], "2"], 
       SqrtBox["2"]]}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["t", "2"]}]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["t", "2"]}]]}], ",", "t"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["c", "T"], ",", 
     SubscriptBox["c", "a"]}], "}"}], "=", 
   RowBox[{
    RowBox[{"B", "[", "t1", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["c", "T1"], ",", 
      SubscriptBox["c", "a1"]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PDC", "[", "\[Lambda]_", "]"}], "=", 
   RowBox[{"1", "+", 
    RowBox[{"\[Lambda]", " ", 
     SubscriptBox["c", "T1"], " ", 
     SubscriptBox["c", "b"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]", "=", 
   RowBox[{
    RowBox[{"PDC", "[", "\[Lambda]", "]"}], "\[Psi]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["c", "T1"], ",", 
     SubscriptBox["c", "c"]}], "}"}], "=", 
   RowBox[{
    RowBox[{"B", "[", "t2", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["c", "T2"], ",", 
      SubscriptBox["c", "c1"]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["c", "a1"], ",", 
     SubscriptBox["c", "c1"]}], "}"}], "=", 
   RowBox[{
    RowBox[{"B", "[", "t3", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["c", "a2"], ",", 
      SubscriptBox["c", "c2"]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.799600161526129*^9, 3.799600292091386*^9}, {
   3.7996004189868298`*^9, 3.7996004301038494`*^9}, {3.7996005152642612`*^9, 
   3.7996006829190707`*^9}, {3.7996007148750443`*^9, 
   3.7996007718976808`*^9}, {3.7996008072123785`*^9, 3.799600810320636*^9}, {
   3.7996008937891216`*^9, 3.7996009021592717`*^9}, {3.799600989965607*^9, 
   3.7996011602442627`*^9}, {3.7996011950506835`*^9, 3.799601221261483*^9}, {
   3.799601259155484*^9, 3.7996012835985703`*^9}, {3.7996028683140497`*^9, 
   3.799602885918189*^9}, 3.799602948593134*^9, {3.7999326628139877`*^9, 
   3.799932698509794*^9}, {3.799939125145218*^9, 3.7999392734394517`*^9}, {
   3.7999393082136507`*^9, 3.7999393377732325`*^9}, {3.799939417452677*^9, 
   3.799939437967784*^9}, {3.7999473124082584`*^9, 3.7999474503623686`*^9}, {
   3.7999475216317916`*^9, 3.799947559171444*^9}, 3.799947606830967*^9, {
   3.799952131616025*^9, 3.7999521328476963`*^9}, {3.7999589304076853`*^9, 
   3.7999589311048217`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"d45d79e1-36ff-4821-98a2-240144fada17"],

Cell[BoxData[
 TemplateBox[{
  "ClearAll","ssym",
   "\"\\!\\(\\*SubscriptBox[\\\"c\\\", \\\"T\\\"]\\) is not a symbol or a \
string.\"",2,1,1,26602843674646393294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.799958933758726*^9, 3.799958994263934*^9, 
  3.7999699581657476`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"81ccca63-7be0-45ef-b10a-bdef00762820"],

Cell[BoxData[
 TemplateBox[{
  "ClearAll","ssym",
   "\"\\!\\(\\*SubscriptBox[\\\"c\\\", \\\"a\\\"]\\) is not a symbol or a \
string.\"",2,1,2,26602843674646393294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.799958933758726*^9, 3.799958994263934*^9, 
  3.799969958402151*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"76035398-8f63-441f-a570-cf20af9fe8da"],

Cell[BoxData[
 TemplateBox[{
  "ClearAll","ssym",
   "\"\\!\\(\\*SubscriptBox[\\\"c\\\", \\\"T1\\\"]\\) is not a symbol or a \
string.\"",2,1,3,26602843674646393294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.799958933758726*^9, 3.799958994263934*^9, 
  3.7999699584180703`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"b44e310a-0202-4238-9172-fad17dd3fd2d"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ClearAll\\\", \
\\\"::\\\", \\\"ssym\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,1,4,26602843674646393294,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.799958933758726*^9, 3.799958994263934*^9, 
  3.7999699584340305`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"4ba9ada0-4359-4e6b-be64-a80348e06c57"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"out", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"CoefficientList", "[", 
       RowBox[{
        RowBox[{"Expand", "[", "\[Psi]", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["c", "a2"], ",", 
          SubscriptBox["c", "b"], ",", 
          SubscriptBox["c", "c2"]}], "}"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2", ",", "1"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Lambda]", ",", 
      SubscriptBox["c", "T2"]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.799959051400152*^9, 3.79995907153535*^9}, {
  3.7999699251410904`*^9, 3.799969926275057*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"c53fb4ea-2bbb-4121-b033-f2acc3153263"],

Cell[BoxData[
 RowBox[{"\[Lambda]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SqrtBox[
       RowBox[{"1", "-", 
        SuperscriptBox["t2", "2"]}]]}], " ", 
     SqrtBox[
      RowBox[{"1", "-", 
       SuperscriptBox["t3", "2"]}]], " ", 
     SubscriptBox["A", "0"]}], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["t1", "2"]}]], " ", "t2", " ", "t3", " ", 
        SubscriptBox["A", "1"]}], "-", 
       RowBox[{"4", " ", "t1", " ", "t2", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["t2", "2"]}]], " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["t3", "2"]}]], " ", 
        SubscriptBox["A", "1"]}]}], ")"}], " ", 
     SubscriptBox["c", "T2"]}], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "t1", " ", 
        SqrtBox[
         RowBox[{"2", "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["t1", "2"]}]}]], " ", 
        SuperscriptBox["t2", "2"], " ", "t3", " ", 
        SubscriptBox["A", "2"]}], "-", 
       RowBox[{"3", " ", 
        SqrtBox["2"], " ", 
        SuperscriptBox["t1", "2"], " ", 
        SuperscriptBox["t2", "2"], " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["t2", "2"]}]], " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["t3", "2"]}]], " ", 
        SubscriptBox["A", "2"]}]}], ")"}], " ", 
     SubsuperscriptBox["c", "T2", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.799958946080776*^9, 3.799958996784195*^9, 3.799959071961175*^9, {
   3.799969933929554*^9, 3.7999699606341476`*^9}},
 CellLabel->"Out[9]=",ExpressionUUID->"4d86cd2a-70eb-4d05-9a52-7ab36addcf14"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Equal ",
 StyleBox["t",
  FontSlant->"Italic"]
}], "Subsection",
 CellChangeTimes->{{3.7999473005180936`*^9, 
  3.7999473016959*^9}},ExpressionUUID->"20873235-cc55-4675-8edc-bebc1c8a8b95"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
    SubscriptBox["c", "T"], ",", 
    SubscriptBox["c", "a"], ",", 
    SubscriptBox["c", "T1"], ",", 
    SubscriptBox["c", "a1"], ",", 
    SubscriptBox["c", "b"], ",", 
    SubscriptBox["c", "b1"], ",", "\[Psi]", ",", "t", ",", "t1", ",", "t2", 
    ",", "t3", ",", "r1", ",", "r2", ",", "r3"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]", "=", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["A", "0"], "+", " ", 
     RowBox[{
      SubscriptBox["A", "1"], 
      SubscriptBox["c", "T"]}], "+", 
     RowBox[{
      SubscriptBox["A", "2"], 
      FractionBox[
       SuperscriptBox[
        SubscriptBox["c", "T"], "2"], 
       SqrtBox["2"]]}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["t", "2"]}]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["t", "2"]}]]}], ",", "t"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["c", "T"], ",", 
     SubscriptBox["c", "a"]}], "}"}], "=", 
   RowBox[{
    RowBox[{"B", "[", "t1", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["c", "T1"], ",", 
      SubscriptBox["c", "a1"]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PDC", "[", "\[Lambda]_", "]"}], "=", 
   RowBox[{"1", "+", 
    RowBox[{"\[Lambda]", " ", 
     SubscriptBox["c", "T1"], " ", 
     SubscriptBox["c", "b"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]", "=", 
   RowBox[{
    RowBox[{"PDC", "[", "\[Lambda]", "]"}], "\[Psi]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["c", "T1"], ",", 
     SubscriptBox["c", "c"]}], "}"}], "=", 
   RowBox[{
    RowBox[{"B", "[", "t2", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["c", "T2"], ",", 
      SubscriptBox["c", "c1"]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["c", "a1"], ",", 
     SubscriptBox["c", "c1"]}], "}"}], "=", 
   RowBox[{
    RowBox[{"B", "[", 
     FractionBox["1", 
      SqrtBox["2"]], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["c", "a2"], ",", 
      SubscriptBox["c", "c2"]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.799600161526129*^9, 3.799600292091386*^9}, {
   3.7996004189868298`*^9, 3.7996004301038494`*^9}, {3.7996005152642612`*^9, 
   3.7996006829190707`*^9}, {3.7996007148750443`*^9, 
   3.7996007718976808`*^9}, {3.7996008072123785`*^9, 3.799600810320636*^9}, {
   3.7996008937891216`*^9, 3.7996009021592717`*^9}, {3.799600989965607*^9, 
   3.7996011602442627`*^9}, {3.7996011950506835`*^9, 3.799601221261483*^9}, {
   3.799601259155484*^9, 3.7996012835985703`*^9}, {3.7996028683140497`*^9, 
   3.799602885918189*^9}, 3.799602948593134*^9, {3.7999326628139877`*^9, 
   3.799932698509794*^9}, {3.799939125145218*^9, 3.7999392734394517`*^9}, {
   3.7999393082136507`*^9, 3.7999393377732325`*^9}, {3.799939417452677*^9, 
   3.799939437967784*^9}, {3.7999473124082584`*^9, 3.7999474503623686`*^9}, {
   3.7999475216317916`*^9, 3.799947559171444*^9}, 3.799947606830967*^9, {
   3.799952131616025*^9, 3.7999521328476963`*^9}, 
   3.80001666317601*^9},ExpressionUUID->"d63532cb-b7ac-43d0-a9c2-\
639b0aa869a7"],

Cell[BoxData[
 TemplateBox[{
  "ClearAll","ssym",
   "\"\\!\\(\\*SubscriptBox[\\\"c\\\", \\\"T\\\"]\\) is not a symbol or a \
string.\"",2,1,1,26602727124930415077,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7999476100892544`*^9, 3.7999521383151035`*^9, 
  3.799952173711427*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"8ef2393d-e31e-41b4-acd6-5c08ebda9e36"],

Cell[BoxData[
 TemplateBox[{
  "ClearAll","ssym",
   "\"\\!\\(\\*SubscriptBox[\\\"c\\\", \\\"a\\\"]\\) is not a symbol or a \
string.\"",2,1,2,26602727124930415077,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7999476100892544`*^9, 3.7999521383151035`*^9, 
  3.7999521739507875`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"b71842b8-1fa1-49e9-9d0c-01f43cc86f84"],

Cell[BoxData[
 TemplateBox[{
  "ClearAll","ssym",
   "\"\\!\\(\\*SubscriptBox[\\\"c\\\", \\\"T1\\\"]\\) is not a symbol or a \
string.\"",2,1,3,26602727124930415077,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7999476100892544`*^9, 3.7999521383151035`*^9, 
  3.799952173967743*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"cd6e0f54-0af0-456d-8e11-1b436d08fd87"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ClearAll\\\", \
\\\"::\\\", \\\"ssym\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,1,4,26602727124930415077,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7999476100892544`*^9, 3.7999521383151035`*^9, 
  3.799952173983748*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"ff354733-4948-49bb-995a-1576347e3240"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"out", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"CoefficientList", "[", 
       RowBox[{
        RowBox[{"Expand", "[", "\[Psi]", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["c", "a2"], ",", 
          SubscriptBox["c", "b"], ",", 
          SubscriptBox["c", "c2"]}], "}"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2", ",", "1"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Lambda]", ",", 
      SubscriptBox["c", "T2"]}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[9]:=",ExpressionUUID->"93e30e28-2e9b-421b-995a-cc3b71a13e9f"],

Cell[BoxData[
 RowBox[{"\[Lambda]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], " ", 
     SqrtBox[
      RowBox[{"2", "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["t2", "2"]}]}]], " ", 
     SubscriptBox["A", "0"]}], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        SqrtBox[
         RowBox[{"2", "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["t1", "2"]}]}]], " ", "t2", " ", 
        SubscriptBox["A", "1"]}], "+", 
       RowBox[{"2", " ", "t1", " ", "t2", " ", 
        SqrtBox[
         RowBox[{"2", "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["t2", "2"]}]}]], " ", 
        SubscriptBox["A", "1"]}]}], ")"}], " ", 
     SubscriptBox["c", "T2"]}], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", "t1", " ", 
     SuperscriptBox["t2", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["t1", "2"]}]]}], "+", 
       RowBox[{"3", " ", "t1", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["t2", "2"]}]]}]}], ")"}], " ", 
     SubscriptBox["A", "2"], " ", 
     SubsuperscriptBox["c", "T2", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.799947544408886*^9, 3.799947623552258*^9, 
  3.7999521411654563`*^9, 3.799952175836792*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"2a1cd288-5d1a-4379-a331-d3659c0e81fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["V", "0"], ",", 
     SubscriptBox["V", "1"], ",", 
     SubscriptBox["V", "2"]}], "}"}], "=", 
   RowBox[{"CoefficientList", "[", 
    RowBox[{"out", ",", 
     SubscriptBox["c", "T2"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["V", "0"], ",", 
    SubscriptBox["V", "1"], ",", 
    SubscriptBox["V", "2"]}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     SubscriptBox["V", "0"], 
     SubscriptBox["A", "0"]], ",", 
    FractionBox[
     SubscriptBox["V", "1"], 
     SubscriptBox["A", "1"]], ",", 
    FractionBox[
     RowBox[{
      SqrtBox["2"], 
      SubscriptBox["V", "2"]}], 
     SubscriptBox["A", "2"]]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.799947645258213*^9, 3.799947794752466*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"b66d22c4-2bde-4f82-8a41-dcc39c3050c1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], " ", 
    SqrtBox[
     RowBox[{"2", "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["t2", "2"]}]}]], " ", "\[Lambda]"}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[Lambda]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", 
         SqrtBox[
          RowBox[{"2", "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["t1", "2"]}]}]], " ", "t2", " ", 
         SubscriptBox["A", "1"]}], "+", 
        RowBox[{"2", " ", "t1", " ", "t2", " ", 
         SqrtBox[
          RowBox[{"2", "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["t2", "2"]}]}]], " ", 
         SubscriptBox["A", "1"]}]}], ")"}]}], 
     RowBox[{"2", " ", 
      SubscriptBox["A", "1"]}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"t1", " ", 
      SuperscriptBox["t2", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["t1", "2"]}]]}], "+", 
        RowBox[{"3", " ", "t1", " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["t2", "2"]}]]}]}], ")"}], " ", "\[Lambda]"}], 
     SqrtBox["2"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7999477998608446`*^9, 3.7999521761479473`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"17d26cb2-d59c-4a6b-8b2f-6772db445984"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"frac1", "=", 
  RowBox[{"FullSimplify", "[", 
   FractionBox[
    SubscriptBox["V", "1"], 
    SubscriptBox["V", "0"]], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"frac2", "=", 
  RowBox[{"FullSimplify", "[", 
   FractionBox[
    SubscriptBox["V", "2"], 
    SubscriptBox["V", "0"]], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7999478244979515`*^9, 3.7999478821308165`*^9}, {
  3.799952496753851*^9, 3.7999525095286565`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"9f9f39b1-9fc2-45ec-8453-ec5c5832ab50"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", "t1", " ", "t2"}], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox["t1", "2"]}]], " ", "t2"}], 
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["t2", "2"]}]]]}]], "Output",
 CellChangeTimes->{3.7999478830563765`*^9, 3.799952176463068*^9, 
  3.7999525277225943`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"546a7e0e-8e84-4e5c-a12b-6a0188e2525a"],

Cell[BoxData[
 RowBox[{"t1", " ", 
  SuperscriptBox["t2", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"3", " ", "t1"}], "-", 
    FractionBox[
     RowBox[{"2", " ", "\[ImaginaryI]", " ", 
      SqrtBox[
       RowBox[{"1", "-", 
        SuperscriptBox["t1", "2"]}]]}], 
     SqrtBox[
      RowBox[{"1", "-", 
       SuperscriptBox["t2", "2"]}]]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7999478830563765`*^9, 3.799952176463068*^9, 
  3.799952527733565*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"20bcc3a0-abbe-47c8-84c4-60be224696fc"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mag1", "=", 
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"2", " ", "t1", " ", "t2"}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{" ", 
         RowBox[{
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["t1", "2"]}]], " ", "t2"}]}], 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["t2", "2"]}]]], ")"}], "2"]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phase1", "=", 
   RowBox[{"ArcTan", "[", 
    FractionBox[
     RowBox[{"-", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["t1", "2"]}]], " ", "t2"}]}], 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["t2", "2"]}]]]}], 
     RowBox[{"2", " ", "t1", " ", "t2"}]], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mag2", "=", 
   RowBox[{"t1", " ", 
    SuperscriptBox["t2", "2"], 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"3", " ", "t1"}], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", 
         FractionBox[
          RowBox[{" ", 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox["t1", "2"]}]], " "}], 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["t2", "2"]}]]]}], ")"}], "2"]}]]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phase2", "=", 
   RowBox[{"ArcTan", "[", 
    FractionBox[
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", "  ", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["t1", "2"]}]]}], 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["t2", "2"]}]]]}], 
     RowBox[{"3", " ", "t1"}]], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.799947919048143*^9, 3.799947980197586*^9}, {
   3.7999523119717813`*^9, 3.79995234030002*^9}, {3.799952425317835*^9, 
   3.7999524617873406`*^9}, {3.79995254519886*^9, 3.7999526289249773`*^9}, {
   3.7999528236115303`*^9, 3.7999529640650034`*^9}, {3.7999529959048185`*^9, 
   3.799953015278056*^9}, {3.7999530504854035`*^9, 3.799953181690139*^9}, 
   3.799953278857317*^9, {3.7999533318854847`*^9, 3.799953332842961*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"1177d8dc-29bc-423d-8d59-7604b9d73e62"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"phase2", "-", "phase1"}], "]"}]], "Input",
 CellChangeTimes->{{3.7999480443450947`*^9, 3.79994805511526*^9}, 
   3.7999534901199675`*^9},
 CellLabel->"In[62]:=",ExpressionUUID->"11f5d434-3e41-4d9d-8a7f-c7392c8a4ef3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ArcTan", "[", 
   FractionBox[
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox["t1", "2"]}]], 
    RowBox[{"2", " ", "t1", " ", 
     SqrtBox[
      RowBox[{"1", "-", 
       SuperscriptBox["t2", "2"]}]]}]], "]"}], "-", 
  RowBox[{"ArcTan", "[", 
   FractionBox[
    RowBox[{"2", " ", 
     SqrtBox[
      RowBox[{"1", "-", 
       SuperscriptBox["t1", "2"]}]]}], 
    RowBox[{"3", " ", "t1", " ", 
     SqrtBox[
      RowBox[{"1", "-", 
       SuperscriptBox["t2", "2"]}]]}]], "]"}]}]], "Output",
 CellChangeTimes->{3.799948055763524*^9, 3.7999522044622707`*^9, 
  3.7999533392677455`*^9, 3.7999534906306057`*^9, 3.7999548342774277`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"84902832-614e-4f44-82eb-ba71b9b3425f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["mag1", "4"], "==", 
    SuperscriptBox["mag2", "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{"t1", ",", "t2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7999484838099313`*^9, 3.7999485215938945`*^9}, {
  3.799952211582199*^9, 3.7999522148664165`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"66362915-7c81-41d2-8057-fd62633b6087"],

Cell[BoxData[
 TemplateBox[{
  "Solve","nsmet",
   "\"This system cannot be solved with the methods available to Solve.\"",2,
   19,5,26602727124930415077,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7999522410344763`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"dfdda6e1-163c-4643-b92c-04dee8e4613b"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["t2", "4"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox["t1", "2"]}], "+", 
        FractionBox[
         SqrtBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["t1", "2"]}], ")"}], "2"]], 
         SqrtBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["t2", "2"]}], ")"}], "2"]]], "+", 
        FractionBox[
         RowBox[{"4", " ", "t1", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["t1", "2"]}], ")"}], "2"], ")"}], 
           RowBox[{"1", "/", "4"}]], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Arg", "[", 
               RowBox[{"1", "-", 
                SuperscriptBox["t1", "2"]}], "]"}], "-", 
              RowBox[{"Arg", "[", 
               RowBox[{"1", "-", 
                SuperscriptBox["t2", "2"]}], "]"}]}], ")"}]}], "]"}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["t2", "2"]}], ")"}], "2"], ")"}], 
          RowBox[{"1", "/", "4"}]]]}], ")"}], "2"]}], "\[Equal]", 
    RowBox[{
     SuperscriptBox["t1", "2"], " ", 
     SuperscriptBox["t2", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"9", " ", 
        SuperscriptBox["t1", "2"]}], "+", 
       FractionBox[
        RowBox[{"4", " ", 
         SqrtBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["t1", "2"]}], ")"}], "2"]]}], 
        SqrtBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["t2", "2"]}], ")"}], "2"]]], "+", 
       FractionBox[
        RowBox[{"12", " ", "t1", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["t1", "2"]}], ")"}], "2"], ")"}], 
          RowBox[{"1", "/", "4"}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Arg", "[", 
              RowBox[{"1", "-", 
               SuperscriptBox["t1", "2"]}], "]"}], "-", 
             RowBox[{"Arg", "[", 
              RowBox[{"1", "-", 
               SuperscriptBox["t2", "2"]}], "]"}]}], ")"}]}], "]"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["t2", "2"]}], ")"}], "2"], ")"}], 
         RowBox[{"1", "/", "4"}]]]}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t1", ",", "t2"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.7999485086056676`*^9, 3.7999485220696573`*^9}, 
   3.7999522410614147`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"beebe6c5-6405-45e3-bfad-acb6d9541079"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fidelity-II", "Section",
 CellChangeTimes->{{3.799671659166956*^9, 
  3.799671662940861*^9}},ExpressionUUID->"d0a96fb8-5dad-4bd5-bb4b-\
5d299e41d99c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"normwant", " ", "=", " ", 
   RowBox[{
    FractionBox["1", 
     SqrtBox[
      RowBox[{"1", "+", 
       SuperscriptBox["\[Epsilon]", "2"]}]]], 
    FractionBox["1", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"2", "\[Alpha]", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["\[Alpha]", "2"]}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            FractionBox[
             RowBox[{"1", "+", 
              RowBox[{
               SuperscriptBox["\[Epsilon]", "2"], 
               RowBox[{"Cos", " ", "[", "X", "]"}]}]}], 
             RowBox[{"1", "+", 
              SuperscriptBox["\[Epsilon]", "2"]}]], ")"}]}], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            SuperscriptBox["\[Epsilon]", "2"], 
            RowBox[{"Sin", " ", "[", "X", "]"}]}], 
           RowBox[{"1", "+", 
            SuperscriptBox["\[Epsilon]", "2"]}]]}], ")"}]}]}]]]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]want", "=", 
   RowBox[{"normwant", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Alpha]", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"\[Epsilon]", " ", "c"}]}], ")"}]}], "+", 
      RowBox[{
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["\[Alpha]", "2"]}]], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "X"}]], "\[Epsilon]", " ", "c"}]}], 
        ")"}]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"normhave", "=", 
   FractionBox["1", 
    RowBox[{
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"4", 
        SuperscriptBox["t", "6"], 
        SuperscriptBox["\[Epsilon]", "2"]}]}]], 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[Alpha]", "2"], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["\[Alpha]", "2"]}], ")"}], 
        SuperscriptBox["t", "2"]}], "+", 
       RowBox[{
        FractionBox[
         RowBox[{"2", "\[Alpha]", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["\[Alpha]", "2"]}]], "t"}], 
         RowBox[{"1", "+", 
          RowBox[{"4", 
           SuperscriptBox["t", "6"], 
           SuperscriptBox["\[Epsilon]", "2"]}]}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]", "]"}], 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"4", 
              SuperscriptBox["t", "6"], 
              SuperscriptBox["\[Epsilon]", "2"], " ", 
              RowBox[{"Cos", "[", "X", "]"}]}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Phi]", "]"}], "4", 
           SuperscriptBox["t", "6"], 
           SuperscriptBox["\[Epsilon]", "2"], " ", 
           RowBox[{"Sin", "[", "X", "]"}]}]}], ")"}]}]}]]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]have", "=", 
   RowBox[{"normhave", 
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", " ", 
         RowBox[{"\[Epsilon]", " ", "c"}]}], ")"}]}], "+", " ", 
      RowBox[{
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["\[Alpha]", "2"]}]], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", "t", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "X"}]], " ", "\[Epsilon]", " ", 
          "c"}]}], ")"}]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F2", "[", 
    RowBox[{
    "\[Alpha]_", ",", "\[Phi]_", ",", "X_", ",", "\[Epsilon]_", ",", "t_"}], 
    "]"}], "=", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{"normhave", " ", "normwant", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", 
            SuperscriptBox["t", "3"], 
            SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Alpha]", "2"], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["\[Alpha]", "2"]}], ")"}], "t"}]}], ")"}]}], "+", 
        RowBox[{"\[Alpha]", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["\[Alpha]", "2"]}]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "t"}], ")"}], 
            RowBox[{"Cos", " ", "[", "\[Phi]", "]"}]}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "t"}], ")"}], 
            RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
           RowBox[{"2", 
            SuperscriptBox["t", "3"], 
            SuperscriptBox["\[Epsilon]", "2"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", "t"}], ")"}], 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]", "+", "X"}], "]"}]}], "+", 
              RowBox[{"\[ImaginaryI]", 
               RowBox[{"(", 
                RowBox[{"1", "-", "t"}], ")"}], 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]", "+", "X"}], "]"}]}]}], ")"}]}]}], ")"}]}]}],
        ")"}]}], "]"}], "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"F2", "[", 
     RowBox[{"\[Alpha]", ",", "\[Phi]", ",", 
      RowBox[{"\[Pi]", "/", "2"}], ",", "0.1", ",", 
      RowBox[{"1", "/", 
       SuperscriptBox["2", 
        RowBox[{"1", "/", "3"}]]}]}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Cambria\>\""}], ",", " ", 
      "Black"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Fidelity (with \[Alpha]\[Rule]Real, \[Beta]=\!\(\*SqrtBox[\(1 - \
\*SuperscriptBox[\(\[Alpha]\), \(2\)]\)]\)\!\(\*SuperscriptBox[\(\
\[ExponentialE]\), \(\[ImaginaryI]\\\ \[Phi]\)]\), \[Epsilon]=0.10, \
X=\[Pi]/2)\>\""}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.9", "]"}], ",", 
      RowBox[{"Opacity", "[", "0.6", "]"}]}], "}"}]}], ",", 
   RowBox[{"Mesh", "\[Rule]", " ", "None"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "50"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.799671667387864*^9, 3.799671766036331*^9}, {
   3.799671799940827*^9, 3.7996718456599197`*^9}, {3.799672424405875*^9, 
   3.799672655560954*^9}, {3.799672743606657*^9, 3.7996727869753485`*^9}, {
   3.799676345063035*^9, 3.799676489499812*^9}, {3.7996765320215855`*^9, 
   3.799676687378162*^9}, {3.799676801928854*^9, 3.7996768232927275`*^9}, {
   3.7996769904218254`*^9, 3.7996769931026554`*^9}, {3.7996771102344456`*^9, 
   3.7996771146616087`*^9}, 3.7996771672330313`*^9, {3.799677736261165*^9, 
   3.7996778304582825`*^9}, {3.7996778640474653`*^9, 3.799678017510107*^9}, 
   3.7996780501420527`*^9, {3.79967844722204*^9, 3.7996784536418743`*^9}, {
   3.799707334694071*^9, 3.799707337136561*^9}, {3.799707417463563*^9, 
   3.7997074253657017`*^9}, {3.7997433245330973`*^9, 
   3.7997434020584345`*^9}, {3.7997436739321327`*^9, 3.799743686263794*^9}, {
   3.7997439576206875`*^9, 3.799744011120928*^9}, {3.7997441985954804`*^9, 
   3.7997442139520273`*^9}, 3.7997445391994705`*^9, {3.7997446329619017`*^9, 
   3.7997446362564197`*^9}, {3.7997495741955385`*^9, 3.799749634817428*^9}, 
   3.799749707907159*^9},
 CellLabel->"In[98]:=",ExpressionUUID->"4c7e79b5-7e19-47e3-8520-c216551826e7"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJxk3Xc8Vu/jx/H2ToP20FYpTe29B+1BQ6GSppKEitBA2iUlVCIjpSEaFBpa
RhltO2TLXt98H97nen/01+/xe37vx30f55z79bnP1TnX1VNr55KN9erUqdO7
RZ069f/+33kbUyOepS2fVD+w2YdE5UOTqv+3OnVyJo84aVIUn3xuMrwkaF5u
ZVX2ZJdjg+fEJ7tIruR+Ub78r3vPvXIuQu225I7PtMuL/vqaw0dy4pLvS17e
JSMu76/Hbwxory7/SPKOx2xlM//6plmFEyLUAiWXPRvzNuWv75W18+kzN0jy
8Vd9leP+ul/9eyFxySGSf22Vqv/5r5fmf4hxMH8l+UH9pKuRf31CUnq6mvwb
ye/1WB/19q8f/NSoUu7JO8knjTWWf/HXn4X0ahOhFib5RDsv24C/fmiV/JmX
peGS9z5rPdDvr19bcutyn7mRkv9aq17p89eD542/YW73UfLbytatvP560rRQ
77jkT5Lf/NFV2/WvNxy/0m/SyGjJczWzy53/er8Ryc8dzGMkH1mn6uflvz5b
Uf9taXis2M+7r8jY/fXNvetGqcl/kXx3gYP1mb9u1eXkD9/tXyV/09pg+Ym/
7iHbLVXuyTfJ095o6ln/9bfNPXN3N/shuZ/NwW9H/npG/bFl4Wo/xf788v2S
xV9vfFDb3G5pnOSGWY5eZn+9o/HAoy9LhTfNrSt78K8P2JtrU3A1XnL5MJMw
k78+brffqT5zEyQfofsm0eivz99hen5pjvDWLZot2Vd9vm2ZdcncLlHyOsrv
uxr+9e2bWjr5TEqS3PLz6Nl7q4+71qfrccnCuz+WjzL46yc1Lt9sZZss+YbQ
EW+r3XmV1q1JI1MkD543eEj1+/isGHB3+1fhRnYyTao/N2hJjq+D+S/JU2L3
aFRv58cFDx+/HZAq+aGPDSYaV58P8w4+Kw0XLvur8s7+v14wa+aLAfvSJL++
qOVb07/eaHqLN2ry6ZJ/sN7qXL3/O0z++OHoS+EWaZdUjv31/uMvffTd/lty
23d1/tj+9bGjNWOT5TLE+d+q6+tzf33eiP7f5Z4I/zDCR+bKX189JDt+unam
OB+UypXc/vo2Rd+U3c2yJC8qd393768fUDjw+6qPcPkRO5uE/PUTvWfkhKtl
Sz5ltdX8L3/dTr55QVWV8DNLyqqq/3/0yr738Sehus8mN6rVK/irlW3+0yt4
K8eG3blX8Hl3HxRxr+AP5brHcK/gBQpn6nGv4EvGPvXhXsHrLXrSmnsFN5h2
bBr3Cv5nx2ct7hX8cE+Xo9wreMvOM4NCqFfwOg30enCv4KfNMr0eUq/gzyaM
0ONewfsP+aHnSb2C685td/8G9QoeZvN5IvcK3nfN7DbcK3jPYe+GXqBewT0a
LXU8Tb2C+53VXW1LvYJP+rFO14p6BZ91SDv0MPUKvuGl3X5z6hW8n62ipSn1
Cu6auD1+P/UKflEh4bwx9Qp+6diy6/uoV/CjkdnNDalX0vE6sjzSgHoFdzHy
L9lDvYJvPlnvyB7qFdzEIs9kD/UKnnR6Zfwe6hXcO2T+UwPqFfyR9tGOhtQr
eKLdh4p91Cv4OJMjxibUK3gTX0ung9QrafuvjTE3p15J5+F4rUlHqVfwBnr3
io9Tr6Tvy+umiWepV/DW852nO1CvpOPiNMfclXoFd1yybTr3Cp6ywvlmMPUK
HnXpRRfuFfxUrV71b/h9eKhu+OQ6tXoFL+1jkMO9gg+Oe9SJewVPWJiZzr2C
r82c+4R7BZcpb/Qpg3oFj3nefgv3Ct4xq4PnT+qV9Holl0ex1Ct4r6SeDyKo
V3DF4pE+b6hX8PBxSc+CqVfwaW4WeU+oV3D7sXqLfalX8Cs93VJuU6/g7Ysn
+7tTr+Cb8sI+XKdewU+/faToSL2CX+5u8PEi9QpepPj49VnqleTbA1qepF7B
vX7Pd7GmXsF7xGfYHqFewTfK1H9nTr2S9s+H+HWm1Ct4y5ykefupV/CbY4+c
MKJewc9v2z3IkHoF3+fu2M+AegUP6bbOVJ96Bb/T2GzsbuoVPGuhltou6hX8
lGq3OD3qFdwzyC1Kj3oFX/O12eRd1Ct4buvrvXdTr+DHTPcc16dewQd8u2Rp
QL2Ch22N77SPegVft/jCWhPqFXypod9GU+oVvO7L+wssqVfS9z2i1SRr6hXc
yM9j02nqFdy0uH7rS9Qr+A1Ni+su1Cu4qortKx/qFbx8dSPnIOoVfHLIsouf
qVfSfqvVK8ti/aO3HGMn174ehM8IMMzmXsG/yj9ty72CZxY1iuZewU+kzTzF
vYKnx207yr2CfzOIzE+mXsHDfX7U417B1zsP+hxDvYJnFU08F069gvtMj50f
Sr2CT37UTTaIegW/k7qz5BH1Cj5lrkLz+9Qr+FyT/ktuUa/gplVro12pV3CD
jC6OztQr+NrCXd6XqFfwLzN2Nj9PvYKfS1nld5J6JR3fAYkPralX8P13Z7Y4
Qr2C/07b9fAQ9Qreq7jf4wPUK/jdQzKdjKlX8IdyUZF7qVfS+w+fmq5PvYL/
ipqruYt6Ba+zaPC4ndQruJyJleF26hX80dy9XbdRr6TzraHLoK3UK+l9vh30
2kK9gm+KVL+6hXoFL27i0mYr9Qr+YOKghtuoV9L3Ysa+w9upV/AG4WMcd1Kv
4Cd7pKzdTb2Cf15gH21AvYK7f58qb0y9grf9tW25KfUKviyhzOkw9QquG2w8
wpZ6BS+RMVS/QL2Cd+qXcuAq9Uo6n1urzLtNvYI/V26Z8ox6BX9Zd1FALPVK
Oj9r9SrHoGHWa924yQ1q9Qq+I6BLFvcKnnhErin3Cv7ydKUf9wre1ThiCfcK
HvG0uAv3Cv6i50hV7hV8ncFvuR/UK/jm0Db20dQruJWGd/EH6hX8VllX1VfU
K7hsiKxnIPUK/uidUW8/6hV8xZ4OIXeoV/BtfgoX3alX8CVrwm9eo17BTS4c
rrhMvYKPbL/W4Tz1Cv7u4FLrk9Qr6fVJR95aUa/g6VqbtS2pV/D7Z1KWmVKv
4KtUzlwzpl7Br9QLXLCXegX3fuW0ejf1Sjq+xZpvd1Cv4LbGs5y3Uq+k46vz
6Ntm6pV0PnTSs9hEvZLe38bIbgP1Cn5TcWNXbeoVPHe/Rnst6pW0H0Yvs9ak
XsEtO/Y7qEm9gndW/16sSb2SXp+VX0+begUP3nzHdQP1SjoPGzvlbKJewb9l
j8zRpV7B39v6+G2nXsHn6mpo7aZewfN1tVvso17BE3RO/DxIvYIfcQloe5R6
BVcLX553inoFf5vol+lAvYIP27H/rif1Sjo/i8dvC6BeSd8X09/HYqhX8N21
euWYvajjeMukf35fwdUjNmRwr+D39N6Xl1Gv4PbTI89yr+CHX1+qz72CTyu5
dOo39Qq+JvKLfhL1Ct6w8Ou3b9Qr+Mj2SvmfqFdwv4bPYt5Rr+A6+cU3QqhX
8HNrru95Qr2CX73is+I+9Qqu5J2w2ot6BZczUDntQr2Ce48Mr3uFegUf+m6/
73nqFfxmerzvCeoVXPH9iqbHqFfw8Aej7h2iXkn7P0/O34R6BV9ZP737XuoV
/M2Y8al61Ct4UMHEjtuoV/AY5yIfHeoV/NjY1X7a1Cu4jdFGpfXUK3gDnTEd
1lKv4NazRu9dRb2SzpOc3gvVqFfw0nuTXFdQr+BZw7aYLadeSed5zrLEZdQr
+McCj6hl1Cv4lUNL1i2nXsEb9/WzWkG9gquoDF2vRr2StrOZYc4q6hXcSnf1
fA3qFbzMy+OwFvUKrr92v78O9Qr+80a7JjuoV/Dv+sEOBtQr+O2i1T4HqVfw
dw1fnbeiXknnuZvt0wvUK3jB26QvrtQr+IbbR7s9pl7B7QZsyI2iXsG1avVK
Rddh2i3H1H/Gr+AXn61M517B628qyeRewWUXHdnEvYJPr5p1LZd6BV+2oXlS
OvUKXh74dkMi9Qr+XK3N8q/UK/isn4N/RFKv4CFvZ/d+Q72Ce2tNnfacegWv
0jNd5ke9gl8Yc27nbeoVfMm+yBuu1Cu4e9nbRo7UK/gZjwCn89QreDvvPBNb
6hX8WHLzG4epV/DrDot6H6RewRcP/1Wxl3olHZf+LcbrUa/grslT43SpV/Co
FSZ52tQr+KZt0/ZqUK/gBfpfd6pTr+BtBm36fwfQK7iZQcWnRdQr6f0to+eo
Uq+k/Wy+fvo86hVcyWtj6GzqFXxvryFxM6lX0t+V4GU7g3oFPxh8PXY69Qru
F5X4ejr1Cv55o7XODOoVfGGDZYEzqVfS+RPd4Pts6hX88OScsHnUK/j6Dbc8
FlCv4EtXtrRcSr2CXyvX36dOvYI32vXGcz31Ch7TaIuKLvUK/uqqt50+9Qpu
dMkq3pR6BfccU/faCeoV3Df33Uln6hW8UnfNd1/qFbzDxt9ZH6lXcLVavSpN
+LVN3j/jn99X8L6HSn9xr+B2K+58417B5w4ZOIx7Bb/4+YAS9wr+a+hXOe4V
/OP5w10TqFfw7kV+ez9Tr+D9tIwXhFOv4DvvLwt9Sb2CP9Wv1+Qp9QreunUj
hXvUK/jpgmGT3alXcK24npucqFfwI/Gu3uepV/Cx+xQGHKdewRu3LUg0p15J
+2fwxd9G1Cu4zjy5+buoV/BNd/q00KVeScero/5oTeoVvEPH0E/q1Cu41fCJ
v5dQr+CjtdccUqFewY3TFl2ZRb2C+/dsPHMq9QpuPnrxwQnUK3jKsWYLx1Cv
4Jpu45+OpF7Bd9WdEjaMeiXt/11ZNkOoV9LfNfJl6WDqFfyUUq8+g6lX8Oji
PW0GU6+k87nR6feDqVfw51vqbhxCvYIHXDFKGUa9gocZbNRWpl7BK3Ndc8ZS
r+Ab3C+4TaZewe8903GbRb2C19/dt8NC6hW863C3/urUK/jS+n27baRewSff
eaiiT72Cj7p4fIQl9Qp+uM8pm4vUK/i332pHfKhXcIumdnsjqFfwMbV6tczb
/u1r3Zx/egVXmrosmXsFv9i4bSj3Cq6V+yO/kHoFb9WlxC2HegV/X3miZxr1
Snqfwz3s4qhX8GX5SWNjqFdw5Q3DR72nXsFbaCTdC6JewQvuB0Y/pF7Bf5lH
BnhRr+D2G8OOXaVewSdbay+4QL2CZy4+2s+GegV/bB3a14x6BX+1/ryGAfUK
PmumfvwW6hXcWH7m0/XUK3j6gINVK6hX8MVpK+6rUq/gY+9XpMygXsHD54Zc
nUC9gresmJc1knoFD63vETWYegVXsLBfr0C9gn+va2/Xk3oF31DR3qIr9Qq+
38ResSP1Cn7zQqq9HPUKfmL8hJg21Cu4vN2OzFbUK3hhN+VfMtQr+FUPrXAZ
6hV8QsNRvq2oV/B+Gv5ubahX8K2yY33lqFfwdzFfCjpSr+Cz7bUOdqdeSftn
89htfalXcPeO0fGDqVfw1lMeNx1DvZK+d65anWZQr+Bdyu4vX0K9go/vNrWz
NvUK3uN0QPJe6hW8qV/RrhPUK3hM1tNUD+qV9Ll315l8oF7B+9TqleLWwLi6
hnn/jLfD7fS3J3Cv4M43Z9/jXsH1fv/w5l7Be525KMO9gufuCW6SSr2CqzU6
FP6DegVftSzw/CfqFbyd95TDodQr+L7O3q+fUq/gvUfc/X/n0St4jFrnRBfq
FfyBTXmlHfUKnmcaV2xNvYJ7vkvPOEC9gtdVbVqgR72Cv6jTY8AG6hXcN0XZ
aSX1StpOvatb51Ov4HHLR16dTL2C33fatHgk9QqenWN2fAD1Cp4i+1JTnnoF
Nyq7/LMd9Qo+bc992ZbUK7jFV+XmDalX8BnzkyIrKkWv4B9fzjcsqhS9gmt3
zGiQVyl6Bfcap3Mss1L0Ct5/0z2Z9ErRK7hsnyU3flWKXsGnjzixKqVS9Aqu
eTloYrWjV/C0dt7rqt8HvYLnd46JTKsUvYLfON7Iq3o70SvpeFnG18uvFL2C
D77tnVdSKXoF7x6hfrke9Qp+emNkr5bUK7jGp3zfTtQr+N5HM0/1p17B97fv
UTiWegV/e2TSzAXUK+nvuphbupF6BVcP7PTmEPUKPr/c4fU16hW8OHNC1hvq
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
Pq68QfPJwHUeFptU0Xwy8JGvM0PUi0Wv4KvOl7r50Xwy8KU3dbb1KBK9gtf1
KLh3vlD0Svp7p6Uu7FYoeiXtz3vLmj0pEL2Cezmmb9xbIHoFb7o7c+WiAtEr
uHbL3XVVC0SvpPNzVt72HQWiV3C79FtrHxSIXsE3K+b17FkoeiV9vzT7n7pN
88nAe245KlN9XxN6JX3vSpwe9SkWvYLnybdyq1MiegWvXPlpYDrNJwP/8MZy
3BeaTwZeEtY/KJTmk5G+153qFvrQfDLwZSfGnTpO88nAtfqmZy+l+WTgey5l
169fJXoF7+fS/uE56hV8VO31cWa3LWqf+W+v4OtHaLz9z/o4Nb5kyIhS7hV8
vtHBCTxfH1xBzmISz9cH35yk587z9cE/Ran2eUu9gqe/G7D8AfUKPvT7zYRL
1CvJh2QbmFCv4AbTS56soF7Bi8/rbh9EvYKHvYuYXU69gs9YbNTlJfUKfnXo
lTdW1Ctpv43ttnA2zdcHD1QzC6ykXsF11JWW3aFewXOsbm9bQ/P1wb273D9X
n+YXhe9qc+GYK83XJx13j9Ixs2i+PnhSyqD3iTRfHzyodch1M5qvD34trf/i
7mW0Pg7c5tzlAJqvDz5GbdQebZqvD342cH5m9XWutD5OjS+u6jo4mObrg+c2
aKBhTvP1wcdFfL28oITWx6lx1eH6PweU0Po4NS67Lza1XQmtj4P9M/LoALkS
Wh+nxi2Hud3uW0Lr49R46zxH2fkltD5OjT9YOlrXkubrg7+fu0M5gubrg3+Y
/UV3aCmtj1Pjv1IVNjnTfH3w5jPeVFXvf2l9nBq3VdA76U7z9Ul/7/3R9SfS
fH3wHUfT8qNovj74YwvnR3o0Xx+8V+Br86Y0vyh86vWqRQ7UK/itjO8ZfahX
cJkNN7c5Uq/gtefra/Vw9YSNem3+Gb+Cu0549J/5kOFNxx9rz/Mhwzd1UbrK
vYJ/rTAby/Mhwx2az/Xi+ZDhzRJnhvJ8yPDeS1dseEy9ggfpBq9woV7BO966
ZWZFvYJ7ptm/2UK9gred30lhDvUK/urAkXPV6/qhV3A7nbDuRdQrePr1KfGv
qVdwK+OZTeyoV/AWp1t81KT5kOEBc6rODaD5kOH5j4t8s6hX8DFv5f18qFfw
6K9aSvo0HzJ8SeHqlyNoPmR4ahvPaX9oPmS4uouj8QOaDxk+vWcvtX00HzJc
JTPl00SaDxlef31wYSOavx3+8/S8t59oPmR4X283rZs0H7K0//+EhZrTfMjw
kwMUGmyk+ZDhSbqPGiyi+ZDhw55OcJtRJnoF3/Op8Gb1v+eiV3BDj59XVWk+
ZPgs33aVWjQfMrz1pewiC5oPGa7VN+bMHZoPGb79aCe7VJoPGX485M0JxXLR
K/ji3a+C99F8yPCBjsGTwmg+ZOl8eD/w1WCaDxk+W31B4hmaDxk+df33mHLq
FbzOyxMuutQr+LKtyiXR1Cvp/OnUof006hW8YPb9jW7UK/iWWr2a2e/GoXv5
//YK/uHkkEjuFfzV5OEjuFfweW0nN+T1ceCHQrYr8XoTcKU6q+15vQnpfYIj
lCOpV3BlP8MSXm8CXhluFOdFvYJvbDsq6zz1Cp7S+efg/dQr+NTL7e6to17B
Fbz0L02hXsFtfBs2q57fFb2CHzD3GlZGvYKrlmvPj6JewdVWbLl8i3oFX6Mz
Xc+SegVvduhcr1W03gQ8wiBKbgitNwGX7fvpbn1aHwdu4dxkVyz1Cn7+k9/b
W7TeBPz00d8zLWm9CfjL/Yqb19B6E3BXy66Bo2i9Cbj6pOTPsrQ+DvzT+F1z
/tB6E/DEtqfsY2m9CbiHY6Hac1pvQvK5/VvepvUm4H0dFihfo/Um4HP2Npx9
mdabgG+a08vrEq03AV+svP+ZM603Abec/ijsFq03IW3PPkXZIFpvAm4d5HH7
O603AU86YXuvDq2PA1+vZienSOtNSN+vPsm31tB6E/BbiQ8nnqf1JuBBN7O1
PlGv4K0vJdh3ovUm4DtO/R69gdabgBc9Xr3hHvUKHn30QfPqeXrRK3iLuBMh
q6hX8GcZeodvU6+k/VmrVybns17WNWz7z/Ug/OsS7/+s5wX3sLu5kHsF39I8
ZhP3Cr6tcWVHXn8QnqWTt5nX84IHz3yhEUW9grdvldL4JfUK3qH3OMP71Ct4
mxEDXjhTr+Du76+0sqFewSc6lxjpU6/grftUDFpFvYKPtr+2YjL1Sto/azMG
9K4SvYIr/HD9Ub2eMnoFNzvW3ecX9Qo+Zcmb//9OQ6/gw2x/33enXsFdknrv
tqZeSa/fX2/DVuqVtJ2TrGJUaD0vuOkBzy5DaD0v+MfGr8zaVopewS8mdVQr
ol7BYyOV8r9Tr+Chbiuuv6RewZ9Yt/D3ofW84DP/bLZwovW84A5KJxeeovW8
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
lIpwUv/9PaPGM0+C65/ckO5u//d3ZHtaV1RtFwQ41L/MdLkqOGk8LpXvP8HR
f0bGJ3o6J0kpfuzEjP113HUBHH0s5gUebn/tdTezNax/AL95rsea2YtY/0De
jm88d8SYXV/U2r9t9jqgINxg5tH7Wh6bR/Add6YvH7ZDQvMILuOuePz+RAnN
I8bfrHWl/mM544jfnpgut09RIthRNnqA39gqiu97vNUisYBxeLLw6/bGqD6s
HhA/Ptj0dd1H9v0+8IVdZTqr1kkoHr97o/21L3Lt2Xf9ED/mks/EkUpSqivE
Jzs5Tfwwin3vD/FZIcvdG4axekB8ZJnMJPnt7DuAiB+rb97Fw04q+N32918p
ndf6qMP7tXewvhG8/mB4+Bx31jeCT15l8nOkMesbiUd0zDv8ln0HFty2Wfl0
9VIJzTv4m4B4s32PmfcCStds73xYURioZxmRm8u+D4v4kQ2m0Ts0xVQPiN9x
O3HtWmf23Vi6vgcpOlmGiahOED/NVH1F1/o6qgdw/0OafQ+n1VL/iXE8l7ZN
KNYRUT3A/54d5pvF3iijeUe8+aVo5WBvVicYX3HE7GWOR2tp3hE/pj5h5NJO
Ypp3xOeZGxz4lFZH8474uEybWRNfiGl+wY+I60KsfSTUx4LHD8h/nPr7j2cU
Pb/FJ3+k40+aaqToEcbqAdzq5qiHleasHsBbtZ70GtSL1QP4VGleaL897LvA
4B9svs+aEMu+Yw5eH66yf0k7EdUDuI5azsjpXnU07+Bix2fxOt2qaX7BQ5/k
dVX8+InmV9NwqtUvnQ7C/hvvNrTqvqb5BU91eJJU9yGF5pf6nL90vbQKymh+
ER/yTXe/WWoCzS/iP203z7no/4nmF/EjW+Z7pj+/TvOL+D3b5BfkZ1bR/CLe
uK/tuYKjuTS/iN+g7vnNLKKO1jXib3w7pzLqeRmdL74Pbn/vaPad4x/ofgrx
w+QC7PcZXaI8IL63WYpjnutbygPiM57dSppx6DzlAdfrvEe+bzLDK+h8Mc7k
u5Iy1f35dP3COGHJD8dkLxXR9Qv8WbTiU9WxEkFrxrnp6VmMNxt8u72yp1Sg
lr5+1mfPeuIXvuXnfw1h1xEcj2y3RSWVfqx+wPvs+dR+uks91Q+4sGljp4yn
NVQ/4Dqxu6/MsKiifOL7xVqTttskd2igfCI+1+Z8z74vKiifiK9dXWNjol9P
+US8caSsnU1iBeWT+pkpNiEpb0RUV4ifYbPmukwz69MwfuXTmPduHdh3qxFv
d7PM+U1EDdUV4jfqnV+bW1tPdYX44EfLtC4E1VNd0femizsUHNNn37lG/Ov5
8z8rZ4qor0D86KbNJqMc2fevEZ/Ss2uX26ZsfsG3n9RtEk1m8wvu/Lx9V0E0
u44gP0uypsRP/8GuI+C6v4PVEg+y6wj4z33zJzpqsO/zgpsIFnk5/Ok/Me/g
Hb+el3s+gPWB6JeCHzhbquiwfQnEe57eq5lZyu7jEK85abDsUlUpzS/4tNA1
b8zl2X4Fxsk+kHNvbS8xzS/ia3bOKZbtyPYxEL+m+ILJmH3suoB43ZiTBgP6
sf0NxJve2Sot1GL30fi+rW8Xo0Pu91k/gPjmqsY21QsSml/Ej+i7wvyODNsP
QfztiN0H3/aW0vyCHxps9lfmTja/4LIXihsbb7D9ARx/Qllr57UT2H4R+Dt1
Q21VI3Ze4MKiftcSZ7H7ffBTqt1fJQWz/vZoiNxgq7Jewoox4/+rvwWX+1d/
C64ZlxL1d38Ljn0PZ88fh/7mGF/2gXJuxajgSSHLJvxnfMSDy/0Tj3pAP9b1
+N2Qms9i4ri+z/Yo6RdiVkv7ePB/npXXHB1Xtn9Sff+n2qUTSkJn5wHaD3wL
qQ7B59Y7HLNpzaHxwZ9HLGvVbX1G9QZ+Ymavy5ka2VRX4Ff6KVW++v6O6gd8
Qo00UqX4E40P/xt6HI6PjsujOoG313f8YGnjJ6Z9M/Cv6mVPo+5JaN8MXKur
e3KDNcsbPHN2x/g+Ck/qaBx4Y4z21Zl1Mmz/DXySg/OmkZ4sb6hnq3YygjE7
WP8P3k73laaaHevzwetXtsgFz2B9O3jLjh49W6zZ/hXFl54377pVQseJ+rdS
iiu7sJYdJ/gvw/dygni2D4l6nqXUQ83Sg9Ub6jD0n3rD/RfqFvtyWEfo84ca
iVMaldm+K/jwrWFp90Tsu+Tgq+6nRl8pZt8lB2/tljVWpYjFo5+UH7D/+QoD
EXHU7frWOXcHtyun38X8Wjp5/rmIZJAPweN/vx8eEZlO3gN/28+y0VK9kI4H
eVNcMeHxtCIRjY+8JW69Pf+HOvM2uNIqc+0kRbafDK7Q1ifDQYH5GTwi/u2O
jt2Yh8E3dYkuKB4iFTgnlnyo6l4p8LIcVpA9V0E41Uzj5rE4iSDg9KlP3e8x
vmrxDZmqP/UQftKlZsrKKuLfB2zpquQnEZhfmZ0f9vSToHTgY0cX6z99vq70
rv0sscD2YveiW24VxCf5DMnabSWi3wVPNn5oaLyygX4XPMFumPW72/WCY7HD
RJ7K1cSbq0a8Na2uFyTFfP8cn8y45og02ZlpDTT+TAVrkfwyJWGRnX/hqH0f
aXzwEUnPtt2yLaT4lMpan1MrOwh3zF7h8cg/j34XfIzMlROy5s8pvv/jwPaC
tcrCpPT6Idtu1VI8uLN0Yqpcfg0dJ/jh9b3WbrGrE6RFpX19ZVtD/Njt7VFh
cxoEuftCf7a1MT6uZPC7+R3ElP998Wp7Sjz+rPfmZXMKr4ppfPDvCj1Et9Ql
ND74qcPDPaO8JTQ++NcnwaMcCyQCh8F+S+ekV9D8Vh5rv/fxLYlg0vD6+Z89
PwnO3/bX1HijIBRmxIa+OcLmHbxthNX8VCcWj3k5WllwQu6uWDDPMNlaq08F
xXdzOaf/a6iE6gT8XM3Y/me+sHiM09RetZv5nz4Tx4n4ksiowjlpYpoXcNX0
U32a9ogpHuNsmfD8cs+CBoGnvsBhszOLD7TubHdspZjqBLz19YytPaeJKR7j
qGvlulm0bxCc6X3QXdm+muL10lum7N7K5gU8PsJ0TfJ1McVjnI6aCXEl0xoE
t9SXeo2Vr6F4kydL/D0kYppH8FXq41YbG7I8q8eoJKYUKQpjWl7+HLRYRHkD
j7Xrqvh2dT3lGfzmCeN33afUUX7A9Zfp94jpU0v5BA/bGtpyVaGG8gC+Yc3E
ZjntasobeFTzr0Hv/KpoXYBrff5hqVFeRXkAP3Nu8OoR6dWUN/DN/fPX7C6t
oXis37GlwgUXXD5Q3sCDdaoHWlRV0PGLF46497m6g1C6Oab7uo6f6Hyxvkaf
GP4rflcdnRfih4pzjFJDy4gjPrlkRtMbuVo6HvC+Czo+0w+upeMBj2paIuy3
sJ5+d/GIJ+Z7xcrChkWWX/sfZD4ETxF53Usez+oc61R21vLsxr4SOh7Ea7Rl
XunT2CA42DfHpeRWFfFCw6sLfC82UP7Bbe8YvfV/z+IxvtHQr/Jz77D6RPz+
2980Fv+5n8K8gDukdzIaHiyi8wW/H5q6eV2diOoWXOlAVHyitZji8buGFZdj
V06RCJ520fVzTmLx7v3HDKpIF5OvwLdsNlWP0mfxGOf9srnhFxNYfuCxa+p5
cbMiGEcf63YpwfZIV4lgm47CqqRO7Lrm7rimp7k/41h3JzMGjDo3Ukwc69d4
efe7AfvqKZ8Yx1Qju9llM/Mb+o0hv/ZO7mvOvET7ipryL2S/sHoA/5Lw48Sj
cyI6fnD1tvLpTi6sTtCHax5PvmRnXk/x4FqG1xvf/Kql48f6ehZ4fMtyjSri
WEcZJ+xHu6kWUD3Qc7eaqD5Polk9gMto1hwoqxBRPH53kavruOur6ui8gjee
HG5VpiT0O708P907h44TXDPaISM08BFxXH+Vl+UN/vkok+oZ8Qe254WlpTyg
3wV3/Xy9dvDXF1Rv4Pv7Gw46FfeB8ob+PMqtt2LbXHZdABf73KrpbFVP11/U
4RSVn2f1opn/ER9RbBf74Qxb7+j3dmcfNzYIYNepJ51tXw/+0lF4U9N8yowC
Vp/ggY2ZntXPWT8Gfr3H47Or0lh9gj/u89eN9bdZnwZ+I25rf98UCdUn+DDd
swFJdyWUT3CLF9pV3zIkNL84/jPyhhnpbmz90n1935OT515j3sA4wY7S8U15
bBzw9jItq35WsuPHerQcMDq7a5OYjhP3I/I+tu/b5v3p52/N7VZd5S0YX5zw
LdslTnD2VI347/uFgw5FI03eSYmn2aQI//6+J/KG8U//XtcutJX1UVjXv/fI
zH45TEx5wPotMzFJnL6L5Qfxv+wmfzCxZfOIOnfdVuXXOaqOfhe8S9VpxYg9
rD8EH9JPoGSQV0v5AY+N83LqoM2eL+M+4lTo4nsfZMtpfNRzRsjhr0MrU+i8
sK4HtfZssFCponyCt5vnrPJjNrsuY73PeympyC0rIo775TeX90Xnqb2k+cLv
vqs5086uPpl+FzxfW/l3d9Vk+l1wI9MGE1v5m5Q3rJfXZgsj3J/V03nhuqnY
ZjX2/LYa4lh3m6W5CaWpDfS7iD941yTQxLCGOMa/P3Fvv9lP6+i8wH26LEkd
bsLuI8DDVKw1s0aw+xFcX67HLvJ3fcj6Q9TnNFU7LZVFbN2B686W3rg3g9UP
xgk9379c8yWrN8S7ZF0yzLJnz39xv7Yxwe2w2lL2nBHc1bnxevRMKa2L1aXW
dwa27y18e/2/1wW4pfVis7/XBfadsC56hPv37TeEPfek/ZxOocHN5ez5L/hU
r8d7Ni1roH02cD1rub+WNIpofPCXeyZrP9Fhz3/B5+oc/t6jmj0PRb3Vz9W+
Oku5gvYlsD+zZV0723GL39P+KvZJwtPUbHa/EdNzdszj+COtCh7p7P0EcKst
7v7v+rM8g7sVtlU/mMaex4Ef0jS1VTRi74FgvsarKMmMaGHHD+7xTXhS/wF7
XwLnG6YUvnXsCXY8yH/iONeJZ3tJBUaj+s9OzyqnvuLpSVkVBw8J+RbcPkgl
yt6c7WNjnLjWSxFZxawvgq+8elnauqxj933gtvcFBRrnWTzGd09WWX/VTiwo
VK3bFLOwluKzVkcu6FQuIU7375tD++pPlwj0Uh5kDvYrJ8/smjYs4pWRRGB6
fcdLWy12n9L2vlGo25tdR8Dl6lerf9Bh98XgahvKDYrX1NP+EvZnLGzt/uq4
QkTnhXjbzL8Oj40R0XGCH39q4/bbWUz3TfDGjMhJyw0KRDSPqDcls9otLcGV
dD+F+I/n1j+7N5td93G/4CGzWLLmYDmtF4yjEOsfuHFxJZ0v4of3WHXU5k4V
rRfU29vPZ7bH27L1An45x6J8YpuEnlfi+qsunp+cOYXVDzz5tN2tbRpxLP/g
QUu6LPVZyu4fwS+06YzKVWH39eA1UwqS5G+yvMFjJY1TdVWzJJQfxBtfmJY2
25rt/4CPXWl5Y+EXdn+KcV5ZJlis9WZ1hfjdXb1PGwZJBGW7Z7UZJTLuX/VF
WT+TvWeCdbepLStszVS2T45+APvkuB6hnh3XCHN1J7K+Bdf9PVYh23rFSohj
fR27MHjZNX3medS/7i9Prbs7Wf8P3n/Ba4evZxlHn9yj/EOS4I9P4H/wXk8m
BZbaiCge3nj02qbg2np2X4l4p/nWszIniGm/FH1C94GuwTIBRdR/on/We/K2
eKt5EZ0X+Pw3a/VDP7yi8cFNbOta81tL6XoHPmDF6j2tQRnUD4DnSfc1KYSl
UzyOR82hRHbmgmsUD+7gUTai7sY5yifGeeW22uxej3TKA/gEj+eBHdUfUzzG
6fNmo6lDawLFg+uqmr2YW3mZ9r0xzgEXg4yHJk8oHutxxdnO5ldcPtK8gOef
kq851a+Mjh8eSE8PqtUdW0PjgGeeHTVNzpFxrN+QTeP8T9bW0bpA/fecqKI0
3kJCfRF4wZLxCg+/s30ncOUvXRQqChiHB7aV/+oi6sT6E/ABhs6/1UUiOn6M
89cY5XzF6+x+FusrJFB8cdZRtm+AcUYP9X25U4atF4yz6G2Nm6GEccS3TXmt
82E428dD/3/cbVhZUBfWn+B5U58h4f/pT/D8AuvIy7XI/0wYu59Fv1ry2j/H
tKCYOPqHXqZbckxvvaLnI4hPXHHw8I/1RXS+iN/95PEbma3Pqa4QH3nKLeVL
0Ts6HvAFR/bFpb5mHP2ttufk1QPrr9K8I77Ps/j0EWkFxPG79int3u7ukEn1
iXhzZdnigDOFxDG+7amlYTdsU+l3Uc8/XuxL+iyXTueFug3/Me6YX+4HOi/w
eb3m3H355/4X8ajPpUsP/DUmt47GRz2cOeNwc+7BBoqHb2dfz31uNIvdl+H5
zq/b/99/4vkO+s/If57vIB7z/vtf8fA23sfD8cPDLx/2PmPSyPpn8KmByck9
OrL9FuRzaJ9Oi8yNKokjn+/TH+3X454LUP8ZJLq5yDWLnrOgf8iJz7kt0q2i
5zIY53ZMygxNgxsUD27/6Zhf2dJrND7yfHGV6Y2XrXV0nUJ+6Dr1z7pAPqf+
sy7QD+B5lsue1Mq2Q+y5NvjkaLvfrduldN3EdS1+ydfxrsul1A9gfa33StaM
1WTPC8CT5sxJSX3D+ivwyiENMxqKxDQ++LgbineaTrH3JXCduh/pkHE6iP3f
Ab0ffqt/r+l2UsHnsG5y9nPqaJyFW9tWaRtIab4wLw0DFpVb2ZTT/Rrqf8Te
mBaL5wXUf8LDF+5cPNvdjvU/4Lu0B1Y5eompzwEPUOl6Nr+fiH4XXD5juV/s
unqKh/dS1IY37Y5j72mAuzZ3DEoZwd7nzE7YF+Q2QVX4+pvvPe0E9jz30Gjz
sVqpKsKpRmcPH9koJV8hPqlkj4EojnHEt8Qv6fjclXkS8ULFyQbvTjCO+Kjb
e9Ry10jJJ4hX7jU/bV4c44if19rsELeWvbeJ+Lu93BIXn2Uc8Y+yg/fqebP3
ItZd/zF4l6K88M0aPcG9U4yf0p28viBcXli0q9vGJRvY/E4srj4QlC0vNPOU
kWwxZ/nBOCOWNJ2OP8I4xnlzItV0rIOU+hyME1umNnf9OPZ8E3zcmcXTCoyl
As2xdhaReuw+y0IzX86mkdUJ+sOaa4vTyzOZT+BP5R272rt/qaJ+FXWiPvR+
oNOfPrm2w9Xgpz8Zfxis0LD5goR+F14d80JthpWKlMZB/dSr/9VdKsfeg0X+
le48uup5iXHkX1K865deCHvPHB54vHbrlOww9j4S+EonJ9WBfux+AX5I9Vm4
Xnkeqzfk/5eDqe/CKMaR/9NLM7ZrWEnp+os8B8U7fRo2kO2/gZ8rKlter83q
E+NvUwyIz9zPOMYfOfDQQaO5UrruYBy3R8G97Puy6wJ48Jpo+0xNVs8Yf0EH
k3uHIhnH+L1fe++/tEBK12WME3K9tPdMLcZxfbmTc375zGa2fwiP+Z11/Gih
wd4fgJceVW9pVDr3iK4L4M7x7kuWPEyn40FdOXbNC7g0rJTGQf28W6j42c26
hsYBdyrsUNlbUEP1Se/j9S9dEJbK9ifBf3tMiFgjZP0euCD44MijBez5wq8t
8T38fFWE0nMxzXbmLP/gshahfbdNYvkBv9ku6XVHoZT6QPA9S27uHzmTzS/O
t+lQdL/NR9g+PK7XMxyXVzw/WU7nhb7x83zlExtbWJ+M8WP37hk5ezarN/AH
xbNO25ixOgH3NpMfrvLn+NE/gE+UHTQt4M/9I64v4D6vj6/9sVBK10dwzQSf
u+PXsusy6sQ0u922oHXsPRbqG+U/6rlWfaLzQh9VWBe6XfeqhN4DwXqfVPll
s+Fp5rHh0vqlT3+qCGNWTjvUGMHeD0H8gOSiTK+TLA+IX+587sirney9EcQ/
33Zsb7+TLD+I/zFs6VS9MPY+CeJNLfqHOp9ieUN8lN3D+y7h7D0TxD+9auje
+TzLJ+KD2m1MWx3J9iGxTjvN7bze4B7jWKdWCxctvXqC9TNYp2Gb5NSVIln+
MY7D+uqmTS8Yxzi/Si7sy7ohJT9jnCfxi9I94lgfAv8/q804W7iCvR8Ify5R
S+iy+SbjmPf24faXhxyXCn7K++74Gs/G2XVLmukezP6fBfmpuHzrR2oKez8Q
vLt/zRzHa6zekLdlrXfqhp5g48D/cVafEo5FS2kfD/HvRdecVP5cr/8Py4nZ
Cw==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.6], EdgeForm[None], 
       Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[Polygon3DBox[CompressedData["
1:eJxMnWXYVVXXRk/Xg93d3YqiqICFICKKIoioiI3dLWGDYGJ3d2A3qNiKiYHd
3R34rfHOsa7z/VjX3HPFXDHHPuc86N73YsP2779fqVAoHDBPoVBOttRKJdnO
qfRKZa5U5k5l7VSqqdRS6ZpKPZVGKutYh79eKs1UUojCmoWIQ8zexkhTFNZ1
HP3Wsr2SShctc6xvjI5UNkll9lTmSGXjVGbT3yiVWfU3M/a8qfRIZaZUZk6l
p+PmTGVTLfvpZuxOqXTXMmbDVGYxbh/jzZfKdqksncoyqWxu3fypDEhl8VSW
SKVfKgumslAqW6WycCqLpLKldfh9HbdAKv1tXzSVrbWLpbKF7cTaxjrm2NZ5
lkxl+1SWTWW5VAZat1Qqg7SsdbDrpd8OqSyfygqp7JTKiqmslMoQY9C2cyor
p7JKKjval34beJacy1DH0W+YfVdN5QjzxHnvWYjck9vh5hV29rIOf59CcANH
86ZEVFOyK6kcaQxytbfj6Ld7KmsUgsk9tMyxrzFg6lDzBxeHuG78gwvBBP5R
xobrAwrBGSwc5jj4OlzLfvYzNlzvr2XM0caA6zHmgLM/1TzhjygEK+T8RPNN
no9xHMweq4W1UeYejo4vBDdwNNIYtJ1hLsnPaPvS77ZiipvKsakcZzzmPsk5
4Wisa4Tlk62D31O0rPsE52St4wrBEKydXghWmPs0Y9C2i/lfLZXx9qXfma4R
1s4uBDfw9XIql6ZyWSrnWAdH15s/8nB+KruZ8wvNN0xdYB3+BMcx/0W2w9fF
Wrg71/ZdU7nEur2dHwuDV6dyYCoHpXJVIZjAv9J849/guuDiGvvC1HWF4Ix1
X14IFvdzb/voX2tf+t1oDO6Vm7Tw/oD5IA93m1fyf7PtMHuLFu5u1cLRbVo4
ul1L/u/QwuBE7chU7tTC2hWul33eZR1zTzaX5PzeQjABv/dpYep+Leu+x/XS
70H3wX3wkJb742EtDD6ihaNHteM8Vz6Le6QyyTrWcVYhOBqayhOFYIu6N80H
Z/xUIXiCi2dTOa8QHD1tHSxMcRw8Pmc7TD2vhbUnbSfWC9bB14ta+HrNs4OR
VwuRe/xXCpF7/LdcF4y8bl/4eqMQzLHulwrBJTxONTb+NPvS721jcH9M18Lj
V+aGnHxqjsntO7bD2rtaWHtPC1Pva2HqAy1MfaiFqY+0MPWxFqYeKwQXfA59
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
NjKVvubvRvvSj79x//Xfim6RJ7i7pZquUzk6lSfMGWd/lxyQ53vMMRzdbR3+
fTIEU7fLKwxOMQZ5u9dx9JuYygjXeKeWOe43BnxNrsRnH4xMqgTr+I/KB/6T
xobxh2QOLh5zHKw9rmU/Dxgbxh/UMuYRGSLuU8aD923TeXdL5/1ROv+nrYPT
V1PdRam8n+pXTfatZC9I9duk/qsnf3ryt07Xq6Xrt9P1ccmu1Ao210j2nVR3
cbqemq47p/Ju8ldJduVUzk/1Lye7ZirvpfolUpy10/VSqXyS/GtS+xupvJb8
rql8kOqmJbteKh+m60Gp/0A++9L1W6nftXI1XT5g59Nm1L+ZyrvyAUdv25d+
D3uWnMs7jqPfe/bl3wN+MU+c9yep3GFuPzOvsPOpdfhfyA0cfVAJ/m5N5Vdj
kKvPHUe/D22/LZWPtPD1pTFg6kfzBxc/uG7872UC/zdjw/U3cgYLPzkOvn7W
sp+vjA3XX2sZ87sx4PpSvjdSeS1dl9J5X5Ku103l70qw8gzrTfVHpLJYKn84
Dmb/1MLav6k8m8pzqfyXyvOpvJDKP8agrXcrctMp3Zsz7Pu8Z8O9y2fMX8Zj
7v9S/4tTWSuV7nyWpLp6GntcWsfiqWyQ6kYnu2wqG/GwYDXmfDGVk5LfsxWM
nZJsr1Zw1KhGnGmpvG/+yd/JqX3TVrA0UzXWCWuzVIMb+OqbrudPZYFUZq1G
HRwtWY38kYc5qsEEOZ87XX8sU3NWo478z1aNccw/TzXa4Wveali4m70a7cSa
rxp1MMX8n8vgoun622S/S2WRajCBv3A18o2/VDXWBReLVaMvTC1RDc5Y94LV
YBFe2NsXsrl4NfrSb+lqxOBeWaYaFt6vTme/VTq3jVPZLJUvmpH/ZavRDrPL
VcPC3fLVsHC0QjUsHK1YDUv+V6qGhcGVq2Hh6LNmcLZKqluoGutlnxumNXze
DKbGpjUMSaWDvKX6zdP1V3yGJNs3la/5Pkr2m2TLqU+fdP1lM9g5KfXfOvnf
Jn9Ast8lW0v1A9P1981gb7t0/UMzONo+Xf+YrpueK5/F3KtjUv1Pqb6V6meu
Bkcw1KMabFG3TTXywRlvJE9wsUk1cg9HG1uHv4Hj4LGn7TDVK5W5qsHahrYT
q7d18LWZFr629OxgpF81co+/hVzjD3BdMLKVfeFr62owx7o3rwaX8NjH2Pj9
7Uu/bY3B/TFQC49/pnP+IJ3RMEq6/rkZOR1kO6xtp4W1wVqY2l4LU0O0MLWD
FqZ21MLUTlqY2qEVnz3dUhlqHXx1r0Y9udk1rWen1O/XtKbd0/XQdP1buv4j
Xe+Vys78fk7lF74zU//xqW7FVHZNdfVkL0u2fypnputPkt2D3+fwmexesJbK
3qn804x79QG5+SbV7ZvKv6l+n9R//3Q9I12fYA4414OrwRAsHGq+YecQ6/AP
lxs4OrAVez0glRONQQ4Pcxz9DvQ8OIODtMxxhDFgbZR8wMvIanwO4o+QA/yT
jA3Xx8gf3I12HNwdr2U//EbbtBr8Hq1lzMnGgMEu/N3D2abrCakMS2WXVMbK
Coycab7J8ymOg7tTtXA3ToZg53S5gZfTjEHbrPz9m8oLab7x9qXfcdXgm32O
MR5zn+WccFRM4w5OZ31QKmdbt3Mq52hZ9xnOyVo7pTmuSH134++2dH1Vsnum
0krXlye7C3+npZgzpfJcqps5lSv5PZ/K7KlutlSmprpjPWPWdwjff7CVri9P
Zd9U9kvlLvNHHq6SBXJ+jfmGqautw7/Ccfuncq3t8HWdFu6utJ1Y11sHUzdo
YfD2aqyP87tNJvBvNd/4h7ZinZelcod9YepOOWPdN6dypLzcaGzYnGhf+t3t
/uDr3mrcM/D+hHyQqwflAy7usS/97rMv/N6vhcGHzTesPSorcPSQMWg7O62/
mMo+6foR+9JvzpSbq1P98FQeMB5zT64GWzD4lHzA9ZPV4AZ/iuvFn+ScjHna
vufCT8p/RyrPpHkely32+Zix8Z+x73nV+L3Jbyv+npkzjZsjlZfT2E619L2Y
2t9O5WNzRh5eMSdw9JpMkPNXrcOfVg2eYGexFG/RVD7kM88Y5Od1x9FvkdR+
abIvpfJyNa6Z4w1jwOMH1fj7DUbeN/f476Vyk/6nxr7TdcMlDH7oOFj7SMt+
3jQ2LL+lZcxnxuD++NWz4yx/MU/4X1WDJxj5QSbI8+eOg7svtDD1jQyR8++q
wRy8fG0M2s5MTPyXPtfXS9ff2pd+71Tj/oHxL43H3D86Jwz+5hrh+ifrYORn
Lev+3jlZK/9vAjzBF//vAszB0e/GoO0fWXm2Gv8fw5P266jF2XFm0z1j1vev
fZ9LZY5a5IyzL6Xrqea3Uoscw1G51s55rRYMwdR/qTyfygupzFmLGOStWotx
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
Gwydrg83Z+hzXui+Zb1BbNYkxKIlt52xx3rGExyzo+3EynqEtMHdefpZgxC/
v/tj/3B0ofuERTTjskbfRbbB1iW2wdal+jB0mT4MXa4PQ1fow9CV+jB0lT4M
Xa2f9SDJDTyhGYeGXNYgRDcu6wtmvUFs1iHEoiF3iH0ZnzUIGZP1C4mV9Qhp
g6fb9OHpdn1+h/G5yedo1iCEoay19oNrRSfurlpbq++pWlt3EK24rDWYtQfv
t4293uN42HnQfrDykH7WMqQfHD1s21jX8bA5R+st6w1isyYhdrK5f8b1wdEU
x5zjetFvg0t06LLO4aPOkXUKGQM3zxoLjp7Tz3p+b9faeoHot8HT8/aDoRf0
YepFfXiaqg9PL+nD08v68PSKPjy9qj/e/bHuK5zzVfOH1hzabTCEThyac1mP
ED/rEeLD3zTXnfUI2U/WI8TPeoT48PS+Pgx9oJ/1KWHlVuenjd9JfEbwGQND
aMR94pmiuYMmWtYd/LzW1hrM2oNf2kbczxwPQ1/bL+sOfl1raxnSD56+tQ2e
vtPnzNB9y9qD2KxPiP2x1tb2Y31w9KtjnnC9aLnBH/dB1ir83jket50x8PWX
seDvb31ygN4aumvkEp019Ntg6x/7wda/+jA0Qx+G/tOHIV7yh591CvFhCI04
fBhCJw4/a0PCBzwxJ21ZJ5K2rEGI7htMoBeHD0OsF205OKOddcMQWm/sB6bQ
fMOHITTd8GEIbTd8GOLvJHzeYc/7yXlfOf+GyN+9/H0MO2jGoSvHWtGDw89a
fWh6wQEag2jJkXO04bLeIJY29oOOHONhCK03+sEUmm747JsY9IMn9N1ogyd0
3vBhAi22rDeIzZqEWLTiyDkaaKwPjtBrYwzcsF602+APDbqsc4hljqxTyBgY
Ih79YA3tuOXMAZpsaK7BEDpxWZMQu4I5RnsNDTa4Qc8OLTlYQTMO/TnYom4l
WUEDDk042KJ9FbnpbBt8rGVccoaO2wb1tu7gWnKwtn7NNeJz/7Cu5eUGbbd1
5X59fbjppg833fXhpof+zM6JDzsbuQ76oV2GFhi6g2jAbVxva+YNNPfojG0q
K+h/ZR3C3rbBWU/Hw00f+8HR5vpzGqOnDPW1DYa20Cdv6K9l7UFs1h7EbiUH
27k+2BngmCVdL3ptWWswaw/2c44lbGcMTA02Fsxtr08O0ETby7yiq4a+GgwN
sR/52EGf/OyoD0c76Wc9Qnx42VkfPobpw8su+nwGMd9qll1tm82ckDOYQhcO
fTh42lN/LdeLn7UJWTcM7e1+YGoffRhCDw6tOBjaXx+GDtDPOqZZjxItOViB
I7TgDnZN6L9lfcJDbcv6eeifwQT6goebf7QPjnRPhzsejtB3QxOhp+2MgaFj
bYOh4/ThZoQ+eUbrLesNYrMmIRb9uF7GZm4YOsExWV+QWPB1om1wd5L+Nu4D
H3ZOdW+wNkYfFsfqw9Np+vA0Th9uxuuTe7Tbzjb3E/Thhn9HRysOtk53zFD7
8u/sWbPwdHOGPhs6bVlfcII5Rs8NXTc4QM8LPTi4uEAfbi7Uz7qAxNrVvsQa
bgx042DrIsfs65xoxe1lO20Le77kBI6uMi5rRbMMbTO4QQ8u6xNir/as0WtC
twmO0IhDKw5G0B1DK+4Q6xgPI2i9oUd2mO3Xm+NbbCPnt+rD0G365Bzdt6wx
iM06hFi05I4wNnPD0V2OOdZ2YmUNQtrg6R79rDuIDzf3uzc4ekAfhh7Uh6GH
9GHoYX0YekQfLtB3Q+8NDqboj/dc0ZCDs0cdc4Z9OfdxttPWwxxw9jD1pLHI
Hzpu6LXBENpwaMXBwTP6cPGs/oHmjRyfY19iXWgMtN/g7DnHwMhU57jAdtrg
6yXb4AmdOHTvsgYhPgyhDfea54uWGlppWWsQnbisL5j1Bt+yLesUMh4+ptsP
Xt7Rz/qF08z3u7aR//f04QLdt6w9iM3ag9gPzfeXri/rDjIm6wui8QaLaMpl
rcL3neNO2xkDO18ZC26+1s8afn+aV3TZ0HKDp2/sB0/f6sPTd/rw9L0+PP2g
Dys/6sPHT/rw8rP+re6PdWedQtrQeUOTC72trEGIJlzWIMTPGoT4WbOQdWcN
QvaTNQjxYeVfffiYoQ8v//0/H/0v5oY1XtpNW9YgRB8uaw1m7UEs2nBZtw/d
tKw7iH4c+UdHDK24rE3IeDhCqwx9saxNyBgYQgOONhhCCw4fbtCAw+e80IDL
WoLYrEOIRScORonN3JwxOnGMgTnaiQVfaMbRBnfovuFnPUJ87hn2hwYeHKEj
xz5hEW24rEOIpQ220ImjDbbQicOHIfTi8LMGIX7WIMSHITTj8GEIzTj8rEeI
n7UhyU3WJqQt6xGiDwcf6MJlLUFs1hvEohOXtQwZD0PozTEmaxkSC77Qj6MN
ntCAw8+6hvj8jc1vmdlkCD04GEJvDa2t/V0rWnCrN9q6fT3lBm24tWQCbbis
bbi2bey1s+Nhp6v9YGVd/bIx1pSz9WxruY71ZALdt6wliM06hNgejbaO4Kby
tLFj5nC9m8gl2nNZ27Cbc8xu+8Zy09tYcLSZPmeK5tqgRlsjcGt56mM/GNpc
H6b66sPTFvpZj3CLRluPsJ88baUPT/31Z3J/rDvrFPY3f+i2od+WtQkHNNra
hPhLuV78rGXIumFksPuBqe31YW2IPjztoJ91DfGzViWsrOj8tPE7ic+IV+tt
PcJhjbZW32FygEbcbuYcDbKsbYjdw7i7Oh6GhtsPpvbWX90Y9IOnfWyDp331
OTN037LeIDZrEmIPMOdHuD44OsQxG7letNzgj/sg6xzu5xxZp5Ax8HWkseDv
KP2s53dKo60XiJYbbB1tP9g6Rh+GjtWHoeP0YWiEPgyN1IehUfowNFqf+xv9
PvjY0jlpy5qRtGU9QjTksh4hftYjxO9vO+vOeoTsJ+sR4mc9QnwYGqcPQ+P1
ebcN7+ngfR4whHYc/0aTNQjPbLT1+a5ttLUGJzTa+oJZb/A82+AF7a8L3efZ
xiIn1xtrD9svcM/n2C/rGuLD1sXGggu03rL2IDZrD2LRjYOLG5wDztCYQzMu
axAy/mD3gQ+vlzjH3vbF38946NPB343Gzdp+6LHB0022Ze1AdN1gBR05dOLg
A524rDd4m23wd7Pj4eYO+8HNRP2jjEG/kcamDVbudr6sKYgOXNYjpC3rEeJn
DULWnbUG0YaDCTTg0HrLeoTEggm04NCEG2M7Y/b1PDjT02xnfNYgnNRoa/JN
a7T1Bac02pqCWWPwKdvgBZ0x9MbgDl25x8zNm8Y613bGw+IT9stahvgwhB7c
c+YNfbesN4jNeoPYl83/W85B7tGVQycu6w4y/ir3gQ+nLzjHRfbFh+O3jZV1
+7KOH/Zzc4xG3LuNtl4gWm4wOt3xsPWOPjlHJw7NOXhBAw6tuJute898oL+G
HtuttjPmiY70me7/a3ujcxIXbj517qwpyFqzHiFtWY8Q/3bXyNxZaxBtuAed
E623rEdIrKw9CQcP2M4Y2PnBtWatQfTh0FVDdwv9Lbj52basz4f2WdYa/LXR
1hfMeoO/28Z8vzgenv60H3z9pZ/1C+kHQ3/bBlP/6KMpiL5b1hjEZh1CLKI5
cIDmGOuDIfTaGANfrBfNNvhAey5rG85wr1mbkDEwhZ4bseAbvTj8rOGHBlvW
CESbDUbRl6MfnKEfhw836Mfhww06cvjkG207fPKPDh0+3KAfhw9HaMbhwzH7
+0+GmJM2coheG9ptWYMQDbisQYifNQjxYYV21p01CNlP1iDEzxqE+HCDThw+
HKETh89n8MvmBIaYn7asW/mDBY24xT1TNHfQQctag+jEZX3BrDeIpY0YaMkx
HobQC6MfTPG+e/ysX0g/eELrjTZ4QntjBZlA6y3rDWKzJiF21WZbz6+LPHV2
TNn1ot8Gf2jTZX1C7IqyuKZj4GsdY8FfV31ygN5aL3OJztpGsrWu/WBrPX0Y
Wl8fhrrpw1B3/axN2F2GNtCHoQ31sx7kovK0kW1ZG5I2OEInbhOZ2FR/Lte7
qZxt4rphaDP3A1N99LMeYR8Z6qsPQ1voXyIvU+Wrn23wtKU+54i+2O7mHu24
AbKCnlfWGBxoG7ygB7ed+0Rfrn+zrb1HrKVtH+Set7Hf4sbGh63tjQUXaL1l
HUJs1iHE7iwXezkHnKExh2YcfO3m+DXcBz68DnGO5e2LD3PDjcW5o7OWNQCx
h8sEenH7mld03NB1g7O9HQ9n++hnPUL05+ADPTh049azjlhor6HBhnZcN9sZ
A9fo5qGX19U5iQs3hzo3TBzlWrMeIW0bu178Hq6RuXs7Hzpx8IEeHLpvvazL
GnKsBU25zWzP+nC3u9as48hZwxM6cujJwQ46caObba2+c80xenAnmmc0yLLe
4Mm2oW14guPh6VT7wdcY/f7GoB8MjbUNpk7TZ11owWW9QWzWJMSiJdfPNaJ1
t3b6/j+8FTqEu7hedAjhA+25rHM4zjmG2Y5eITyd7z7hG02+C5ptnb9r5QDd
QbQKd7edMfB6kWNg7mJ98ow2IdqDMIJ+4RXm/jJjZd1Hzn0/2xmzuXkgr8Od
k7hZsxANw6wvmPUGsVmH8HrXfYB9mTtrEDIGPuACHcKsa5h1Dq9xjqxTyJiF
05lez//bX2lrEMIQzwPynCbP0vGOAZ4N570DWXfwrmZbazBrD95jG6ygL3hf
s61lSNxmK+LwXHnWJrzXM7rTfqOMjQ93DxgLJtAdzHqD2KxJiEVX8LWOeG6d
9cIcWobo5sHU445Hh5BrmIPdB53jVPvit1oRZ+8UZ7OOeL55z3TduyOeXb6Q
5+18xp1n2+/nHQsd8b6DN5N9oyOel7+GZ/5acT13K56F5/n3vh3xLDzvRuDd
CtTzvoWsL8s9yrsW6EP7ae7vEfsxL+9q4Dl+nsvmWf4HeLeDaz3f+gsqsW7W
TN+5O8UaiU3OF/Z57RuSXdTntR9qRZ6ovzHZxVN5mflbcS4vGfct5xnrujjr
Kal9plReacazljyfy/OVt6S65VJ5jfPlXRmpvA5brTgXrh9Kdet3xHPi+yc7
e6p/lfGujWd6t+iIs6PPzaluGfs83Yp8EH8rc8Gz4ZzHdPMFxzxr/Lx5fNt9
3Jque3RE/EnJdu+IZ4/pN919vOBZsZ+HU3s34zc6RV/eXfCSZ8WzyTwTzLPB
PPNLPK55RnjJjlgzzyOzV57zuoo1pLoRjn0l2SVa8az0654bzywP8Nx4Zvny
ZJdKZXQrfkv2l5vj7fsaz9vKHrm7IPW9LV2P9NlV5p3m87E838izjdu5r/ws
9Cfu4wSfk37dZ2h5BvJfn6nlb7IZPjdJHJ6NvMn1w8DjPC/bEWOGeA9z7/Lc
Lc/1EqOzz6vtleretz/Pwk1PdRv6fNyvqe7EVDZJ/grJbmn9DjwD2hHPPD6Z
bM+OeG6XZ6OIwf+Pc2fqu43PTvbwucxiqp+YrrfQvyvZbX12cueOeLaSZyp5
FpdrnuEd2hHPZa6brnfxb1KeG+RZXp7T5Flg9s8zfpzHUK9Zy06p744d8Yzn
3WmeQT7vSdwfjcFaicdzW/en9n14Niv5u7HvjngGjbM63ef+xqTrXh3xDNpY
nvVL9X+k6/fdF9dPpfpNHftRK87tz3S9Wqob5/WenhtxPvasiP+ZZ/I3n488
C+jzg/cle4b1X7gX1vl1soPts29HPF/IM1sUnivkWa69O+Icaaune+ejjniu
jDP/z7O9xzic6T4+dza8GvPzrNne6fpaP2d4j8rRrdDpRKMTW01l10JoMla8
5jOcd5bwbpN50vVRrdCd/b4V72QhFt9t9OG9Ov/To22FRuh+HTEGrVra68Z5
0PuL74hJfjZy/aTfH3zHzcf3kfGp570qfDc97th9uIe4PzpiL3w31l3LFPsT
55vU/nVHvGuF7wTepZK/N7jmO+UH+OqId7Dkd6/w3XRdsse0YuyPXvPOjQU6
4j0t+6c+P3bEO1xmtx5LHN4dwjtEzvc7h/5870yRSe7hc3lmkOexW7Ee5u3m
2uZ2DQd2xHth+Ix+xs9q6m9JdQs6H/vinUF8J+7uvLy35PlWxGGPi3cKBnje
6zn797DvfK329x7vGOGz/aKOeP/DK34HUs/3IOvl/SWX+73Je0su8juR95bw
W4jvwQXNNWN5zwnfI4/ah7zwzpOFHfuiffb0e29h4/DdyntNLknXf7TiPSd8
T/BduZgM3Oj1pZX47mNt+/E8fbp+2f4Lp+tXW/HZyvtVFjX+Y8aHvT9b8b4U
+vzVipzwToyLO+IsRplT3s3Bezn4Pl3es+X7lHeuXFGJ79OlZeOwjnjfC99b
iyT7Wiuu+U7n3TBXVuJ7fFlzOqMV72/he2tRvqu9nuqaOYcHnfcqv5NXNV98
d68gA3zP8h4Qvjf5juWa79mH7HN1Jd4FwV54DwS5X9n9PeP1s9pVWu3fs6vI
ycOt+J0z3HrW8Jz8wNLufv/znhF+A5yQ5r2jFd9B/CZZw/Pne7+z+2p2it8T
+PxmWF02+H7n/ScvVeL7fU1zDSfE4TcS3/+8f2Jqur69Fd9V+FemeCP5/mMO
8mAe7+iI3xPwzXc+7zPhe5/fBbzn5NV0fUW6Xs7fCcd0xPcp77JAJHuk1/zG
6Gre//cbw5yWO+L3BO98WCldn9qKdxcUjVPi2UC/f+nDbwSeXc+/L7qZ30pH
/Ibg/Rh8B2L5ruSdG+yR7+K33C8xf+6ItfJuB9jgvTD8Fpvo3qmfbj334y+e
D+/luNP9cv1fsld5bvxWYM3larzDgxxW0vVJXler8VuHd3Pw24fvY675fuY3
HO/xeMPPZJjhM4E26vmNwPtdeHcHffm9wXsYulTjc5J3iaxejd8nvBdijWr8
RqG+4O8Q3gPQuRrvB+E9Ibyzgd82W7s2fqNs7lnx7+G8F2U1f0Nxze+o6cbh
DPmttJV7/L0j8od/F/eUv59O7Yj3SvB9/1tH/K7i/RTXJnuG+b43lfGp9Gcd
HfFuC35bLJ+uP/B6FX4ztiIO6x/Sav9u2t4zXJXvuFb8nuD3Du+44Iz53cW7
L9b2NxLXNX9PDZSTL1vxG4P3YPDbaaDX57Ti3wP4G/89+xCn9n9N3XvQXlV1
x3EKeal5z5uQRsBykUIIRNrqVCJBKK3SaQc6LYJIAdHWipAQrjNoptUWabkp
XhG0DZcEFNRabKX2ojPtDCIqFAQCysXiTCdK5T621AvgMO37ec/3TPgjc9a7
ss4+e++z1tq/tfZ+1hnG2grG+JJhrIvhudo8qXsPq5/qYzw1O/IPDYvp84RD
3hyfnHoavxn2UzNC3Y+5+MYt56A/8l2wJxmYDu9P4l/fHNNDuO5tvcfbhxHP
qfOw47wPuW8Yf3cPs52cbmw/z79jGH97D+u5njoz4r23p1dwnVoO62bGd4g+
aGbEh9pZS8fCfuoA7DDf5jeHkZ6Zp7cMY02AncKZaDhwXfoMK/5x+gwHqjkB
m710GDGhPi+ab+fuYawnsGQY9Qf9WPKvDd+qRwHLqV1xZu347bn6A35jrmbF
2ck8mbx3t13y+HCpWhZnzoyYUg2Ls3pf6ld4zz9XO2Ruq/+nhEnP6V3D3d7F
O8KoZ/XeF2pWpCfwqnoHah2Y+3c2/+dG6/PZPfecnvuu+gmvqI3g97IfD7ef
m5z21UWAmTfUz7cMo4/gH+TJ5CzkK2A5dfZgAz6Xf+bzPzEv/4vDiIU/P3/d
fRhx3i7DWKcPvW8YDeY5ZJ5+9+zYrlpYF9WOmmxkrl00/h8ZuRJYeAEzbzeu
t2pyWWOvHcYaW9aXV7QuwVpXDWNNLn+/rvatC/83O65z1sH952W2794HG8u3
Wq+1bx1X74u8NfG8fDnbmR1GG6DPW7OHU/PH6ihN/ucD6cAN3bsov642E7/E
Z78/+/30MNbo4feOrB3+fDa5yTeT5+9vmpdd0Tp6RG1aI/iVD9SHD2Vra/M3
H5zd5ks+WJuvmpf5+Z772WGsx8Jmdh3GOi/s8MB5eq62Ls/WxMur5+mlyYsR
1GNU33PjMNZc07edJ9ucGXGFelbbp59qdtDNvxnGHCufuiE+PRSzqP0IW9Lr
jzWf8MM1vcfPDaM+fWJ2lLn8RXp9eeOVE9OOmqRiEHX/zlo05gquSt/EL3Rb
HVU4S72pmWK9jcnLYajzdu+iEd9e3b3ybOpqTvEU+tAwzKb0Co+cXBwfckNz
IuZVS2fNzOj3FuqihG3U9bIeLYpmI/zndb1T/k3tlHX5Z/yNM2Pdrd9NT/hY
MlfO8w+al1+Wb/1Sz/Usvletlatnxrjw042FX72+d21d0Gc1WPhY/bxqZowx
P9P8sH0+gn8wZ/jiSr7Ou+OfzDEZ8aA4Rswj1/ej2TFWkd9zvsq5BOcXfjI7
xifySNZ6+MZaIB65sfkXF4gfYMgN0fJy4hf3wrovzI4xgxyduAANZ3r/2pEv
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
P/XZmu7eM5pDtnd6z4IRnL2AH3aunYXzdsMYz2sTNlW3X37YHrV11BoKA5Nx
3zPDuN8P81hzz00Grnhn9Kpoc+j6ruhzoleGIzbEF8uc0Xitm/hwx3uHce/y
4GxdrmE654bmA+jqn6afK+vzqsbx7vjiYrTxwcDvSVfpLRoehpP/LJ2kP/Tk
x+kgPvwsVyzes2bZR5ZDt9bb75PrtkbjnR//gmHcS0Wvin94+OK9jUsenYxc
ur3Xv4z+82TIXxQffoAvLqhNebyLk/f/5Kbc3kXJwwH6Bie8MXm5O2fALol2
74XJ/0Xt2/Nlv5c0V/Y97W+uKaZ+f/fK81/W2MULcg0n9/+XJi8uR7vv2WHc
m6OT1gi0GP+5YdxXg/nFDui15RM+FP3h6OfKS5gj+xcL+wLx/7f3gg+zwC4w
lH/2AtYVI6CPDU99pHufbyz4cA68AqvALGh5hXXpwfrw/OXpwwHNoXkT41yR
PDwCr9izhLXtLYkR7PPAvveVR7K/IJZ03RjtnKG/5ZHY2V9ld9slA6vKuV6Z
jJibzHm1d2Uy4lpYFo6lh5vSH3xxr30l51nQ8PMB9W3ah9qUjHOS+g0Dv7Z7
9ku3r0oGf3PjgpevS35z9AXNiT0S+M1806FLe+4n08Ptoy9IJz9Vn8+Lvjjb
ub53fXT0pOc3ZBfOLdwQfxqnvr2v59JbvkjMwwfCEZ+pP3Tks+nMkmi6c1ky
x4Y97dl8LR8rTntP71pM6Pyc/QF7CVO8iOarYU8Y1N7lHvVBjHVkfOsCPwZb
8skwibPRMCofclPvlN8TF/G9+0Z7D6/vXj6SvJjq8N7XF7uX/tyUnnjX/5gO
HxBtrpzL9U0x3yLafZ7erb+NHba2rynv7ewXnKaPX66fX67PcDdb+6fm/Fei
xTTaJHd4GEk7V4fHnG26P4xhD4l/9i0qZ4sfCl+RuT485jzThPHQsJCzTs4/
PRhGQsPbe80/9+Vz275r5eo7Rdq+OZ6csDNI4g/yNzcPMP/f915c/T3N9y3x
rSn6bH15XX3WJpwOu084HQ2rwGPOo0w4Hf3qcJezL7CZ3/I/W/0RuAJ/wmPO
xKwOn9yW/jj7oFa8vTDnHdSdt7cuL3NHtPre+OqI88dyr3zyXGck7ME513Bn
tPwMGRjHPfhqjfsmwjeTcfZB7Xp7ass6w4D2fQS0/Tt1yPVNHXH1ycnjLe/s
hD6TvSv5pZ2vQPvmwpba9G2F+5LfufMe9vWcTxQ7LZyvH8bfEdjH9B1H33r0
nUe/cUAfEs/fzpTeH41vb+j+aDz0wvnTReO3IbWn7Qdq31zoszE90HPdy49Z
4/klbdrHtcckf/ud7iX7nfjoh7p34Yz9MJ6dZGviJbGSmOnh7E4OH16HeWB2
9BOt757Lru21wdnwobM5sDVsCTvD0FO8iIal9c0esJw2vAmnwmneme8OqBMP
v+HDrvt0Dtm5DtetvQvngH2j0XcT10Wf1vWRaN/R9H3NlzQu8aEzwo9Ek7HX
/L3adM6XvD36SW5NbTzafD4eTcb1sfhiCGN3rkHu9PFkfHPUdz0XJ/94Y3de
GP+w/v/J5J+Oxnd9Kr420XLpcuZPv0jm6fi+E+pbp7Phdu/FmSnnjvGdDZaP
+2E0/AzrT7lwtHVE+/b7ybrvhz3LWgOv71Qb/x3/3Pgrw1Aw0w5hV7Q1gi59
I/2BGeFFeM/79M2Ja/LhsC9/bo211l4c9oMXrcP8Ccw3xUNo2O993WvdlhOD
/2A/uA8N972ydmBIazF8dmzrLxqm4wP4AnlaeVH0VfkNvkZe1zlSZ1/4ZLlZ
/oKvuL4+wwb8Cv8ltywXjd6Y/yQvZyuHrx37g84oyW/wk3vMjWukdUG+19mC
01vHyZxbm840TH4XrX35Z2caTq0PaP7NWJxL0H9jQRuX/jvfYLzuNcYr87f4
C2ce5kbfrX1nppy1muwGzTat3/psjTbGHXun1rLFzZWxLu4bgd7j7Ny2Mc02
duuG51kHLklPxCB3xt9YXGw9Ev/yi0saozX/ZX37Ft/3TvhM12WN9574aPct
7V5zsqxvpZDxTZS7WqeW9p2Ve+ObE9fl0b6z6/u7Sxv7zn1PhV7v3Dz4bdfL
+n0Xepf6ibdr9HTP3c3/8r7XsksyztL7nq/v+3om3IT2PUd2tHffVYE74JAN
ye5W+97Rbsm77h7fvO0eBoNH9kj3vM89+g2Vb7/u2b3a3rP26R7d8N72DP+4
987ey53hq73CRfvOjb8TmL4B4+o7Ie7bq3vJ7J1eue4zt83/79P3aZyPWhH/
l2pzc/L71v7/AwhEMrA=
           "]],
          Annotation[#, "Charting`Private`Tag$7045#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0zlwTlEUB/AjkUiCxJJYEks+S2KJxNrQ0NDQJA2NbSwNMUNBmKGhobFk
tSSWxPLFkiBfLIklUVgaCjQ0NDQ0NJYZv28Uvznnzrx57/7PvS+xeVd17ZCI
eEtyeES6r1Uz8yIW6bfSxAt+M88DGzjBID8pz4hYxzH6+U4iM6KGI/TylZKh
EWs4RDefKcqKWEUdnXykIDtiBXvo4D25wyKWsZM23pCZE7GE7bTwir9U5UZs
Yq8MPbKc0l9V663r9Q000kQzLZzmDGc5RyttnOcCF7lEOx1c5kr6vVwjSSfX
ucFNbtFFN7e5w116SNHLPe7zgIf00c8jHvOEpwwwSJ0MKVmepb+rNlif1G+k
kj/yv6SZbSwmg9fm1coOlpLDO3NtZzfLyeeD+SfZx0oK+eScujjIaor54jxT
HKaaUr459z6OspYyfrgfAxxnPRX8co+e08gWsmTolGWhvkE9YL1AP58qKtP3
jgrmMofZzKKcMmYyg+lMI0EpU5nCZCZRQjETmcB4xlFEIWMZw2hGUUA+IxmB
7YXthVGHsYYxRnY6A8YSxhBix/68///TP1ctZeE=
       "]]}},
    VertexNormals->CompressedData["
1:eJx8u3dcT+H//9/UIKUdpb33pNL1REOKtoqQlezIiuiQmaiIshLKHpmVUcco
UVGIoilS2nu9xvU75+r9/nzH7/b7+ee6ve63l3Ou1/N6Ph/X43mdk+aKCL8w
IQEBAe0JAgLCAv/zb9//OXaDQUIcxrQ4CNSsxhh754+NXWB67BUfP1aAzSMG
fJaPjV2Q81yLhy+rQv6KUi7Lx8YumPH3Dg9XaMB/r6/24hSH5XOta7jUWS1I
Lz07ynwfjY1d8DlvOpcq0ga1qb9HMA5FY2MXeImXcqgYHdg2LMf8/3DUNRBB
uPXoaQ71XQdKg/+NslxacxrhJ9fEc6gmHfht4s18/xBKDDYlXK7kBofO1YHr
e44z349DYpEehO969ouDF+nA1OIFDI9HP9IOE37wkCkX/9SGSwYXx7hEJeEK
Nw5wYZY2aOi3M78zCYXwbcj8H7z+xaVOaMHnuBGGn0RNpumEF0XP4lFFmrDe
aivDU5D0aWkSh5jGNB41qAHXrlnwME5GEhL7CZf5O8CjJ2tAZ8cA8/1UlHyq
l/BPu5O4eN1U4Hn1Mfw82vRyBYmz0EldHpWqCqFZNsx1LiB36hPh2Yfu8Khn
k+H980Q+pi6jwCJbHssbDbT4+LMyvOxKZT6no7GxC9xHjvLxH0Uw0/vBrOsV
pPylj3Ch3b/4uEMe3v3hMPwqUu6YS9b9Sogxxr2yoL7aAmPqKuI3nyW8LTcc
4z4ZyF80j8mbDGRxsoHwFC1LjD9KwUGNPZi9TnuTJsmrZeHM5ysSsM3vHPm+
Rk4I4QIRjzEOE4Xh6ifM50zUT50gXDHwB8YSgjBf/hPz+RoKXplD+MzgXxiL
jaDzE5sI31BWRfi/p93M/LrQ7qQBZryG3u/sJvwEMNMyr0InFzAjvo6e3OcR
fpiZPi4rz989HZPrvK/lE76Q7mWu35l/zWOQ8O6GHsJ/q1YzYRzNT7ZrJNc/
evsr4dyYQowThenNVq/J/GvmXSY8znULxgsk6WmFR8l1pif7Ed6us4YZZGjp
GwtIfBar/CJx8/at4lN6CvTLpTw+G+e6jJmE1xbX86g2FRqdjiZcRHsZWa+B
HzZcarM6/cU2hcfG0ydOm+TD7rgbXOBr0UkON7js9X1FlpD8VLmpOAqDevRR
7pshNh/Gxi6waVo8QHcY08U9CwbYvHrbVdbHco/5UoPpNpb0yvsR/Wzert9L
dbD80lzxdvUntvRSqUOdGJ9CXSixkeUv/8V8SU+cQfcK2pRjfAIFuYl8ZPlZ
j+8vzFNcaG35uAcY70Q/Jk9IYXl9ZnVsmm8I/V/dCE6/r8Bj+DC7HIwu/J9j
F3RPY/SqUPx/dCb35JheDfXk8fEbBVizUY+JVwQaG7ug0GoKDz9ThcJb73ms
Pqx6/47EJ6ggg0e1aMBt4YU8dv5DW46SuhOUL+PCIy04avyLiVcakngfR+LW
WqnHpf5qQ89KI+Z7N5FCTRnRhyWhTzn4qg5subOWi+Ehct0UTHhgSjQH83RA
bp4dB0M2ErRUI3z74c0cPFEXlk19N4Lpl+h79yTC7aXiOTSjY5DrxMXpr9GZ
XyaE+wa84dAnGL3Kj+Pg9EKk+yyMcBm+NBdP0IGH4sx80t+jQtccwo1TwrnU
Vm3Ykp/BzLsU+X5QIPO/4f+eC/laUHl1Og+bl6ONr/YTjkUMeTCqCXszjJiw
f0Z5Iz2EH/c8wqMMNWHWUlUelq5AqW6rSHwOnWvkUR4aUDPOkIfrv6HCY1WE
57lt5FIlU+HGqpk8nFWJdKLnkjj/bhbj4R5VyDqzjrnvD1TxIIfwrdNOMded
AjI3kpn4/0QC7zRIPq/um8DH2irwcn8JD0fUoJnFBwnvyNjJxxZK0LxAiI/V
65BqWiPhK+Z95VO2CrB41SymLurRqfkOZN2z/6ljbCsHtZdnMttFA+p/cYzw
z2dCMTacBNf5yzFubkAVHRWEX1fWYb4/EUpk9zPp8wv9kVUieXUzJZIZJWC8
6yWMh36hff2+hJu33cX4jiisvfcM46BGpON/iPCrRRUYuwrCT8PPGOc0ouud
WXgs/xnd2DqCTp/4w+jKb7Tjx2fCNQ+2MvPoQtU2TLnhRjS8tXUsz9nth6pC
OdZMeJV+o6iBIcI9VzPhqy/PX93GcPXfyIRNE4Yvymhn9Kczf1M7cx3p32j6
8zbCf/Yw8+GM5gt2MXpZ2Yj0ekoJP3ieZj4L08M33zLbTiM6qn+W8MDNTD09
l6TnGaRiDI3ovJE74RpqTNyMJ9FHwxdiXPQLvTIfi9vGOx/41AYFemaVOHNf
Jj5RFoSbXyzkYbfJdExvOh9Pa0BTV80l62WwSZxL1avTuo4GXFxfhy6uECH5
kFAaywXQpm+UfBjFdA3qGrYiebg94+cINVOfHimUHsHwE/U+PEb0aq3vUD92
NqGrJUYGsXolEtaMJXr19trTAfXVlvShu779mP6KDFtliV7l269uwx229KG3
hxtxaBn6sr37F8uN9Mw/q3+bQd+b8ruGra9HByVLWb4h3vN5ep4LPcszPwdT
T9HnI9tOk/3LtTL2HqNXmrZ3GJ0KRWMjo/9jOpX/X13i/kevVowewbj6f+nV
y31hhKe65fKp3wqQfYKN41b0slGDxO2ALFMvHFWY08rWQzwyaR6rlzWnE3jU
ZE2QqN3IYXV7bOyC93J3uNSQFvD7TjDxuo9qOctI3Jzz+zh4hg70dAIH0zko
LfYc0YeVH3ZyaGFd+DBXhflMo7GRydtDFhwqQhdu/RPnYPV3aFnq52Hi69ar
c6ijugDWV0aweinSOPCKcI0iOw4VpgtLMjS42Psz8kmtJHzXxQ0cSo65fvFO
Dq6vQF67pcj1vyS94NApOvDda2QUQxWqVl5K+MaTSlyKpw2xQ4xPq69GTYfz
CW89t5tLzdeGy+uZPCirR+q3Dcnv2mHYyMWHtaCnR4CHy34hFX4a4aXJc3j4
kSbIqA1zcc5vJNUgT+KjJHGLR39h/NVhIR6mmpDww+OE902U4OJydehcoMTD
Qc3ourUwibPghgdc3KUG30admGVtQXvEdhA+b6o7jxJQhdz3axh9a0Wqb/8Q
flWmjEeNmwwu2ld4WL8d5Xt4kTy3ol34lIgyPBqu4eGMDnRz40PC3yjc4mO+
Ahx0UOVjsS6ENKTIusuN8PlUqxz8XGXO6FM3KhBdSfguK1eMv0yCulJvxqd0
o6NXHhD+M5XLx0ukIUaB8RdzepDq4iHCLdUCMR6RhBMHkjB+3IMSdtuRfNsn
xNR33Dh4YsDolnEv6gzZMKYznHcYdwjCbWPGv1C96IHTecL1Hn1gdHAUqWxg
/FdRLzJxzSe8MZ7RleRuFPOwBePfvWjw4Jjveu/L6A+j72eMGJ/E6UWK+C/h
V74wPir9cz5FM1y6D82TayHcBP1k0q8rf1zcP3Idmd4fhIvuZ/yTNDd/i8n3
sfu+zCW8mHsP43Mi9Jxj2Uy59KKEi/sIr9Kcg/Hr8bTaKqbOpvSiib+MCG89
7IypH5NonODG6GIP0lO7T+KzIeoCHyNFeu+8bj7u60aDupisi+fG3TzKaQqt
lrePj4270Zt0CcJFuAU8fFCD5r1g+gaqE6U13iP5U2ylwqW6telR+S2jOLwd
pcrkkby1+GM8Qk00oAPEbg/jyn9I+17rIFlfv/I+sDalLV9tHsTNf5Gd1bVe
lk/e96g/tNeSTnUs7cOhv9G//Ko2sj9qH/2nfsqO3v/T/xcuq0Nohm4Dy2Wr
tn9MT3ai7QZOV2Pvb2hWge8Hct+S/qeJhq70PH+7pzi0ENlFSSSxHBUVxnYw
egXH0xid8s4fG/9f/ir/v/5qXAqzj4lKwOC2lWw/iMbGLrgQf4/ZdxUh8K4/
E8doVB6tSOLJ2fqbizeqQe3aHTy2f9nTmEbqwnrTWh4VoQlVw6wfvYUsh4DE
LWPpJi4O14aOnBomntloyU41Ur+J3DQOLtIBXuZixke9RmkuM0k8zQIkOPim
LgzJBDD7wnt0/tVtojMt6x+MYj09UA8Yz8VUOeKLBRDenJgwigP0YMHuN6OY
+obqfKwJl52UPko56UHhifuMjv1Eq7/MJvzjhy+juE8XFMMODGO6Hj2av43w
M080OHi/Luj+LmL8VSNaMWNM90yP7+dQHTrQsnQZBx9pQnMaNMb07Wknh3bU
AbuTKhwc2oJu6Z8k/F/tUi7s1IY71b+ZPGlD4ani5Pcq7yrnQroWdFysGMXT
OpH0hcOEdyoiHjzXhKHq9Ty2zq69ESVx0xi+xqM/aIDzlWgeHupBgjsOEl7w
kfn9V9QhXJzx/959qF1KgMR/ZdhzLnVFDYxHcnk4vR/VbdhJuMmDIB5OmgJd
rX94uHIA7XFtJVzEqYGHo1VgHsjxsdIQKrVbQPL/944gPl6oBIXf3PlYfxgN
Oz4nXGwT47eNFGD9DaZe9EfQqiXKJB9WfZfFuFMWLnU+Y/RtFNUYRRA+ODkI
4wcyoN3cxce/R1Gn9UvCz3GmYPxsAow8Y/xXOofJR0GSbxJ1mxgdEYNwPaY/
cuQi1SWI8C3rb2OsJgzRIhSjh1yURG8mHP+4xvghLvoYfxVjfR5avOkc4VqG
lRhn9SDd9hdM2vKQhVo24clOZYzOVKOq68VMu8NDZsHvCH/Nr2P81Zf85AWM
DYjnoW3j3xNu+JvRp+bufKOTeUz7wkPBNWN96IltjF5W8vI52RcxNmX41GTC
nYKOYdwiSpeEMPt9CRcFGAQQXqPN+KRkKdrQV57Md3FVH4mDtKU0xgOydJ9m
Jh+v5KC7qWsJx2tn86kbSrRmkAwfe4+iKutrJP6iGn+5VJ8qPSXAh4flRlDp
oVNkHUevevLgiCb9dSiYi+8MoZ1CMiRPxCL9OaCmS2dpaXEwZwBlxreSfF4U
3zgEmw3pBR8yRnBXH1J4WDzA8oDEzB5cZkabvS4awhk9aKRFsYfUndLnXvVG
K/q0pVEbruxA2Z9v/mP5g6Uaf0NvTKNrIwz+4vRmVDAD17D83ttX70IrEP2m
K/UXDm1AOmGnC1g+896c++l1rnTqi9G3WLoc6UpuPMryx4Y3Ypf4hdCujjrl
PByeH5J56H/3V+j/9ldSnbEYW0sA9Zftr8NRgPVywpUFGN8ZoQivEsSZOFJo
bGTqy5XZ38dPBdfdZuScxMJ4F4lb4mdLHm7RhHQnpj+iHyKpCi6pxwj+JC6W
0IEr0UaM/uQhzSPPSF13/ZjCwSd0QeBPEfO9d+iRTB6J54Oi0FF8Wg8En1Qz
ulGOnmuIEV5y4e8IttSHzzaTRnHid9TYdob42NuL7o7Qu/TB7rrKMPauRWaO
ywgv3Hd3BO/Uh5pn2hws1ohii0MJ/5rANAagD18+2DB+qQn1ux4mfI+HwSj9
TQ9iYyJG8I1/SG+kjPDfTxlf5akHFquzh3FZB7oUa0rmczJZlEOl6YKStioX
/+5GuZ5XCOe5HybnbPqBbIPRi1ROjumbi6IYF7A23FUt52C5ART+OJPw++ZH
ubScNmyVL+Fg7SGk8t6MxC1jjwiPUtGCiVFMHLRHkJjac8Itr0TxaHlNmH2F
z8FSHMSxdib5uWjhb8ZHaYDtC3PGf3HR3LXvCW+mj3JxjRoYlUZw8WM+8nIZ
6ysTMq14+NoUeMhbxMf2AiCf95pwM5sPPGqRCgTKH+Cz50ataTakXjipc/l4
nBIUXWL2sUJBOFxwifB2lMOn0uXhXthPPl4nBJGNgiRPdF1lMGUpC1ZyohhL
CkN50CLCgy0e8bGfNPzcw/i0JGHI594m/I2BFuOrJMFvF+O/sDCovuke82OB
2zH+IQKe86KY9BQBcWtjkp8WccswfsFH/24xbUWWCKPvCwlveMr0i6F9qG7t
LYz/iMCxVdGEq7SlMD6mFp3xf4qxoChMnJVAuL8L44+oivxNe7MJfzUuifBd
d56wPin/Zjqjl/9EAC3dS3j+8hvMti5AV21JZPpTEXhgMHYeNSrM+KgeMXpL
3AqMl4vApmJxwmPbPBidkqGj9TQYXReG3Gtj535SVYyfui9PyzoV8PFSYZBZ
PkjiebItk0flq9Cn/T35OEMIRpfKEp6i9JtD7VGnSx7d5+E8QbBt/UzW9+6N
KC6Ia9PuSn+5+JkAGOpPInnydQt3hG7Qo9/I1w3hLj56dDqF5HP5pKwBoIzp
Iee9A1iYi0RT+aTvW13DG1Q/Z0G3dpzrxVnDSKLrSifhjve70p1taLdB+y78
tR8teOrwl+WnbPc3qM+0p21t77Zhz27UKKhYRfYjucHaxICZtEq352cc/hf1
3Z2Xx/LI+YuuZjW60c5++ddx2Td0fM3EvSx//h+9Wkl0yjt/5X/06v/rvF3P
g9m3tkjAPK2lRM/GRma/mxvPx1WKMKR6js+eU6VwBkjcQqQ3cHHFVEh+8pLp
XzLQ98Vj+f8wionXAS2Q0PFlPj9F+09mjtXXSCIH1+qA4CYu03+9Qb/+WJI6
jfJeMkqd1YPiY8eHcf1HtK9WZMznQPgIVaYP1x6MY3TpG/Jbp0XiTO17Pkyl
GoC8cPQQLqtBji/iiI+9Fxw0TAkbgtY6J6Yva0TmL60J1ztlPwyahuB5smAY
hzYj8/UqhBf0+w4D832DVU5D+Eg7epZnQriY1sVhfNcAfIR7Rln9yUpdR7jd
AfERbGwAj7eFjOLkPtTW/o7wGRknRuCwPlgo1Izg8EFUIOY4pntOWqPwhvld
vftGsPUIctv6inCddXmj8FcXZI8wPlKJi2IX+JDfu/XBIg7drwNr4wxHcCUf
ZbY2Ez7lTR+H6tWGiJIzXPxVAFyv7Cdx27aR0bcaLVh2/CYXmwrBEYepJM67
kifxqDxN2LD9PRfvFIYfy7IJf1mXyKNOaoCYYx+TzyIQkehB8vwzJcR8ngp2
sQY8/EsUeIZj52YLtT9yqemq8HpwFQ9zx8G43aFkfWmXPTx8QwWat2bysJQ4
JKnUEj77rSwfiyiBotE/Hh4Qh0+BfiRP1Kcm8SkfebhoZcLHFRLQSL0kvGDt
IJ+KmwSSgxv4+KIkyK+YQup31vKTjJ+QAu3QO3zsOB5mFIz5tEWzGR+yUgxG
Fjby8avxsPh6NuGbl2wg51oJrRMxtpkAu6lOwu/+ZvTixgBausiS8VcTQPnH
2LnZawVG1440oCVOTP96YQKoTjEnfLH8emb8nu96lOnLMifAuk8WhNe1Mjyj
P39XijXGeydA5/rJhG8VZOrDX4hOeDaO2ecnQJRRE7lv98UiPq6UpOd6Mj70
+XgovhA/1t/Nb+BjKVn6R4E3068wv0tRiHDxL0yfp61EJ2gx/nWuJJx94Uji
c67hKJd6q0qvedvPxc4SYCGjS+J80FCKRx/XpO1WDjL7rziEZ44936krleDQ
xrp0IcoZxfHjYFB+35iPMrg3RK8wpNeKmY7gMhEIH9pPfNQwDPbQq8zoK6/m
D+GvQnBi/nTio4q4nX3prlb0yfopA3ivAJw3rGtluZ99XKu6hR19cnBmE77G
QZE+48k5lYRrTGX9VkfazNC8AScOIIOU9+Usv+R19Jv56Vl0rZvqMxzUgXix
Dx+ROjpzJqkL3GmlTLn9OL0afSke2cDy6BIqtoPRq4jm1USvxsb/6Qfz/+9+
cNXIbsafS4BB3CLMnquPjV2QtCuSj4OU4Is6u1+eQA0y9SSeU2oYv1SmDvt6
xZnPN5BA53gSz/WV+7jgpg06T0OZvu8ZmlVhSeLZGFczSv3ThUsvrjJ+5h1y
74gh8bze5TtC/dOHtysbR7H3F/TmqDSp6xXHhIbxMkNQNr85hKmf6PXfdhLn
y7MEh/AqIwgzrhrB0o3o0jRlwuPvBA6CqDE0BCYN4dRm1F2X0M/yuFOCg9jb
GC6+tBzARzrQ9WgPwuc2DA/QfsZQsXjlCBbuReK7ZxHebmg6iKcYw8oRu2Ec
PYAO7w4n/Or6lEH6gRGM6OsO4SkjyEo+h3AxpD9EqRhBgrr9IK7koiikT+az
be73IWqRIUxY83oUzxWAxzseEW6TmTIM0QagGxEzis2FYH23N9E9E+mQEeqQ
Pixf6jeKVUTgd/cA4TltuqMQqQc9aXNGcbcoVM27SeJjeurfKMzXhckxvqP4
gxi0bw8h8RRdn8HBSjrgELaNyVsJqPs4di735pkPl/6iBblNN0bxvPHwbM1L
wif1d3EpShMmyneP4rYJkKa/mqxXYHgsDytpgHbFXA7eMhF8Z0wgOtaOhbiU
vxpM0bjNwQ3S8K3lGuGRLfVcaulkSHZj/Pc5Gdg90Zbkw7ONaTw8XwlCSp34
2GwSXEx7RviUFEc+pSUPR5Qi+dTTSXCXY0Hy6mUM0y9WywD3aAYfG8jCsuFz
hCu6ufFxlyRY6JfzqSOyID577DnmLvVmRh+E4Qo1wMdfZaFhouPY87VPjG50
DaMHfyZhLCIHVSvHdO/hDG1yLv9wmhampsrBpdLjhO/795GPE3/mnz2ujSlN
OcZ3JRJ+O7eSj8uG8r0k5TA1Xg7af2wh/MZ45vtKorTk+E4+xdz3SaAZ4e7O
n5j+YiKtfCaLj2NloX/bWB8Nq+T51Bt5WqvJn4/lZOG2neTY/J/ncnH8ZHqi
xncePjgJggMmkPgcWAw82K1By4Qy/cpHGXiWdIOsi+ejCA4lrUPL19LDuE4a
rEJyyboXq+5h9mUD+qZK9iD+IgWF6eIkf3KDL/fR303opMcO/XjTeGjVcCXn
UVUL3gykW1jSA/fm9uCH4rDwSlc7Wd+LeZ10gg09XbyzAx8SBcFArSaW3/zM
/QUl0+nMds9W9hxRqtT5B8v7s9vfp4cjerNz80d8g4NSOeLvyHxWbniP7Z3p
tVNsi/GFXpQuty+D5eMXndthLuhBv/sglonDf6GRqrZAlt9pWxvr5B9C62Qu
MOXjrWjD1wX/h7/677n7f/vB2B7Gb4+XhPrifaQfrFgZSLhDjx8f9yhB9glm
v8OnUEXaGxLnolllPLxXAxy4c5hL3EEPOTTJ296REQ5lpQN6XiNMv5WPhiZe
JnVxyrV1hDLThwdK74cxVYKMnp4jdbehrHqIOmYIwzWCTB/9DY2nS0ldr2sR
HIQgY5gYGtbPni+JcOYTfZjSv6Mf3zGBBwkmjL9tQm9NNIiP/XvZp486bQqV
ecl9eKgdZQ+6kXXpX53SS6mZwWGBX0PYsRclxdJkH3HOmdFLB5uB06KyAbxz
EG1/u4fwu99m9YKnGcR+LuzDfaNI7Ek04ZU5Z3uBbwoLxet6cDpG+ZqPCR+/
zKQPYkzhrrP0MJ4lBC/dFMh95xUN9EGpCXTk+A3hVyJQLpVOOHdNbT81YAw5
PTmDeL4YLAmfReZ/Jq5+gB4yAgElj0FcLQGPiziEb3VtH6SrDUG3YfwgXjQB
1iwpIHHwa+QN0ZcNoGjTyACumAgDNmdJ3FLkRUZoP31Y/0aYg6/JwMquMX/4
/oTIKLTowvNSLQ4umwQ2Qs4k/l/O943S63QgBftycLssHF+tSPI/JfUTB35q
wbby4xwsKA/PhRsJPz3tDJeepgmn0HcOHpGH+abXyfoa7Dg2Somow1RDxgf8
VYC9VkvH3uugXjD9yxTY+jaKSz1ThPHK4iRPTioVcKkCJWiFMi4VqQRD/mO6
pzL/Mg//k4Ptqpo8LK8Mq/aYk/ptaGd85A9p2Lt1PQ+fV4b87kzCNy5g8vCA
GKgr3OVRfGUYHS9K8tPk5F4eTuWhtVU/edhTBUoDxp6jnYi34OMbf5HMzyEe
tVEFetdsIdxx1S4ek2f5JXdGeNRWFaiYt21sX464yGz33HztSbU87KsCJu/n
EZ79jNHhLnH6ffN5HiWlApJ/usl8oKuZh91l6dNp5jzqlDIsql5AeKNmNJc6
qExf1U/k4mElcLJeQ36vv7TVKOWvTl+1f8rBhkrwS1mWxC34kSuHDtOmg1LO
jmJjRbi/eOw8tuXQ4mE4rk93BFuP4AF5mHv1Eln3XwVP+vB0E9omlOk7TshB
7DFpkm8jvsqDdLEFnS29eQA3T4LUCnXyXC9if38X9c+aPgHyfVhcBowFppH+
zvhWSlP9jWn0+5/8BlwwHnY8dCXnUdc2L/hKz51BJ6H31bhrHLiJ7CLvJ3Q7
ravCerPon28PVeI4QdBT08tm+YdFjx5LL3WlL6evv4fVh5CNx/MTLFdAm33K
ps2jd24qjsbQhGYltEwn+nnLJFYtIISeIqjHPh/MHxv/l786rD+R+9ryf73P
EKK3mZEpSaCmr+KwfMO9sefLmx8w+8Y5ZVCe/CTENvIMSnp9lazX4btHeJSR
JqgsjMBH72chlZlhJP424p4cPEcXbr0qT1tW/Bo1qreTOKdWXR3Gjw1AzV63
caZuOVIS3EHqKL7qywCONYYFYk4/hLJ/oIrvhqQeC6pU+/BrU6AP/Hp5aLQR
OTjrkPhfXp3VjfebQ4NH5b7Ty1vRVIPIbpb/6AoegtUW8FxkfKbFwR60pVCt
i+X8L+cH0yst4K9gkLFv4CDi2umRflymQHMQq1jCitgzkw6f46C2kaNkHb3s
WgZCbSzB/ukC/uGnAjBthgPh0R1tA+mGllD1daXe3EJhOBFuS7jyZP3BdK4F
1PeJ7Jdg+qZ/ylsJ31edOJj+0AJMeH1VC1wkwSGxhfALYZOH6udZQM4pqb6v
d6RgUfZRMh+nG/u6IN0c/EMHUOIJGbhg6kXmH2LZ0w27zCDosL9cySxZqFG1
IL/31b7tvWBiCuOK8k8l9ctBUJIu0c9jXQL98MIYiqb8WDPusgIo2xuQuF2M
ODoAhkbw4qxxe80MJXBdaUX00HwPHmT9XuA4+rZUqTJsy3Mk8edmrhqm7+lB
tpzum0K3yXB6pgupi48CWSN0oQ4MJ0lbX705BR4Lu5J1dKypHoW3WlDyXWuz
W7sq1HiN9cXz25s4cEsDAr52iUZOmQqvzNRJPuhLXR3BTapgssXfQlVHHSLV
+gg340/jYGdleD7l/INrQhrA+fmQ6KFSSQIXb2T8TUzkjg0rGN+XFUDq+mDi
cg5+OgEMbi2sEb2rAQsn/yTccIUXDysIgUZ6fk52nQboVjqS/Cx9Ls3FWW1o
QXdGGWdUA7ZkRRJuoebC6NLv/Ju3s5cMcDRgv28U4ZvPR/CwiyD9p03v64Qm
DXiYPfb8iA7ijeLoibTJoZPVax5owPxTeeS+OY+ecygvRTpmTZVm8mIN2H6+
fuw9mXrG5/5Qo1X7dnjUVqtDd9MJ8ntvD0WOgqg2fSU58ExzzlSwdL5F4vn3
n80QxOjTV7Djkvfz1OB4qShZlzWH9HvpNSb0RoNXAy8yp0B3bDjJh6ybGgO4
14I2c4y+EHhLBZJld5Hndy+a/3ZSE23oCrdJVytWKYH0xtw/ZH/RGP1DX5lG
36z54JL0QR5Kd66pJus7+20FVelIp5xA6fW1k6BD0+sTyf/68zX1u2fSVUrr
DuoZS8H7BNcXLI8xf/+WznWmy85JC5/hi4LFRY9LLG+KNjmVru5Oa4R1oznx
XHQlzWcT8f8WdUrpw170tkV/0y/t/IcuGhnIkDr6KxCbx+iV7NIGbdrSO/9C
pTDRq9H/nLff8TI9ufV5SP7of/Rqy5q1GJdJQuCpk0lbn3uiV67zxt4zmSjM
x8HM/rEld87tW2eQw969RK90PMx4VLcmxL1WVefFP0TCV4bJelXtWjOK4/Sg
19hPJyH7LZp3Rpqsy+c7zYN4nxEk7VPMLV/7BfVXiZD8by4c6aXqTEFEJmvd
o/Ra1NkyntRXdti2ISrYAmQvzgmcPPcv6vN3JfX74xPTf8dYQuTRPP+vRl1o
jVAZ8bG7Zr7qw2usYHmq4b/F3H6UdPQp6bs7fnr0pitbw+2+HcZ6Uhz07ooY
ea4RIGLak55sDaV2Msdf/RGA1tyCZpZrmKzvrq+zhrjxj0fGp4nAqE8L2Xdu
5El2q3OtoXv9r/yzp8Vh29VIwv/5CXeHdlvD/RrvLJfSCRByN4jwg+M9ujFt
DYMCs+NLmf5Ib1084fOXVnfT66zh8Jm6O19/yUKz3nhy3z35mT0waAVXulb/
WWGtAJduFRIuUH2ht36lFSiJSBhmxylBZdmjFpZ/Ssvpw48t4fiFBeeN61VA
EJWS36Xx6W8/tFnAwZfnH4aZqIIdCJG8LXWdOkiNt4DbAp9q7SOmwt+nHiRu
M1Y+6AQDxk+Wj3u92EcDtqZeIbo6JVK5B6RMoP7+voUQognxazHR1eIvyxjf
aAhzd8d8+hakBUsFg0m9FBw/NICX64NPe6Rbw2xtaOHfJPrp57x3iPqsA2GF
SnFRyjoQJ9VG1neftNsIraQFfZNrXy79pgOXoyaTelRzyRqgdkyFpYnfeIei
daFcxGisj/65eZjaoAwyCoI600T04GuyMqnrxSbfRrGiLLSI54ac3qQHv7jV
hDs5/RrBZePAdJLBvIUv9WAiWkf0U8MyhoN39iDDvVtfSzbqwfPwfMIfKWaP
4J0t+ZvU9vnZ/mH4qXeEGzqYjOKPovTS7RsPwis9WJ0dSTj2CB/F1nI0Ol5s
JLZTD7Tj75L7Hjx1f5CSUKUDvaW/0QJ68CZ8CZl/zYMLw3SeFp0hzttQtUQX
SnqWkf0itY/qp8v06Szu05058TowdCSexFNp9+xOytOUfhx34dGteG3YrJZO
1ssiaVkvzrSklScZqeb6a8EWW0+SJ6PL9dpwpw0toJR57Xa3BrzJ0iDvFaA6
qQb1tOl0SIy8rULmVNB4sfM7y3W3DH5SfzuDHv/w0BwFsSkwzW0Led8gc5vo
T+mimfQtofvd1nxFUNVMyiE6BnYFiWnOdIZs59qgE7LQ9HIH0aWoVxrpoZPn
0Cp1d4L9j4yHM0lfdrG8xOTQoogbnvQn0bN61ZQgaGUdmEl8oOSx5WWmvvTy
hRXgYtmJvvG/VvFZ/0aX79+44H+9L5o5u06e1atOok8RSO1vrMOF/mDU+R+9
ajFfgdnzzeGc7eu35axAUafcCHcvYvy28WQ43tZ00DcsFXmN8yd6VT79FRd/
0oIhmeDZKtRj9OJnFNGriscuI3hEHy4oRwn3iL1DauNEyPrKbD7Tj1NMAPC6
C5qHKtDD79PJeuEVUUM40AK+PlGSt5P+hZrOexJdUnRc0k+rWcFZw8T2+7/+
oQXLI0ndQaN+D5VhDVOPuh5P2dCLdHrLyHrpGkt1QosNfFiqqHuhfxjtcD9C
9hF7rlVbaLctFNc+rdjoJAAlIzfJOeHj4ectkG8HE2f0ZDw9IQKeS2bXs3w9
783fer9p4Ncxf3ZdoAQ8iwutZfnvgICm+kfTYPbQXeW6YxMhPZtL9qPXSdQf
unYaHKwdOZokIwuHNTUIXyI7/Q/1YxoEGCdIygsrgOvVZz9ZrjUn5g++Ng1U
Hkx54qmsDNHbiwj/Ez+riXabBmp35wQ8cJ0CduccyXXWO277C3l2kJh2Lq0o
ZioY1Uwg/twrj9sMUnYQXDfh/ftfGuB+UJ/M02Fm2T91O1sIyFtUxTmgBfbN
h+rIOu4vb6Nm2IDZxxqPd1N1IDNJnuTzBof+DkrdGnxc3Be639OFyLCPJD7O
4trd9b8sQfAz/tZkrg/+/Iu/iX8T9+7FBxnfKLfSpv6iAaQc3k3ONzyvVrbQ
MmYg2TZypbzPEL4ZLyLrorr2ezuuM4KC8yXVcSbG8ETOjOjqyKUT3dQWfVj2
5HuEiLsJlM9vJftLRvhAH/1BG44gYaw6wxTcxY6QOr22Ta4Tl6jD04ij4CJm
Bpd1Bomu1m4+20edVAIpZBdQmmkGK5cZkPwR8Gf85jspUCj78GuPgjlcipYg
OsBz4fbjskHU1yn1ss/HHP5dP0648b+r3bi5K//n7Xsj/EBzyFqUSnjg/O89
OGICPTt7ZkW+ljkIKcsQPoOb3EuNU6HfV2dyYx6Ywfgl34meG1uMG6BmaNFq
3/MjQcAMAg7kkfnbDvZ1Yh8Dervw/u2u0qbQyk8icSi3kf9Ll5jRinUn0cMq
YzB+JUPiSdftaU+vtaIr1pY/TFxkBItdm8k6dgUUN6qftaPFbk09qMTEf//W
K0R/kmdHVVBXHWg5r9KHS07pQXXM4xKyj4jPokEa6PlP1gnOnq0D/iae5Dmd
mP3fMjw8ix4cbxAz8YEmcI6G3CZ+4JVPrnqOC60fgxaXv1CDnW3OJ1mu6TLn
dHr1HLpgv/vLG9eU4LLEwQgSZ0nHkKxTnvSdws1bxG0ngeO1d0SXRN5e2luv
6EO/WKAy61SAKEjMfsBldaluhaim+kx/2vkGv687swfxvgadYHlr9fP9eYxe
dTp+7Dvb744MTT/K//+9z3DUciHGeeNhxR7h01U/tqLrqTD2Xlx8Mg/LTYFH
a5u9Ph46h/6+1SJ6tXnQgUu91YY5d3aE2UY+RZN2NxHf23/o4xB13hDmr9R6
Ze7+Hl1zfk32l4VnN/VQQubwt/Sj9SnJSjR+/xBZ96Wp6f2hXEuYluERHxb0
GzV5vSG6FKvyviuUqS+l5Y9aXj3tQMnLFxF/IjG8sVUd2YGmkf/62tUDaFHK
EKm7wh0Vf+oFpsM5SN8iuoGH3roWkXrPnIvq1Q/ZA5W63tlkuzCoCXWQ9S24
1vUjtNgB3Ertg/d1iUPa96NfiM8pNvtGf3IEKm6h4moFaXgy4znxwwVcrc9w
ZgZURG6KthmQhXHFR0k+RORyPtKqTsBTW1Bx8o4ilGeKkn2K41VVoh7mBKdM
N99MzpwMaQr2RSx/mfG8WH2LEyT+lnpuWD8V1r9UIeeTq6OuFsNsJyh4/+ec
WIYmtBy7Wshy16cnSujKGdB6KPvLixZt2CRaTnij5dKP6TYzYGqevXWVgx7c
iUog17nlwC2jFjpCtFbFhntJBpBl9YXc93W581c8xwEW8euPJf4xgkOVR8g8
q9dLVWJBe6hUMeCcNjeFR3vPk9/14IR1NX10GkyZ8PPu1HXmUP5hkJxX7A1N
rlevtQUzad1zuwst4LJmPHkeJDB33B91QRuY4Z68J7XQEoTfwVeWh35f31I/
YAnFVHTgrkdWUL+W943ll18u/UFvM4er/zgRB49Yw/Pnj8lz8LOCG39RV42g
PTwyZmSWDVwPcSHr+HnPvxZqpy64IdNb6nU2ILboDNFn64bMevxXHS64pxzO
CrYF60PxZN+Z8Dm6nTKSh1WOzYuj7tvCtlYxosMOL1sb8T8+Sum8YplZYwtr
rJsI39aV04YvDOTPj3kw3fCXLTxZOUT48PLQDspFjr4cKDASnWsLkmYyhCcU
HOjEHRr0iYUJNseX24KeQR/Rkx6Nkt/0FQMaufR/5lTZgLh2CJn/1/1Uq/oS
C/rWIyHpanUbGMnvI3HIMObVU1ds6AetqWV2Ntaw3XYhybdjYT3l6lr29PTp
sOOzvBXYaCqS95eELUJepDc70W0WUT74jQWs58aT8yJzbf9P6tGz6NXJFTse
7jMD5VGZayy//vZIbpaZC72mPNugXdUYCo/fT2B5jNnnc/Vyc+hgJYOjN1fo
w9pE70iWD70L2URN96C/DZxaqrlUG2xHZnmx/PuB1xb41nya+6594aKZU+H8
7QgNlsubtK7PeeNDf512yAniFMBI17WJ1Z/D4QmGZTw/+oh45qqoVgnY53En
heXZ6y/nbSpYQCsdWjjVL6YfPfsor8dy41vh+zsCQ2h9hbaG8qzAfMOZx4le
df/HX/1Xr7r/o1fWBj6Mv5oAa/wnT3pjGYE2PZk+9n7dqDcPj1MFvaClSsbX
ziPJ7Z3k/PDS5lQO9UUHchYqRb1dn42cLtoTvfJO6Bqg1hnDrttrnnJ8i9Gl
wpnE558af26Q/mUBO5LDLm8M/oF2Hzcl+xEan9Jd/9cayh969ltdb0LNC6aR
fbm5oL+Fpu1Ay6Ix+HNrN1L6eobkocPqxno6zB5k9O5o3Pg0jH5IxlWSPJ9y
7Vt6hSPT93ScWe0uCH7355WxvOh2WnG6GIIafqLPczMx2CqhRup39S5EU6MA
Q3PKqmepTgT7QGua5fcix/3EX2eC3ZkXhlESckA/+UD8cNjZZxVlR2bBFbUH
1SuYvmzhRcGHZJ96zS3DCrPh5NvkY/tjVWHVswl3WP7NX6g0fe9seHBx/+Xy
IQ1Q8hl3neXjPHvf47zZwEuTkjT7rQ3PswWusrzue+u7iO+z4YvjWsNsjh5E
IvF0lm+aJfKOKpwNK6McZj9zNIKnd/TTWD6wBb2j4meDsvAu+ZBUU+juCrzI
8tsvTxapG8wG0RBt0e+xFjCyLZ7w40UdH/D5WfDKalDX38kK/ujkkuucj7f4
mPVnJnyngoxrB6zBlX5F7lu6wfozJToTlscs6e64bguWnMNknnG7Mu5Qo06Q
lO7xLcx9Guy16iN1EZNz9yl13hFeR7o+0Ps2HYQsv99iObdR5xVunw5ls79c
WuLmAPKrRO+zPOhEcXFoly3sfjrn2LwzjhDlv4w879Y54/iNvmEFWzYl7A9+
OQPWfMkg9ahemJSPTc3gaqm/5KEnTtASfuk5y4NP3f9MR+tB0fZI62lRCAKv
y+Wz3PLu0yJqtyp8u/fIJUgQ4N87+hXLb9z68w1XiULrvpafzp4A86/6v2F5
9zfLQpzMz9+VuzlP0Q9A78t2woe6bYuxwxS68fi8wYsyAM8mFpPrnP/Q/JFu
0KevLF0b+vgQgmdXa1+y/C9fsYr2tqQLnPhJGvecQEvOgcx/4xG1AqrFjuby
3UzQ4Rnw0XThXeITmi/eVH82g149mmKybZIjJOVkkj7LderM1/SyWXRpgSy1
wsceDjzdepz4wzh83XufC318xSvHVa7TwElTfjvLn073PND1bA4dWTqu59uA
DZRf/hRE5tPm5Q/SnnTQzwxT+XArGFhdZM1yyV1lchTlRT+KyH/8Y445PMw3
FWe5260Dy0JFfenwE4dvLt3G9P3bDStYPcm4pGOs9NOP3qOsL3t3uzaMWj8g
+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
SZroUgu7mMvnV8Api0xXMH6nt8aja9oZ8ZxFlH8OvgJ2S+nUCYyvvX1JYj37
Ah0IXaGQjIiAYna25VqMp6CvX9I4QxCXY4zSU+cwqJNRsEzDeFOW+3Om2+HI
VFZHsGQmGPpLVKiCMH4zXKKXnj0S3cg09jxt+RLszGqWQzGufuKYLfnXSORt
8GzhwG4fsJK8PFCK8To5QW0+mUiU8HKF13zeDS7pVKyuYVzk4geKnwvhKOaX
OOfWBTtIjFs9Lotdz/BTMX0cM6GI0p3X/+mKGVgI8xzLx/hiAfLzPRSMOFX2
77Zs1wVFoSyeffhzcVPzm+GWHzLh3X+nS/4J3HvI8Foej/+6wCPxu31Qn2A2
HRnXA7CLa5vCdX6j1GMkWN4dpb97dEXY5yZMGPxk+4Dx3rlYt/Ns9ohOiJ7e
yZsdju0Z98f9ZCTnPUM5LXPEwlJD1smyBxp0EgVx/+87uuF2RlUFJeVZrHXf
FiRGuZn/N72aPmQpHbcs8V96VeNPvo3Pk2rLKrJ8uqpBiFAn2+HOd65suS0w
A+2Be69bSKGE1ba1nT72ZhHVX26KXEA78fcSPo9z0SRhZ/6C0zNt+uwQH9SJ
7H4vGFVHUAyV2embKoxsGPpxTQRq/pVu7hXoJ9B91dnpkwn3G8hGx+7Cnn+v
9M4O/yTMDtM8x3mjUIZgi8JDuK75QTbZd5VwcuX9+Z198NxutmcsckAYmhfe
ZN8D3v6OoTt6pXP68kKyEmSNJPDc8KcBFuZLSfj3PRtOwbdHTwPmH/XtSoeT
EH7SghXP4/xWzl3I/K4DvIVnVvTF2eB1+fVWXJc83b8rd67qQ/3D7JWOXC5g
QW95cF16MLe0GS9sBoKrC30FTXzwdT4kEfe3DvtiTD/aWsHh+psOX0pEILwm
+9A0fn3UGcm7L9iDqcSTEy+uSYCYUCypH+P0ynVVl8ddwDZz9156RVl4LXB3
oxb3A2Q32i4aeYJH7XL1hyQlcLkk0ZaJ8aozXPb7sefxmMXpEQUlLTB2/BXp
hHEv06B1lih/WIt/daVSSB8+KLF78OP3y3zf1L+KEOC6OHXXuNEcnPvozLqx
+CQw5S7UMkZA0qbQpNgJO+ASVGu7h/GPFn2cx0hR0LdkovrH2A3YZrSf+GDx
/9PxwHfPI/GgJO80HnDOB4SPP2dx3iTBN36ve/Lnk8DGSLySjT4AjAvLD57b
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
M/ZFlvnCOzjXozH2RV4XWadppvRjekWbq1aUNloBNro6279fWCD+p2qOie0k
EH070T79ugaO/BrYa3/YDbEYLYh9iiCBnZlsew5TK5zjr/uuzx+AdKmcrTv/
LMBX/T6RYak+2H66N7FlPQal5BdkG2rNQzMUcBzYNwaj92etX4tlIF+nfzX8
+T/hg5/IjWbHn1AYq9tasVKI3GmZpMr4xkBwgvvGG4t5ONyul1sRUYnyt/c1
DtH3wu+6lEt7hxdA1zz3GN+lz0jw0AzzWto34H3wvlR8BcuHjOKPU2R9QycC
DkrqDVZDwJqtTiCmeylnoo/eXe1CxN5fTn9rKiB+luJt+/2f4Mp1yuIK9xhK
v+aVe2sGQXOUAtOv6W5gHCtS1NCYR4r9atssc1/g9uUgeR/GViRGiA15bbmA
ohvTeTJe18Jx7aozlibTiM3nUOljsXGU3E/x+OGTanj39fO3mX0LKPYEWXz/
tS7kmplrI/WhHNr0jV15r5HQ/GprmiJHPdKEwl62+0TMp5OZdx8joWEuqhNL
6UQkRf7XelD6K9CoHJHdrzaPYv7q6ukyFqNz6rQ/Jkm9YN+xFnaVexoJqAw/
c7+eicYvJompTIxD8/cas5ArwyiTx2ZZSyIaKXpf8WOJngXWnH2532faUbnL
xKCGsw+644qEnEIXgLFaIjpZ5wvK1vlKFa9giXr1KUMrA0iwFhqbpvO0HHlI
XutcPKqBTrgEtBb1k6DLiFtQTCwHdWa86/qzeA9dD1384oHplcqT8ihGvyT0
dfZom/jn60gsf3byPRaH9d90hz5Lh6N6h2xPXQVG9CRvk9wfi2eT3uOab/c/
R6asP2/WEsiQG0k14jkW/8pVQSfuq9khr57YI8UF/cSzl8NH/m+9oqim7x7+
w/M/9er/9/uDagxYPij8f/Rqk/s/+SDXoY5Nt7cssHb1NrP9N2dipGzQjl4Z
vP2wii5xg1bp+8enJ+KI2hSZO3r1tN92BHYLwNj1Ta3Zg0VEz91zO3pl/LC9
tYVXFN7ZH57TPF5LfKpDn7uzP1i37SwdfQ/qvrSJqtp0Ez8539iZe61aOvbY
LVIWBgbTI16fmyC2f6n9iuvV7PNdypMtilB0VWbx/bdfROWEiXr8eyUe/rIn
4pcGsPBqT/w6vgv9U2Yg35nLsIm/LSb7FPxyIuwUKw6gW5KhE7heWe2+1cWm
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
q2naiJAV1dt6TaVwZHeSzf84IoFXwLRgckQJupERKZCx4YWI0b7rlqMkMJ8X
/cv/KQfV0UpGZI1ZoXGxe5p/sXWtLvoJu/VkCqo9XeTSNqmNYs4dO/x0HVtn
pZP6J12i0RfWGlm1rzJIOa/jzxvM/0/wJrfzMgSjw3cPa1KXCKKaaLt9h7F4
fvFyk+bIAS80M6uSVn+LGektnVZJx7jTsexYV1cbdF30piZF1zrRIrLtLN4n
n///7g/6Bo9a3Md0ad//2B/8n/7Kh8NtGz93PnK86cKnqxrEnB//dvTKSppq
y42XBRazKtk/XQ0mKlS07ehVeo3M0jb9FdjvUT8yuZhLvFMwtqNXQU/oJrez
b4ClHPvo87M1xH8jazv9DByjG32kJRG4liY0fO5tN7FNgXdn7qbo9b34K+ri
8O4w197suEkiHa+1Hc6/NVFSmVlIg7tNY/N6wzJR7ErFzvk8SmRvJwmN8pC1
ql2tREuG3rswS+N6VUVN8KfgVgHfmXprYabDyKPx1yn8+zrStT5ae60FbBJD
GivS9KiI5x0rnie+n7K6vV6sB6S+Ci5vVlZ0+l/fLN7P0PL55hAdmwn8Wjo5
mhPEiWiKAnLxPLHPpUSU4Y0lyLOJHXvoxIcOxs+x4nMrHTnmajyddvCVMl12
cEIEibjb3RzAOFPUuvkvQ1cQJbqczL50D41OBAXifZ4J2e30Ns+8gEnCsqkj
/hHK0yvzwvuKPc/oyt5HLyAiiqLQTEMF6Qmtr+hgPKt8NozOPxjeJ7lNTu/X
ReLBZKu7MB5829nP+lgE7Iut+lIpaIKiZZj0NXB9O/6A7oRnDOy1X1s7QrBB
F8tDKZ5gcbXJT+rTZ02C/Evu85UfXZFwx8PmQszPN+o7EvZJpoH7yAyl2/nn
qD7s5+RxTN8YBcXz8kSyIHI5e262NBjpSt4dPbhCAoLm/qKgP3nQ/UQ08L3T
K/Rb056NkoT5wLkodufwQpjp0ZrUsElE0ftrj/pi67V11al3y69LQDKnI9wr
Ph09Jlc0f/Ydi7ce1dvdTOVYfn/r8o+NHHRffsTkcTMJ8tysk7MN3wNZPfq6
1VOIovqqB7k/kkDx2nJBW3E5fMt46i35qgxpKPmdrS4lgaxYslG2XAkMRNLt
M+SvQhVWYstG70iwL+Kvzq5deWBJIxNynBLzF3kTUY8xvpfW7qWnVjQAi4oS
4vyI5vR6Hvtjenuz5b2FDHsokmq3mfCT+Ig0iRRJbRg3dAq8570nFxnN8KZ7
iFajr0+NzVQLSFBSfIm4Z6gU1TIcTE8LqEIOxVWLS9lYnpIxNkPBiv2fTe6A
nU4ZovJXFZzE+NG9cbNJ8x8QW5o/Yf3nO/Ty3HuqOOz9WVkCJQ8VVKHHvjOh
1igLPbgvqvAX+77XW+JzP2q/R9k0aRNJFsmoPD1xqwfL39N+7fezYShBrOGp
D7t0XyEGT5eEC7j+DFayXy0sQJSME1q7nvgjcsupio55Etxgn7VhMM5C/2Z6
GvLa3FCgePxIOnYf6dp+ypI+paCmh8WxB6MskO1U9nVjTJfOpcVMVa7EIory
DzF3ZbSRgkneN1YsfkoSxPMlfoShyioNlYuxsshJ+mlMLBZvOatvhWaT/dBR
HRqvp+vCiEwnylsFi8+7f6QHUaY7Kr3Jofcygg3x+UpEVWDcllc0LXbUCv0z
pWU9MrcLsd36I4H3vbfaE922VFVQfppHtUTHLUJGgsj/uj9oRUmxvd1ADbpX
qoyNvJ4SmdTId3Ts8TG+re0fzEDL6ecudS+MWLSwe6e//fvPkF/AzQVFHGU5
OccLifz+n3b6RQUHmH5CCR8Eb5hWWAnVExn/1vznnGGhwh/5h0Qg+mhWPkdt
P/Gtf9TO+XhfnpfnkTruwMRN6jurGjPEgoWend97lZbqFjWbewCZoZnpiT9X
iU/Cy7h2+k7tEq9EtT6CkyunDGXM9yAOmegEXK+Ups6KL7ArQfMHA16nchpE
PFC7c75Bfv2a7WauOnAb3RAstjiJjGkpZXDftdb72VpTQQdW21ZJ5cps6Bi9
Dgvel6W/XbhXmE8fujUNtPWyudCitXk93i9aeNLEKeWCKfRFi2S9KeRDVZJv
MvH6fAVdKc1GkSU0778q5xQogl44xQ3h+aNNYqYvHYMdxPE1XSztEUfRs94M
+BwW1xHEe8DAGewz8+dzNmVQ0KlfxvhczAG5sbSgpx5A/thi7PSaInJ/HU9X
iHEoNUys4vGBeckkUe4aTcST84MfnzfJ7jz+Ib/AD8i1uMeeizxDWem2AXhf
hML6zDjFdBDoiDgblK2aoa+sejfw/WUXocplV+MwsD1lfm7liw3S60mbDMLi
jd7T4sl0aSRc4D7aXq7igoZuNfrj/eRlN/iCz/DHwOEw2YuUIV4okqGMmw3j
jGdp3xsS4+HM8o3nOmV+iLi7XoAJ83VejSrZDBuJ4HDugVhjcgiKXg6/NofF
/8rjqZJdIsnQ3RNYfflUJNKHldQ4TA9rlFpsJUeSgbem0FqaOxY1fJC1fPQX
84ejrvWqkclQbhXaq5CZiP6wq4/DKgmEZiium51IAvKMU/2boSloev+epWAs
T0m/BnsvmcWCuuKeMiuadPRCc35ZHuPW8rZRDYuh8GfwQdujPRlIVbk71gbj
+67+qB2NcoZ8c4sqd/ZMJO7LoZCPcUkKsWflR63RYJ9BnAlkIvmAxjclGHe5
mWHRJBGKuCz0VbsgA3EaLeRo4XVCsa13L8XiEbmj/ktjQjr69ExOoR3TAaOw
zQpGrRSU6+r4L9QhBX2Ifoi0MK54/4VxMFk6EnGkCogKeY2mr57SsMT4xos7
b80W01FXNV+0zaFopHkH9fFh7689aGtir5yOritmiDLtDkO2X5OHYrHrQPZb
/z17Yip6yJsgOZHph/JdHmQ9xq5nN33OJBtXMvpO67JBfOqBHMfqpemw9Sg1
OMW/czAeFQ3rsUfo2SLH/DWuROx+baoUvivRjkJRy4En/4ARiifbZ96G3d8T
zQ8otx6FoaN+PtepttXRpYslFjlYnIy8yfAeqvdH8mcuBDRwyCCzh6Frwvi+
2x9Dm91S3qjocI70eKowMuoyL43G+KRe1YS4qDNqlUcN5k3siMJYjboZ4yoF
x4O4KS3RAs2ajetlcvTjgkk+3i/KHDri5oLp1XNq2r/zvFcJmusq/61f1CQx
QeBoqsh/9YveOk61vW1BDT8YzmBck/ig8T+/S+txUm9r25YZImXVpym7I4kj
0//5nRFv6cXfbmc54b5Ygq2kXzHxkiTamcehspCc+xHHC8embSsnBb8RBS63
7szjbB9t+Jp4ggDijXuK+VsHiZ+Cn+2c8zltzV2dz3Ibfr3gazxVP0f0I4+K
3fm7r2mt0A1JKCBXSDR4s0aMObMttzMfVC5pAlUywLJEd4XGkwIxrzvsnB/F
47t34NxBBbhxzSnWXOgIkiAju73TRxpH11LCrgx/Q9aa9DNPogOfX8ri10E7
K2G567gmJHyYzbtMyYaiOuoXcN/l8LbvLlOSDpBF3dlloMOJXEkD83j+mB5C
qWZS8wy4aQ7WLrDwIjYJPxrcjx0d4dfbjDSG8/GUdoxjwsidMZAcr4P1Fb8+
ZEprAQOnFf95t95Gizb3lPE+Lg+jceEoMWvYs1LHdjT2AXoIT/zweWHxCi2Z
gGE7ODoQQCOhL4f0/LUn8H54dFGXm27WCUIM1OLz9yojKqugVFzfqGq0Arm5
3KGEvXWOW0QLvT2EJt7jPq3J7HFTqCe8Pnxm5H2sHlL7mdacjPHhzYPn02l8
4ESazD732ybIGaXnemE8fu1i2K9QX/hXF/GzqcQSvZagF9TAeKnwG9nPS36w
+/hWa2WMHcoMjp+8jnHWnuPPKHYFQOc59TVDBRd0I87hOt6PQfU+lqPBPRAS
5+8fniR5IGbFdFIXFucOFy/GN3MFgaiyyJBBgA/atbnIkonxAodT6v3VgTBI
Hvd+TMsP0RroR3pg3FAsQM3ztz8MZA3sXrwViNidzqXpYVxyiD6RO+IFsAVt
Lb20C0E5Z67XPMH4dtjIwdogLyicJvdRpwlDb2P89ipj/OQP6gzDXw7w5nRl
gMmdcNR+LtxdG+PkR+Ryvxjpwj+z662Cy+HoTfh1CSOMu3mf8ahNVUUmM2zk
NeQRqHs38yVjfB+kMG+LnGSPhKb717INwpEHgzRoYvz0MxWHgUFvxADmNMqc
YWjtUE+BBMZXErUzTRkDULE2i+nCsxC0uvDhLCfGeSOS6Mx7Q5Di77s8ah4B
mJ85vh+fP1JVZrQpSApDmUUXOsOafNE1gpYUHcZHe2vtadXCkb4QMdGM1gud
0dlNyYVxqtvllY+ZwpER/5nW2nsuqIf9ha8qXh/4fCM8ljYMJYnofw52tEEc
eW804jF+mf3+3W3jEERKZnPqWjVBuVmGbOMYj3TVPWjwNQApL793oanWQa8S
OLMv4uudoS1Dg8YL9O3TXxtFKSWUwWdxwQDfz5qJrnad80KTzz/Jajy5j+4P
H6WMx32UmkMDyLkhj+5vahnkN1GFwLDLJ4wLbf2eum5oh1wuLS7cUGVHXi5F
xXhdPfLO8uhZWnM0GNGzUX9zD5JaIvTh8zg5bqtunJhefbE0KaZJFSEeOWby
3/zVjc6kl3kMIv91nsxdnhPb2wepQVrOPanygiGxnYJ6R68EdKK33MiZwT/8
tlJ5ehQxmdlxR690VeVWtlcuQfo/pN5qVUpceV2/M+988ps6tshch4meVak+
9SZisMDizrwzx6NbXdurN0FsL/tTUc8fxNRT9C3/qXcZtuRriwKj6Pc9H+bn
iTHS5jvnCfvGx8UmuohD3vVsjdJz68TJSyM7575Kf1USyNd+CLd+vWygdKVA
00dzOHD+N+b93bPHHsHIRxlLj34aNPWbqhzXq4yAuiKu3wrAvU+kJdaGAd2k
zz61cw4eUxtyeaIMg38517gzWdB8ueht/PpUD7zg9ZbRAMkP+iLeWRdRJkmS
aef8pcN1Y87m2qBBW9//Lu0a6nwqGIv7MSrB5T1Fvk/hwB2H7/yRAmidayYa
r+eX0xN5nef1ocbUdSFP9BYSHF/exutjBYVV9KdfG8Ov4cy0GtJdlG0VXYDn
m/vfOjPaSZhDnzeZD/MhKeT67nAAXjfzV0g9aqJiCaeqdvHmG8qh3s+8drh/
m6tXzLFxtobLlIHlNjVKqGNftAZeB1C+9x2pxtlC5+MrRl+vaCB/i8uieH46
cJNBwjbFHthDGBajtXTQ1TkfHnx+fzad0kPb1hEaN/o0Y748Q6aaIs/wuYmD
3O1kkytOwO91dj7kkzF6lfiSD4/D1PMGrQ3rzvCWJuCl/TkLpB5lx4TrJJvU
iOSYigssHb+rv8RujeYrRT4W4Hn9o0CKoQVnUGq3Nvtw3w75Wpt8ysJfz1al
fzDQCWZuyz4qdXJEjT+ay9Pwuug+7XvxdA4wRm3vPhHqgoJ07LdxvU3/uh05
5GwDjDb57AeuuSOpvJOhOH9fFiEd88EcWDS0Em9qe6Db9PQkvC/xcpvXyPGR
p/BZY8/cD1FP1F1sdQ6vn1gxcToUHJOFMrsjzUerPdHXiqOrbzAeQPveO2FR
HI0vJ19j/+aJdgkks2ZgnPjH6Irqli5CPGepV1U9Eb8MQyv+OXtlDJ+Ndlkg
S7Z5XU87D5QuudmDz3cHs9d/CYu1RzQZLyrvn3NHBza2V3C/4chbeyrQyBVZ
p6gf4dhwRuRReW/xeervXujlkLMHqjMdkLnJ7YAoJ26P4f7ZYYbTRX2fF9qT
JHg94bwNCvUKtPbDOK/OnQ21Ji80cWvc8CKzBfpXI5KEv56hg6T6uNULbVv6
UkglG6KII/u+4PXt5Q3/qH2sXijL2iChvUYHsXJcfvwa4zR8N7I2hj0Qw7m2
yI/NKmiG4EuTi3E+TiHZ45fc0dHKKcb8+4/Q6w3vx/g84F+tA6Zyd51R3KR8
kdaBu0io81BwE8bNJuoCFJrtkIN07lqpwg1Ex3vPEo83lqBprSF6K9SiQ20p
1caKnp98zYXH7bWYKyTuB8bow6dEU0mxPShXO9QZX9+nI0+656qoIEXVQ0dz
GbgJ62Yv/tf9Qabas9vbCYdBnULfldfyKTE6/fh/zutzatza9maCy1xzDde7
YojkBlU7enUiJv/PdtlFEN/F8dGtvYwYdL935zwZOyvuXxpXeSAw5ooR9/Nm
YpPg2s55MrXNSkPQIQCyLlTtH48ME0VnHuycb0zN/eM7KUMEdq9YW37emCee
mnm1cy43+TapHAZvw163syVCuWvESDeynXOJT+RddKEOuQcCk2/EeDL2IHoF
/p39RKr7LqdQjRTwfKO2EcunRkfIlI7ivNqpRsRX5BHQzyTcnNKiQ6y/3xfg
evVexODbkLYC9HXEZsmVM6HwNdFrOC/pXzrzuk4JOOV+DG9JciBuNedQ/Lr1
7c1mSzdShSFDGrOF0ivoztXgelzHBnpuj6+xasKnUT7avgu8KEx8sQ33aVvd
FH+PXdAGqsdlqjbEm0ioKjcT1ze3jQ/VdcK6QGViH7sxdgs94mG5h/u3zd5n
PEeV9KD0Z24vdcVdFPe+d+ccqlOdefemDfVBkMwhcdXmAYpxiB/Hdc9c7CYF
Qc8QSIc+f4MIWfQ669YUft8nPiZb9fAZw6bW1Gq9iQJqvJ1Yg+etrtdW3z2o
NYFTQkPsvPVP0MmJ84H4unZpeXDBYMMUVquMrwi/VkcL1r8f4z7wfeucAaow
gwp304bAJS30aPKgMO7bn1L6mihMm0EJs5pfbbUu6qLpU8XjkPy72F0ZfTPY
V1tjY577DJFuVnfgdYkM+g2eaGZT+EIrWc6SaoiMMwQq8P6QpEtsquzbRhBA
Eyj764UJirtmfRbnu/ndq8p+60PSQR/pDSZzJLMoQ45zXjP6S7/XdeFqZ+HG
HUULpPZ3WQ7nOhTRGhqnNUE9SSX9kqIlutRQNYvzi5R89K098qA/Sytz/ogV
iqMrjcA/z232C+NjXCIQc/qJxSc7K6QYHnwYn6uqejV0lJTFh/740Qt/dbdC
vKUkBpx/FK8oL/grh445mJBFnbNC63R0Pvj7+Pp0XWlm10J7A/g9x/UtkfFv
OgH87/4/fL15OJVR98ctZJ7neZ6HzJThbDOlopCQoaI5mjXIKUmjJqJUNGhU
IUWkvSqVJEPGVIgMJZkznXPcr7O91/N7n/eP5y/X9bnOddv32mt999rDvdfu
BRP6dP4NELC5KsV/yXaIOs3r0jnDMwv9wkXDouCcvktzAo6Ga/5xTez9GrVB
xQcnhrYD43mU8PHQLbClUn8Je78sUkJiosV4F7i6KsTdvLUBHNzWiLHzE+W+
KIPyqt2wuND1dtqLCEB87mfZ3xFz8Je9932/BziiVshxNYSDzrFbumzu29Gg
FCcaA4UqcfovbYLgT/6IJFtPWBW+xjse7YH05tW+Vlt84fKB0DXs9Yobkq/v
3HiwG2LDRSWN53pB0+j6YXY7T576wPosvQt+ZDaGObk6wbzVb+LY77tG7d25
H9PbwbxQWccnxgL8V35+wPaTm/2Xrr5si4JXFzWKmnLUYbn7Qhm2HyYlBN0L
f7wBHh68yWpL5AKeO4z97PWWtcLOh5Rn9Go/5zVfMEO4zPru/9QrTmkDitIU
QfdsQ4Teoij8uEOJ8GNVFIvOoYb00k/cK994BYu/pIhehQqOjtN36KPUOUNx
Z3c/x2WX28l9fT4jj0bRmBm6e5a3ZUd1Ff7MrCf39a1d0dvV9twGndNtyctt
a8PKRjVkHZ4+X7EibC4Nrb33UKVY4S8+kp5B5oneYlzV1FZnVGx+yuPargms
Vz1IzmuFHnTNFlV2RzwCDYkHXblgZe4aco9690bn3d5CixD/tTlpr3qFZuZ9
Z8g5rlW/3+icnb8U+dXHin5qkYLn4pPyZH8B1q7qWbwM5fHYdzbqKoOYfPhn
cs+tQou4aLIvEqG3HUmp0wStzif72XxPxa+c1l/+6HZYVuHGAAN4K6MmTX4v
ZGXx2G0l0klre1KiaQb5vIfId9be0asv784MQg0rAzL3dltBZT5Nmc356pLa
O3tXoSVKtf05CXZwR37HabbuvdyWJnxaPgwdqS9+bczjBFcLVw6yda8j1Pt8
UlI4cm1s+7Ss1BX2rFiwmM2r/lyUWhC9GrUeGqM/nvKEx2sNsth6KBFllPZK
dw1S55Bt2Xp/CQzfvchi66Ftnrm60aM1KHnS4OfltctgXnF4KJuftnQu+Tm6
BrEupSfravrN+L9kJTs/BI2LO2Rn+A1J7onl/AHQl7vah81Vzq1aMnB9DQr8
qFh3gy8ILidq9LN11XxVqm/a8Gqka7rws51YCCiv//KAze/Mbz9Obw9Hqr9U
NuvwhEPER7ETRIcrL36R/RyKLF8u8R7dsRo20HYcZ/Ou5QcHXwkEo/r5Dw1W
vlkDm7gUbrO59cU1Hs7bVyCFwtdiW3vWwuS3u01sbtceUvZHZBkawfP6dzRE
QIRqnRS7nYmMlBdTv9xQzNTV/BOHIqHbOXMpm7e/2Dzn6rApYhg0lVu0RkKT
uPVuNm8U4dk8VaQLvlZcHVu7I4H3wsu9bJ6ePTw8NekKkeqd6topkbB1NMqL
za2UhtYlay2HiOt3Ylq7IqApaPAnuz1XIhljE88D4VC+Sot861p4v34PYvMf
qWMC44fCgRO7qF85sga+uG1cy45TWS/piKKfa0Gi1+irdXs46PX9DmGPRwf1
bqZL/l4HO0we7ywXCIXQ9h439n1EovZn6z/HbITz6w6emscVBGvzv80n9+P9
tHOv2bcZhDNbHijX+UPmcWYAO29/JKJmcPb7FtAdfRTJuLUM+vmbyPh11XTo
6c3zW6E5wvqKGM0LlN2NrrH5S8MePurMVoi9UmfJ3egCcRs/jLF5qcIh4/mV
WyDTJGlf0j1bSA6NbmE/31nRRPixy2aozLAcHnxrAtULG5ez26m4VHOvUvsG
+Lhh5ExSkQoUh672Yb9v4tFUK8UNkWCte8buqRMnPMjObWTb83fNkUPGQf93
vj3/0Nf/2h9s6XQU5lzl8J/zDNuTLCnqljAKPB54Ys7cdfhpsBbhXcfDmdQ/
FVQ/4vF38tUVnL7BidyH/P683CSap4cSHsjnjxQ8x5v5Wsh9yEJin8bopabo
YfJpoVOoCp95H0XuQ/a3H/sDRVYouIkuwFHRio94xJJ1rZXMrOawCVs0pjjg
Ppz5B9t9Okjqas0pO9oabeeIhtyZuivwGF5exEHuczhsk1CeKe2CHCyU1KrO
zQGvyawsNtcMVXsYNtcdKS3YtXNvNT+I+aiQex7cjxQnIK6FKPb8yi+f7CRA
9s+iNWzecLNxWTTvYiSwUy/NeUAOzJQNFrD5iax1EtW83kha6ZXDjlQ1eOo5
JUDOzaaOrSlk+qCO5BUn3ZK0weWuManzuEA40rps/XKU6u05uiDKECy0Ym+w
eW6KMbc39kVSZVThPg0z6LRsXs/mWreOVrpP+qG5xZyiu4St4F3FOiM277wb
m4JFVyCrCxxz7+5bACVRxYPknv+eqOClUytQ+/QuuzkRNDjuuLiAzR3XntBO
zAlA+k7m68/O5GnZGcw4Nrd9JjsmrbsSbcw2cu+rcAW5saOL2XzevWs1yitX
osnz4zFLf3pAX0y+GpuXPTN4Lm23Eq2JfeGireoFqSUTTLZ+Jp7JyPEvC0Ah
WfnRt3YshUX1VR1svvXg/ufC4ytQ3oVNwsI9PmDb/auWzcs4fep2v/VHxT2t
Gv1nl8Mc/8xKNnd20KccjPzQY1Z7YIu+HzySPEh+L83it40yXI4Scs9k2Dzw
h0cP436weU4Ez5yDid6oRvrd5s65AZC2ff8/ct94CmfGkt6FKE1PlbXLbCVY
TZaLsNu/FNJdcJIL0mrJy5HSCISryi/12PxpaWlzCGM+8nlQZXatMhDM400R
m3ddEA6nuWuioOm8QQ7DIDi7J2oJsWet1AvWuAIkPsj47GwRBGMlT5eyuckx
viGHHhtw21vwyag9EF6YnaCx+eiDWOWMD66QFOedlGoeCKeYMvKkPWcDpFue
LYGCJ2kmk7orIepsJblvmcf0ak+Lhy8UFKyTX/BuBagMvTnK5ut3LFGVTgmA
gI93hhPE/cFisbEcm2/juWwqdScYhJ2qhkxlfUHITy6NPU55vTiudmBdGBzb
fltBrtMHmhML+Nh8A5U3XRKyGiy6QkPdxJeAiUL0Hvb4VVrbEbXt/RpoKWv/
JGTqCacECv6wx6lWz9uDFj/WQozwunOtS1zAMuL2HjavrU27yJUZAQEL3adD
TRzA82GDNptve5Gx7dRoBJhvc3hYt9sSgosD+NlcQ+ztBXp1BMiUB32pSNUH
nfSdZmx+dccPfi3pCDgn6n9y3jwFGNwllcvm2Ue3d30/OjMODT+pcsjlgEuP
/W+x2ynmmn3oWmAwfOEbDaWCjXGN2+R/rbf//+9vL6qnUZS6MPoZ/C7gyugG
3PjZkPDcnSVMqlsZSaz7MF/r6xV8vPEw0SuHXLkp+ogOqjwdHTNm9BwLNbwl
9SbmnlMZAjsTdP5y5tIyt0rML/aanHPwHcgepLdaoNqndxgjFi1YX9uH1O06
YenRSVnMR13bTm9bkf8bG80NJPckG+ovqs28aI9+BWpUlLwexfhP3Sc2/2Pa
+f3sAUd0ND5UrmAnhd3eNpJ73atu8FWiO84oL3DBLf77POAdcZrc+6e+JKgo
550rupbC4O5cKwqcNw2SZ+e57Tfaat1RQ8m7ER0BaXD3Eohlc403A4mi7z3R
ISyr3bJDEaYTM0l9FqNKvo0Dlxah1+cuxM0/oA6KV0IXkfc6J75Q1WUxijlr
N8L1WRsaBH+YkvMYfCZ6OSVLUF4Ab9OdFwbw4vEbWbJeJ3WTl5peijyl9S95
KplCWlkqxdarVVJndoly+KAKbRvnHnULuIKUf7N5LC/PetEQH5QYt4ffaaM1
2Eh8IfWVPqlzr0q74IOKy0KSGb0LQNcnpJTN0987+Ile80HvVzuJ/b3mAI1q
hs/YPIKH5hO9zwftPy3xLuyFI/AYX3nA5nbxG3zKtHzQhc5TKY/ynSFDa+gW
+U7zJdw/s8AbRany/NHLdYVXeY5Eh5GX8ItQWIIKFj5yG7jrDrUJO26y+Qqt
6Tr8xQut1FohHHTeExKMEbkvMQXtGhFJWIj0uQev26xZBIfHrXJI3YflTNnq
V+5I7GDKIK/YYnCQeVLE5sMxP5DqeRdkkCgmwnFuCZjRP5F6ECG3pmtbBxGq
nuZqXde0FIIUttWS9khK6cKYDfLl3vx70XdvKP7o38rmfEJ6//CheUjKK7vv
xCIfSPMV/UXeV1XGhh4ji2Qc+9Y9iPWBdZ68/WzuZvBoJ7VZDMrX5zfwH/YB
X75zhKvGZ3NQRsZwiGvnYyl/HxiwGSX7O6/8f0upxiyAFZQcVu/3hsnGi2T8
Wmro6hnt4wz3atx7dCqXQnDIOKlP4Zf2dOTMpAc8dDl7YMxzCRwQ777M5ibZ
pYkZt5bA41sxH39FekH45sINbL6uqZ/Fk7EM6vJ8TyUaLoTPp5EhqYO8Oe1u
6wo/6JxzMn1/ljucn9TsYMf11ycs9HhwBbB0foqGt7rAs1qRs2yemvvtw5Kw
QNhW2fV3W68j3OAosCR1aoyVPIRTgsH86fonBcV24PQqvImtkzoOk28S6CGw
9FvJroXXrGD7ovuxbC4mHrpwlXAYqFfMowbXmYByUJARm9sub/+nLhEOH+fU
XkjdqwWXQkPIvCBsNW6/vzgcLutfSdHiloEw2qYmNnf+fpDJzx8OCr8ZpXNG
WdhzvRODzd32fTv0d2UwpOZYzHc6aoRP/FCR+l/nGb6+9qSoTCFkrPPpwKfp
jXhMx2L2XiwnMRbVooRC/J5VTsfP6NVDTPRqO//EFP2NNrrfeqtp3s5CfLr3
MqnnVXl7coQua4yS65Z1+3yowNG978i+oYOw2yjdyBxFe5y0veL6Db+LXUnm
ieo5nX/asBWq+S6bMXWsB9ts2EjyLskV137QbRagNzt+yUncH8YRQkbknLzC
8lW1bUn2SOnmU9rIKwbWWfOV6NiLDtvXVDFCi9omXwdnccHqtU9Inbi2uDeN
EOyEci1XbvYpEoDfIZP5bJ5z6HeFd4kzsqDHVGy/JA7qY3zkfngZha2vohku
yPdqL+NdkgwoDJqS/Ur/s7lPw2Tc0D6xlKX2dkrgeKEwic1tipzuR/O6oyd3
rK08l6nDyrPTh9kcWyRnhH1yR9xRP7o+tmrB8VpHcq7sziedi/TVHij+csqX
P6AH6YtKtxL7FG1Lyiz1QCknLlav6TcC0+4Sck/F7rM1x1QHPZBtwJxIpVxT
qN63Ioyci0s+m3C20wP9uvLySTW3BejJPyLfiZ9ZWHskOtMDMdYY31obZQVv
f38gdcHSA58dbVP2QDW1oUnHu2zAurpgBZsLOMmfzAxzR+1dzbH3wm2hrTyU
/P7Ur/pz1Bo3NOdOzPmAJnv49+d+IJvHH0u+HKbnivJX/roQT0PwJHZ9CBkv
8v7dCstxRuJBXuHovSNY24eRPJbr94kcmHBEvM3bhFu/OsHQlkUb2HwwszxG
lY+GSk9HzJ9ocoYOh++kHlaxo9R5dG8BEjZVbn9X6ALTB+6RfZaYJpcHqM4S
TZu0sZbudoVNu5zJ+KJdkHUUKZugj3/2+XsKukElt348m7Pc7Z4hrIneOsgc
+77LDQR31JB8O+pK3lkqUAT57CqIlX3sBg/UL50g67fqT/Ioy7mgILg4UTTf
DeyVvxCurRf3HHVoQNyhzPyRQ26wOayOPOe3zseXbYmm0HBe6ViotBv8YHwi
dQQCTHemqf60gc/J8xjLo12hQXKI1F16dV8ism0vAo+FnFcun3EBiN1H7BMa
9eGcaKYL3O9vz5Pc5QzLgzPIOCi/P33t2QseEP9T0jVAwwmKjuaSeiirhpp1
2855AW/18LitLQJjR2ly73dyuN/X/gveMLHq92+PejvoZIQ0ku/XzmnY3y1b
BhyOW9eYqM+HubaxpI7S68QqauylL6y6RddNtrSEBfNLwkldpMC3ha13/KGi
4R3trY4p7H/RqUDqmTKGI3j2BwCv//zVh4z0IFy5sJqtJyLR4/xRxoEgZ2nx
UdxfDULC/h5m8+Od1o9aHgfBpzWRd7yCJWD/tifWbJ4R4xtS2RQMXfEnHiw+
OIXHSy9NsHVP8KHgYYcZveLmmtvJrj+4dL/r/9QrP7PlFKUqhE5yyJe4PNiC
R2m2RK/yngbP6JUism47IZc+lY6zNowTvdL7kM+g39ZCN75mRF5QL8Cb360g
9VLDTzmNIVVD5Mt8HbhkqhyL9B4i6/Am3yfGMu+aIqFjPmkq3M1YecddMk+0
/uo9lHnRAt0S9Fzg7dSF3yhzkPV5nQ6rXlU/awTlx9N7zg5ijvJ3pI7zQeWW
9rCW+WibynOusgUT2MLOppnN7amkL5nGdsheQjBB5xsHmOw/85nNl6C7VeDo
gPbkO/Z6nOeBigFuUhfsb+aptyCFkKXc9ox8JAzqGeWkPubeytCWzGWOKGjx
1eLrOyVgBZ8cqYN52/rTl+gxRzTv3PXQp69kQDBekNTBlEqpqBfd44Sk+w3q
Lx9WhJWuteSenEXf4z5TNU4opiCMK2SFGnRb7SP3UXRm8lWH8TijPtbvDeuV
NEHhkTipKxptcaKSLuWMDt5bw1stqANF449JfVU9A+5KUaYTCpQ4HVWmpA/Z
nZ6kPun6qAOVmSVOSO5K6tIOdyNovfaNzItdPH9WoRVOqHDju6k5h00gOjOQ
/P77c/3P8MERKSb6fHQMNwOT5nzyfKxjUJ8p7YhGnxwsKWeag73RR5KXjh29
mgN7aOgz8/ZCn/OWMFR1huzb3omqKER77VGihx59uaw1MH2bSP3Tzua0V20m
tmhb1IcFTidsgJaVQOqfih94Wt6WYYMsH9pu52mfD5k3txO7Wde31aq+s0Rb
5+krn5azhYPv95F9ljuRld+ou2YoM8K8dZ6BHdxbGknWAeLvv/2AjhshMY8U
73Vi9jA9T4T0l/aJyS/goI0EeFYm1L6zhzveVqReSWrw1RqqWwHZCT3+1ujq
ACHnbpB10YaA49+pu9xozUFO5aQTDmApI0LqXCe7nKuivjGxt5WO6dazDnCI
w4TwVe7PaqkiebBSujlvj68D/O28T54zffdDA5zTgTP5LiHVn+1hv6oGqb/M
ze3dqhpqChJ+3nRdfnuoSlQn7be47F0Z9sgKskLtleQnbKHF0ugZ+T1n5TOw
tAPJ1KzvzdcWQGxfEbF/zY2Ej9X7HWGJoYy+GtMG/kToXCL5wIOP+dF7XUDY
/vf3LilrsFV6RfTZY+xmStsFdzjxfa/Tqz8WwGyqJN+JLCvfvCmnYiHY7vSq
1DxmBh/KtpM6kvSqPrMcrSWw4aZIFqvVGBbfKFJm8yahizvDfHxAMSuHuzBc
Dwqfne9j69UlxSRnb43lcMOyHY/la0DD3Lw8kg933uWMEfSDijnzlroKK8Al
3TObSR2ECdOcpZIr4LHm3Taf7SKw0P2dLJtfHSpFZ7xWwq7Rn0HrjcbxxOpr
eWxd2s6x8HBIQDB0fP+SlTa1iPbXd9f/rEd/Ty+Yom4IotUNiy7tStqKlys6
Ef4yNoNF9Sqg5UF/rz3ZcRm/2mhI6tFbnvZh0q9pomUnnFXMHj3FeS3M2frO
N0UmKH99VBhXLG43UIYdKsfJOvzz06whuDIPqVVfd36e24j144LI+dLxI1r/
0DMztDXnnFPPUAe2tlndx+bI9+Yg1WaB1IKK7D5I/cVOJ5zJ/NEmI+dPWKUV
erOJ4ZczMDNPNDch+Vi64MXutn02SNI1UHLucyY+GR1E6pXHBJ5uR7/mo0qn
Bkb2ICdsWveD5Gk28xu/g6wtSjHS2zdqzgcyHj/q2dyg7vEXOq8dioxq+R6q
KgJBDTuJ7j13tG1AxXbIt4jF3e4rATT+W6RueF9mem2YqT3iBIWFdT+kQXZP
DMn3Kqx6azI32iNVWjLPokfyELVwguikxrAW4ZFy0atP5yrDLWUFwhmj3jVt
JvZoXDA/4dmAGtxJ+E7iRfhswGdVsEM/Jc+k5cpoQvxxU/L7UQe9ujA5O3TG
KUKvzEMb5IwESB35I4IPGpC9LdpjFCL1OVYXKm+tIu1BNU+/oHkLkBxPwoOH
j/WBM1OMtP+ervH3sH4bNK7E3b2v0RCceeVJPbXUk31tiG6N7t+++Higzxiq
/4WRdcUWhcaf8MMSNX8OjjvSZwIFTg3Ebpuy3/ZkyliggfzSStduUzh9L5zc
y/EmKuuPqqoZwga3zgi8NQPZuyNkfEmJe94KE8YoYqJR+vIpc6gcjCH7L/eX
P+uih+mjbTXiw4kLLGDeuiZS5/1kmHkfFaWFFstLO0ZUWMCPQiYZv5ysvTrp
wSqobsxN97qDJRyLriD+wJTxGaDPk0QPbzvJnUiyhDf++p0kfrW1e6j1LJpr
1CuTnOeWcLF3hHCLC0/6qaOjuKz/htvxEksIeTCXnMNZGS0xSPeTgH15jxe/
S7UEmeNm5PeH/bmHQEUNUPrOtC1ulhBX7zT7f2M/9cB2XdjE4/al+b0FyB0b
J+2f85DjG93QBCiM1LG8BRzZzk2+U8teHd4J9y2A1+ihqZCDOTSfFKwjeeYn
+yY0ZQOHQrwzr5qaQUHIZeIPJie83maetYfzFS4Rkr9N4ImhIqkLzJebVj9Q
6AifBHyOPJIwBqGEXjI+8l6Z/xr5u0Dooro1PR36kJYpQ3TPgSfjdpuuO3DL
x3F/D9OBY6G7D7K5+XenOGS3EBR3BZzVTNaA2h87g0k+sPC+W/WNxWAvVNtg
o6AM1zSwCZsPRQbsG7efmVf36T82/iQF11g3xti69JVH0Xb9weWw6bJyR6Qa
Pzw1jb9P6i3O069JDPCHxxwJ9XSpUdz3dMt8cu/K5m2HK1cEA6fn5NwmV1vc
IZ38X3pVVyJXu+nSgv+st8e2zKSnZoKo3MEvJiRyHT6u4EH4X64vLEpAAQnd
DlqSX5GGl78OJHq1LLaWSc/WQNZBh3IK5fLx7dtJ5Dsd/XV7J6kXukjGxqYx
4t077OpkTta1NnCyRunICK1Qnz6/x60ey6cmkvNapxPqxilFU8R5x8mY9+kP
LLKzlHw3Pf6mf5SqMUOXdvb8rXf/jUNtVYmOneYcG6LcLRCKP8cX1j+Ebwg9
IfnYmt3qA237LdGyIgnX/Z4T+K1bFvG3PoGzfWE7rVB5xZrmExkUfr6eIn7l
khTWq2pujYb51Q8/GuGC+Ty1xP9FVO//yiyyRrt0o+e4nuSDT+c0yPl8ro6Y
HhCyQd7fzhrZHxMGT98hoofDjdXdaJ4NSjCmy8pFi4PSeVvCecUfd4OaDRr+
G2zUgqQg9+Q4iceLfEI9VJc1Ct2osrnYRBbOTaqR3xv8bexB8dbIfIi1/6el
AkDHHcJziub8hjGrmXlf+dMvHspwXvQQ8f9A8f294GaF+A9HRDuaqgF9ZyZp
5zVjoz7Ybol4NOI23ChWh71m4+S9RoUE+8P2W6DDjU8adyNNQGV0Yod29seI
EeaoUa9fL69IC/bWapN4vPZhcoiaZ4YyHmeG/9DSgcM6HcSeN5mtPVShCeLI
/MzXe1AXVG3ukXHk2Mvbf+jNRmi1ndXbpzPzXLGyLb/JuECzHkCl+mji+dGA
9G596CjWJusAx3ckDMMuHZS03h7f7TeAqoRy0r+bBxL+UYMaSPPwLS3lekPo
NvIieXhowtZBaqsKWr9tm7dfshFUVWQSPyk6seAf/YIMiqT/W1+pZwzUxiKy
Xqo+rj5CHRRCNXFKVP85Y8jZfJqMjxcP7Bmj6v7RAs4sCukrNwb7l9xkvWLF
yfxh6lg/XvxRXm9LlTGcKxUlnNr3coQyF4TDF4IcX1w1hugjyeQ5wxyBo/R/
svDrF3NlvrkxtH6PJv/Xq2D7GMSoQ9pgrXFUkhFMH48j7U/jVx2ivHRh0UKH
ruz7hvBb4Ryxg8+7xb8hwRiuf7EO2JdoAElOEcSeghVf+pGcOXwQV5iK1dAH
VY8HpF5nYMqCbtU8K2joVvBVPqALOycnif7rPIhsbktfAD2Wh1YEndeGygOv
yflG6kDge9TpAOZ+EX841mpCeZwnyUsHgv/UU75OsNamo81nVA2mvLeTeUHg
oTUQxuUKrWE3Yz2SlGALfw7Rt+1SqhmUogesdtM3hjcysMg8htQxt/revgF9
XAQcP3+vUr8uBss3x3mx+fmwcuGcSG8Y5+TZmPWQGxL6NfjZ/FUN0yigezlE
P361zMJhCOt3FKWT/anxrMPCK/5vfzBOtuS/9GrZ9d+BV0bn/0evXMw3UVSp
AMq0Mu/nbYzEe7oXE54mLTBN2cqjN5rpdKsdF/HVTUeIXgWXOLDo1epIe5PB
Nb6deXiBmCA559C86NwU5auDlG317yafKsXOO6zIupZrstU43dIAZRuWHbjw
+zNW6HMhedfor/0j9P3GqEE4MttfqQWrvdlA/ETApHEcyZui43d9318r7MJ3
Jt8R/6zcyTtGtzBDxe6FUW4H+nFl5M6/bM6pHTUaJmaOeiV6n/GvGcXtqoeJ
PzQ4Ko1kPjNHOrV2y13RFC61GyVx9DlfdRh0LJDn719YZC0HWO2tIbq3t/Dg
UNt6C7RUbm+gwoyOHTeQJDzinNlQZpwF+hd6MTf6HS+sk35C/Ion1GaobasF
Ek/9pXa4RhC8c+8QLro0aajNygJdaPm64DOXGMR+7yf86x6VYdRqjnyk7nfn
zJOAux67yfPf3Po5nLneHOXIX0vbFyEFiaGWpJ27I2pHMuvMkOjjp/aQIQP5
eZq9xB/Mvo2G6Zih0K4Th+82ycHosCV53wKzsX8o3BQJpkqvKOVThDNr1xAd
KFhn3k/NNUGTKyIoeWNluDtwk9ht/dntg0jLGIWuWrvVnqYKLwd6SXyFeNwe
pssYovwOJWW/q2pg7beAxGNSUskovUMPrcB5Tu9OqsNLuQQSvxFuD8fQaR3k
bMH3pXq9BoT4lpJ+TN2+fQLEtVDrkZDq9WaasGz9CBmnFP/yT8E2daTPPfde
cJcmTPeLEn/YKtw9RvdTRt8eVsTZHdaCyVFxsu/sNr1ikkqURe3rQ+QcObUh
mzlI+HP73Qxqszjy8bqsOrJOGzzd7pHx0aaFfbxjLtoIJ1cnP9IG10ET4od+
L4WYVN0gzYfvTpFunTYs4jxIOFdc4hS1vgcfQtMvNjdqQ/yfI4S3Pumaoka5
4f0t91GpZ9rgHjLrz38vSDOoAxIwIGL0Z3zrzHO2HJwdl00qxulMBbCwE/rj
OK0FSzpcSTuXCuyZpAtrgP/NH2M1EVqASzeQdZLFrA//YFgHrtYklUhkasLb
hNfEntqZFoN0eyNQNxntPputARwn5Ui/fByoGqHmmsHQnMmepSfUwUdbmvhJ
UafzX9X5ljDW2d7z3koNrn0NIOPREV+Tn6oVNtBf4ZfHDFMGNxFE9C375bE6
1GwHYtv3feMfkIe9+d0kD68RCm+JdnOElMv5x+bLycDmzB6yn6Weol1eLeoC
cY9NVu9uFQdlWi+pn56wd+2dgXh30Hvygm/kkgBckc84RPKEALdIEPAChslp
j94RDqgZ6PZk8xP0wI0BnT5gc1ns/Z/lf/G+4SsdbL1yd+44bOwfDOH9XpKX
Z3Rp4d8//7V+ZSLy6Ej5yvn/Od/+UGA7RQUKoIMbx3rt69ZhsXXLiV65t1pO
UwflULXGxR3zg1JwqNo9oleqJ1JYdCF1dN5w4XLt5BzMWrib6FXB0o0MSl4b
sQ4wXHJNX+MLVwTIPPGUQesEtU0P6URd0X1jVo3tjt4n/TiYZDJGn2eIVM5c
M1nC34y3mOwg/bj5580ReuBMHIVNbunc34HrxY4S/x+3ihyic5kgvr8fYrMe
/caBS/tJHHnOLx9HKqboS2FIvvbkIN7glkf0rc1aaVz1hCl6t1xcY/j2P3y0
tYL0+6aAJ2Oq70xR95H4kdGPU/hVJJodB68eGwv7Yoo8L/j/va7PAZZHOAln
3UsZC/tgipb9Sb9aKM8Fzx0ECB/zqx/LTDNFvVqiqz0NecDezYfwZ97245mL
TNFbjgPPRv35wb/3w+y5jjMnB+C9CVoYPf5sd7IQGPZsIe1s3fthEH2ahzC2
1y39Igpxm0zJe4mXaQ+je8bI98CQRmeSOJRlCRN/npuWMoJCjdChE++ibQwl
oeAUi/C773n+UcMGqLbeZDF+JQUn3CeI3QT7do7Ben2k8MJ0M8ciGQiLnSS6
kb+/dhxAF7Uqp+QPl8pCnyaD2L+jU3GSYmqjMoVbGW0G8sB1f4LoSe6yRVOg
oYU21T37nbZfAS5K/iX9ODAQwgAjDXTydmnR+zxFWFnUROLX8Y0PEzTUkGdR
RuiFCiWwX5tH4p0v1XuKPqyIbCweee1+rwwta2KJnywPf8GgH5BFDUvqBrZl
qECXiAnJ27tGB5n0cgmUbDzi479MFbpoHwm3+dfNoMoFUabdo+Fn31Th6LQH
8UNBnwwWdWAOGrOSo72cmbdd1s4ivO16IpOCXlrCVlsf6QVqYCL1hfBVISks
qrADD9clDRnZzczzir4Tfq6omEU954Ab0j34ppYa2OXeJXwr3xkGFSsMU3tS
1jO6VAEUjAnP/GbOpJ+VhrZL90/99lKFg9nBpJ2bWGWT9C4lMLm9wJW+RwUu
zlEm77tk1RwGbNaAxK6NId4RyuBTuZzYbZBfbAK90oE1NJeq9WJK8GqqgfTL
Ka4dI+ikIYQecb7gvVcBchI3kn6/jRXGVLebgmyaqHH6JTkIuveSjFPWfqsH
0T4LKLKcHu6OkoFjZv7dJN94Z9VDn7CGm2GaJRv+ScJPixiSz99Zr/2FkrcD
uEgLYxiIw6nAIbI+8NvCvC1H3BHse6efvlUSAlbGQ7Iut8SrqqzNzQUyUgUf
CqC5oJX85Cabv9e+cCnstgcws2Lj2u8z8MR9XlKXofyYm0bYoaWQNZb9QCDv
FzauCCf75lG8IvFJfv+XXwXIikiT+nokn9pJUyw/brb2rQ3t1/+bX/kO7KEo
Bj9a1Fxoxh0QjicsAgi/UbFymmqQRcf8Tl57fes87m4qI3o1Bs0s+lo1tNWX
b9eVB9k4+HIl6a/c9eJMSkALaXx2CXasfImvdD8n/WIQKT2FxnXQx9uCe6cL
PuJ1qa9Jv+iPq07QnfVRqeNCvaeoAW/k4iH+r+sdOkbNMUTiAjrnFUXa8OlT
qaS/FqwaGKXcjdAdma8PrVd24Z4d+0ncaXj9GKFrGqMnmp9sa6f+4B8JOSRO
P3LOH6FuGiOaVr+IWt4Q/iJnQbi+zOgwqjFG90Qfxr19/g+LaVKk33kPcY2g
F8Zoq1L15wU8U3iwYS75vTx/yAjaZIwUfPKGy49PY5VXjoQn+g6NUF1G6IfD
jo330udAguAdwj/tfjZKNzdCKYdKixM4uIG6aULa6bb08j8IMET/nl+wztvC
A+ff1xFeqH52DK0yQItCVxvHfOODKJGT5H1fVJ4dR076qIXz7jwBN0Go+rqU
6EZ61PkJJKiH0vTsV6RmCYN4uyKxGyicnkRYB33TebevYkQUrrz+Q3jAvtgp
CNRGofw1iwZlxYFjSwmx/3BgIAP1aKIz/65cTdCTgPBnR4memEvoMlGIBgpT
z7srYiAJwuBF+pHxspVJvVVDZTxBNHsFKTgyl5fE48uLvAy6gQryWnPnZOqE
FPDbFs/e43FbjUl/roBGolV5B19JA/qwiviJQZ44i1KRRRu+dvIG75CBo2eH
CP+38SuLWiuJ+tzNrZgCsqDDu5vs7+y5wcGihkTQ/pKlpsYnZUFpfzfhqyn+
aeorD6qe6n/F2zfze20n4p97B0tZFDBpslpHGoxM5eC42+y8IFVz7TTF203b
m2XdZ+MvB1m+s+PvpNVbFpXTim8vyrlZFCAHG15nE67e/INFRTOwyEhQz3Ib
Odh2LJHwzf3fWZQHHxxO8BWRGZn5vzwms7/fpDxNvRWHPcFxIc+PykLUUDpp
Z9BINZNqlgVN7wfHhvtl4LZ+EXnfQo3CKWqfCkh5qoXtMJKBg/E7id1W3XjE
gDYN4DymX9BlJw0ilg9Jv7xyYk6gvzoQbR5qdk9OClrSrEj/in/PHqXHGUJ1
N54j8loCoi/UED8MfNs8hkJMYYCbc8DUTBxuVimScfN+itIQtdUCpObfNnap
EIHk4v0k/588va4nTNEG8ozL7GLyBeD7j36iY+lB8xrRIzswL235tFSKB+5L
3SHzzQDToq+qNY4wN97Z8X4PB9g4CxeR972ZUphDuYLPlZvfj28cwy5dt84T
HXu4OsC7yQuEx2+LDZzpxFFRZjQ2v/RxQfxf3//Tq0xHU+n/tT+YtCSWom7x
oz5uZsbu0khccCuY6NVqkT3TlJssYrnGD/niJMyxsoP0i/A1NSZ1VxVtmzNx
9HjsXazRLE36Jc/jApPS1kS8L2DrFasiXGTmRuxfmcWcor/QRl+aXM6Ubn6P
uZdlEPuneR+epOfqos+ZFrm/sj/jKW5bEkdjm50nQEkflVvbe05eb8ZufRqk
X+46+YxTMgboRNb7q2r72nF8/EoSv6lzC8bo2QYoaefRo73QjV3ffyXx3mmz
aQwGDNDxPcFCpqf7sMDYVcLdWteNUX8NkKhbWDFr3RBOcLhEuB2+OUY9NkDY
Ni3rbeEo/qL8jnDHz8LjCBkg1bS6K7JGE/jNF1nyfzuSM8bhlv6MDj0UcH7B
wAdDTxJOOXlM0Lv0UEnFyb7zKyn8B0mS9qsbURPAp4dUpbfvX3xwDuwce0j4
1AhM0kV10bmgNI/UJVywNM+X2EF4a9wUxamDVrKGgo5LzwW/ymnCVfNtGdCq
hYaLr2/+3sAD6WtziD1XBPcxULYmcq+V61p/nA9eioUSnfnLf45JbdZACf6R
vdN6AmC4c1ZnzvzUZYGCOiqwW/PL7ZkgJFU/IpwuFDaTP6gi+omHRaKGwvDu
oxeJr82whEk9VkILDF7drjsqAgcDfhCep6LCor+VR3uEDY73vxOFidubiT8Y
3ahiUW9lUOW3I07+O8QgV+QP4X3lq6epB5Jo9e9IrztDYtApEUr8alVQ8zS1
Wwx1OoYZnAkTBzGrUsKXHNw2TbnO5P9exdF+ReIwsUKe3Hd0eDcnRW3gQsul
u9DVaXF4MyeU8NvHeqaptRO0Ok55RT5TCdjAe47wK1tsKSqtg2a4+0j52CIJ
2DaRTbjXm78zf5uxqfxyybLFEjC19zHhVWP/pimvcVz8TqSb20oCtqRcIHxI
8s80dZEbciwKnHK5JMD0xDLCv4lxTlO6IuC19hfH1YIZ3fo5Gy8dXrSZ9kuB
7oPYc1u8xOGtgC3h9yKnmNSwPBzq3SB16JUYpHC6E/ss3baTBYpqUBFecmqx
pBiM3Bsg/cKr95oBGZqQWt5oGZ4gAgdWS5L+PZY7PYEu68Lo8Cexqpm8fafj
IeJXvBrbRsHaCCZ8fgxVLxGAwoEOomN9DmvGVJtM4UlA9pP5ubzw1qCYrA8o
a8FApq4lBKFV3E7Z3FD9yozkYyoimT8zV8yHU5EqAi9t50CGVC7ZLyiufFqR
2eEAnpnld6yzp7AAfc4HNu/Vbfk4MOgMe980L7vTP4Sfl9mS/Wj6r2UHRJ8u
BFu7feVbv//AZhqfyTmc1382xjvM6JVcQQq0W9vQEuv8pf+/61etSuVCdTnW
/1m/WldKp6iN/Ijy2lJdFrwKcx8PJVyy8Mw09V4GPctavEww9STOMJ0kdr6h
G8Oknqqgo4c+mJRfvIUFRJYROw/uGWFSGzXQkhXvqkU+PMU7L+YTO3em3GXA
cy3UXYcuNYW8wcEqi4idn8fRp+ibdJD58HfrI7c/4ZsLtUncCdulTFKXdNHz
H7dkzG7V45WDi0iclrgPTaBAvZm8PvIa9+A3LHysiPRL1sLUCTrWQ0OfP+Wc
E+vAt6s3Et5tFjtBfdFD2kEWi8NPd+NTUcsJd6BfmaCe6KEakQOvk1b9waVy
Wwgv3N49Qc08/0b//O+u1oPYIiWb8EuHl0+iRl2UYuKWn1czjNOk+El7Xv6u
nwQTXcT3fHFPU+w/3Po4lvAGncgptEUHmd6rPBNmMoEdl3KQ9xJJYkyh89oo
3Kqh0Kx9CivYnyH8IPdFBj1jJi+dpmvRzrPw51ItYh/33fpM+lVN5Gy/ouCF
PAdUvi8h/H5IARNOa6DDzR8r5VbPgQFFP2LneD9bFopWRz0PzsTQMjnh/o7f
hANPPotyV0Nu9dZhvlVckKw6+926czqNSTdUQT6b4+/s+ssN057cpB/d4llM
6rki0ipurOpjzAWVG4mE39x9m0U3lkcGcgWKY+M8sNiMk/hDuo3FNJUqgz69
iqoLa+WFFW47CVf8cH+a3i+JHj+bezAjmw8yLnwl/OUaAYpuIY6OhPyrj1nN
D9ySNiTexS7M6AQIIWvPPIfH0/ygs/U44Va2WhTVy4MUJX9e+0kXgJMalYT/
nNxPUR0cqKdzoaxVpwCo9c3eg0T7s4Oi7P7RrNWronT1BSEiYvb8s7/kdYpS
/EGrqRt3mvAWBJVds/vgF/gOUNTZRhx2Rin0zzJB2LvJhfCtXjPP9x7F52U5
kbqZINSvMib8j+dWihqaA32G4wYbewWgJny2nlTDwvZpapkAtLZIdD6JFQCD
zbcI/509o3vPxOHfVnrK1w5+ePxJhXCWhuY0lSsDfy+Ht3ko8kPHkTBin1v2
r5n0+UrwcIton5MGHyxmzMbXzbCZ/l2gDt3FD0NMx3jgWHIz6d8+yeUM6oMW
7Hqdl4XPzAWe4griV4ZHVCdgUA+6dE5o5vRygfyLTjKeFhTmDEObMaxc2fxX
ioMThAxfkvlFiMTR0cxJM6io3XX5XgqFZTlm9wUOrTv8p63ZCiwu7VxtFj+F
RS4wyfp/upR1c5ioHWTLn9pY92gUP/BVJ/vInfOUmqqDneDOu/LhF3p9uHcy
4ynRK8vG5AFOT/D+EquwZ+wrvtvbHM3mcQLp8UnLg2HE7DiDXR9nX+SB/9Kr
e1szGW/m/Z9erb1+hKJ0+ZGI+XTRzuJgHPVxNeH6PDemqQgZtGl/AVbcmYDx
AYHZca3pOZMaUkZFW8KfqoZm4ggXOrEnKNmzqFp1JHbXIObn6VyMVPlJXMCY
BpPq00R31fRfyTNL8LfbFSTujpqbM6gt2mhif3KsWvB7vMWpjth5K3Mmr5jR
MfGuY4Jz59bguBItwt9LCk0hTl0UWS8kZ3CqAVedf070IfxG0yTloosObM6W
OvXuGz5Uf4zwffObJ+mOMzrzvPn6mH07XoePE26uPZNfcOkim/QKu1MNnTgh
4AnhN//5T6F0HcSR782IPPsL75BkzK7frn45Bfw6KIf5sXDx1j6s92AVac/Q
tAmDHq6N0tePbNI2HMRvSmf95JrcYwb9shZ6XnmbVqk5jBkis/q8Y/M8Jvsc
Izap6LVVHcXaidWEb1mYzaTqNZCNPLfRa8Ex/FoggPjhcztNFr1FHR1Lz//7
bmQcC+9vI7zpUDKL+qqGvsTaXNOtmMQ5rEhiZ9Vj/xj0a6ooJOJHgG8KA2sO
/iK8rjiHSd+tjIyd2vMiFrLw07PrSH8pvvdj0R0VEUz+G6R+TOOskhbC5053
siiWHOrvjTvQYsoBJV+XzOYJN8On6Tky6GM3/xC9gwMuyRYQfnZd+TTdWwr5
O+03Mz4+B57ekiF+sqFdhaK6xZGzeG5+sjwnFKdvJTxXt2yaahZBwocW2H9P
54So+BeEJ6qbUVQZP7JPs/PZys8Fi+0ownl+zoynp7hR3YN9nqfWckHCvvnE
P/udoijKY5p2tNr409ADLrBlRhJewSikKK4RmkVG3eeab1wgVp04e25H4SZF
mbTQYOPGQL0xLtgicplwrRyY0aV6vK335Z6LEzPPf5RO+EmPkpm4GMbqP9am
TrZxwfes44TrfX9MUZIcwOXz/JxCDhfMi58d3+ds9aOoZF7IlePZ9i6cC7S0
ZAnPDng0TRWLQqAGbd+NUU6wj3lA3ktK5s00FSIFA7JdITbrOUEjXojwB7kz
eWWIPPzZVGamVTgH+ITmETu/fiPDpHOpQmPArtUL2zlA/s8Y6d/U3TeY1BsN
kFHbXfLjA4WvNTsSP4k76TDFPif2YXG6mkYUC2+TaCD+XPFLaQxUDKGsSsjz
Su4UfrDPn8wjHhoFjIetMQUm13iU2pFxzLVChqyvbvrnPqjKbQmnKnq+La8b
wc4qLSTvUhs43545Nh8iUzw8LhsP4FiZaXJeKFiJ0Rpt4AicXcsDzDd24caU
W2S9Ky/7ZFbOU3d4JKwyR6++Htu0KZBztnM+3ozfOqNXHko6Y6/m6dDkbOP/
53ywym2mPyf5UI/ktsWaal54TCCC2Nlyama8k5VBb067LUhqPIiPt8gSe25p
+MWkVimjp9FH3yv/TMVGH28QP+c03z5jZ3W07ZjKlOrFe/hw7EJiT/7efUxq
uSaSnRq3+Wf3DJuYGhB77sqZietHWmiv4FzTju2vsPCeZSR++S2VGdQpbdTz
hhVrtqgM663DRAdkisum6Dw66PynBnXv5dVY7sImwi/xZE9RxjroL3VwsEC+
Hvc9WEp4+7/iKUpGB30rZRXd+fYF174Mmc1zmmby64/aqMAh5u9YfwtWenuO
cIvjNAZaoY28XX4tTLrcjt8otBJ+4eM1BvVaC1Hx+FKXVyfW5aaRdtLv8jGR
uBaaf8B3slKwB7d0PyRcayiGibw00Ym1k2fEK3/j1xe0yPtuGe9m0ndpIE79
gW6zxD68+e91wi2lfVlwRh3p0QysT84fwLdyVYndnsUXsqgbauiOccym632D
eC79CuEpmYZMapkq0pbud60wG8ZygTLE/u3365n0lcpontp74XUbR3C4xynC
cc1WFuWliC7/2B+mkjKKP25kEn7Ff5RFWcqj74mB11Jy/uF06/UkLr6obZym
i8uikq4DeoWFYzjoUgXheW8/TlN9UqjNML987/1xHKSiS/whNEeJohdLoBSt
b37uJydwVvoBwkV5wyg6XQwJ7o8ZuOo9iQ3elxE+v1KXotYIodHrkgIL50xh
R0+hWR0wjaGop7xo44FtaSoXp/AOv9lzNXnncinqOyfK8Qy/3iXOwPW0fYRf
53pEUZ8ZtFsV3MvMdjBw96nrhP/b+o2idg/RRHf3Nk/kM/DJqZLZ9diwBorK
/EpLMuHZlvaFgR+8/US4RmcHReXU4sSo6azhZga+qltFuODTFop6MYhLHo90
7ihh4NxNmPANYjO6d4qFR87WBk7uZeDvLrP6lut4nqJy54JP6fUqAxEGFspc
RbjtNSmKchAGedEHd+7um8LOm2bv71Uvk6cokIB/1cyYoueTeINMDOEv6/ym
qTBZoA6EOD4un8B8VoXE/liDa8YflEBULeL9+7vj2Nn0PunHLXlrWfQV6oC3
Hrxs7TWG2xPnze4LXNzPoHdqQbH5eI9z7igeQbPzR+Nu9Qlkog9/017e2V41
jO2+cJB5xJ7f4sMofh4ER7qaXrk6iEuvrCV511N94xHVAnPw5e/V7dbuw/BS
nOxTfzH82B220wY+0UL5B2278VHfy2S9S2st74ewyzR4fTDK8fHHVuy0Loac
45VWLsiBl24w1ZZ599XKKiyWXEe+I7i//nU8a1kwfDBM37Mk34rGqZH+X/lV
/vsPxUoOVv/JryyXzYwbDXxoLj/j19rTi7B7xew4NZ1aNE19k0Z7iwY3NdnG
4CoDDWLPvTsFWNSgEgripjd2mp/B9hHFxG6Cnsksuqg60j3nXOotdx1blewk
dmsae8Kk/9JAoTcuJE98zMbebRtJnDKPTjMoAy106oKVXpz5M8zfk0XsKXnh
CIM+pIWGsvauPuKA8XkPbcJTWYhBX6mNfj7Kzzrj8hZPCbQTPalJmsdAO7TR
/H1eekm15XhVcjXh1B93Bn2JNkqWqDP+NViNFcp6CI+OpDNgTAtdufxhT6ll
Ha7IVCPPV5yuYNBjtZBjtmja+PFGzHKKJvyEuh6T3q6JEgqN6jcMN2O78BrC
PaNOMilTTRS1Zfrp4dAWPLTWjrzXWfkhMi9+odO0OH3LD7x1Xw7hJyg/FqSq
ox/bH3LeV+vAByK0iX1aTz9loedqSN8np2BT5U/M+2hWlwZLlWfmg6ro9lPj
x+3buvD+k+LEzt+kSplUsTK6IY84IgR6cH/lEcJZ5QEsqkoR8Wj3788+/Qv3
ugwR/i7vG4veLI9kRKb5cqjfeK/97Dm6kfqlM/0rizbffd1YGfQH1/K/IFxD
6sk0VS+N6tJ+Zcy93ofNz87mS6WGcyn6R0nEjM86y1n1Fx+P3kS4QdGimTgV
Rw+qXfrfd/TjDsXnhC/jmEtRqqKormP81/T3Adw/9P/WDT8XTFGVAmh9rrx/
6IpBzPHEjvib0tGrFBXEgzpY/YvcCwaxc/r22fuOPpRTVPUcdLnv8z9XziHc
fymDcEippCibKZqrauDkHIchnLvnDeF9h/9S1IFBGqox2BsXOYRFFL4Tzss5
ky6YNNO+/DIMjogdwrEbe2fzseaZ9OLsZzyebkT4rpw/hK8xb6Wo6AGco+54
L2bzED6d1kJ4bfRM+LUzsO3Nccs7zkNY4uOsHirk5lHUdm7ImTpqcpVjCHNH
HSX8wJ0lFJUkCNwayu/nZg3iJ+zPTNl2E5ixW4445OQVT3QYzejipwJin+S9
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
jX2dYQazkiIkv3n3/ny+3+v3x/evua5znevM/bpf9znn8Zz7NfeL5peEORrz
7370h9v5GxsWW2HT7TOR1kNJmBSrd3/tnxyGNja2MgOHf9bxAN5kzBbfor/2
3edwGxucK5g+M++rdcHJmMxvg3/tnOnzGxt+dIxgEG0U156Myfvn8fN/6rPG
P8MawLwafZH5oiQZE/8PTjLsp//+/NFVufuILYcSPhmTNPTnrz0pjoEXgrRK
u6f0v3FetCz8tfNhGHozcrWywJJln5lHMuZo/b91MrmAwV0Bm9E2O/8AVUjG
GPj9q09Ftv59vhFNv4kyZ69PwhgY//t8I8aAMW9ULqS3wM7IuyTMhTv/zltE
yeCfDWEeFKPleeifeetgV/prR6yT614kAXRkMuXJvfxETLmeyd/7ZflQ+reX
kyA67h8iTa5MwHAFCf3L23IpvxGTMNI5EN+ioBmPGQj493kwu1TeVVg6ikK5
0l+9447F/Pld87deKUkY/0TkE8j4J4X+z3przer+W69YyjmWjGWkUMjPfS68
5AhMyDbvv/Wq4AoLRbDgDMI3X+NrPBKK4YSgv/VKVsi9Jy5YEan3lhM3Yf0x
HwuY2v+xv1fvLzsVcRmhus/nf7s8wfTuZY/4x/5fPTjvFvlRwlim8r96EKOR
TtlFawVD+S3SFbRaqLLCa4lhaSAUbkBy3twKrVypQ9j6Zqh+evNy7ScabFfb
JPFesQF64tNyM6074eNiKKXlFQ0+XagXUZhoQDOGchXyq53g7lZ/fJMTDUin
h3m6xtsR1jlt42h7MxgJuLI0P6IB/ZoTyWhbF1qx4wjME60FTGDnwRRG/BZj
za/xBzpQzBWQd7tTCrnzzkbyVBrYSlz+FPmwH0xacaajvUUgJued5NpLhTqe
2Fyp3jGQmr49c1q8FlTYWu/YzpBBkH0iJkcXDzrjzGEVV9phqWhWj+vUHIjt
8slsMJ+GbbvsjH+w9cHHU+dk71wlgtVt8zCxa9PQZ9w/rlM0Cihyz3F9kWlo
l9tx4ZkpDp4NfN89XoKHnV9kyYUXp4BPe/3AKLEPQuwqRG2oRHA++8RjznEK
AoM7Dms97kX5OSvOcY4zYBeN+0Z1nwLiqyqDy+k4ZLyAD9TC48Go2gKbM4QH
VUuc2YUgAkp4I2U9mzgCpj0r1W8lp+DbW+yhpR1E5D2gi//B1AtjfTIPXEQJ
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
YTfEWVbtS3jGmI92LtlKJhLI9jmkLSb3Q5JVoNY63zTKZVuUN5MgwnyKfrTr
2w74KdO33S6UgL6psj2QuEuEJt9BJlVcPow9F6pgPolHDtHHhwnyJHgfIXTu
m3AVZBp5HrY/QELN/rIHlNnxUD0fgd8Q60Pb1IqOfQ+YRhJZm0feCxPhaopm
usB6H+r+w8ZRNz2Obje/fo9pnIMLYtr8NnqjKPeBc/qbSDxyGemxfjNMgL5z
aZOSvJ3Q+zspvai0BVEL9CasNWkQs97pPGOp+T/njB0/H/mXT9zEzlJdSJ9B
hSoSFc5DgezHk3cehY1DQFkILnOMABLOcUoP5oiwOFvOY6tRA7lpAn9Mds9B
m6LrL1O7KZja3Xj+ynQVGDDt55WvxkPy0c0Dss5zwH+PLN+dWgv++3NYKykd
IKmpwjf4kAZ/vuoM1Ak1g5cEsVLcpggV7Mk++FaPDilbFlrbBBrhRHB8ctaT
TPhI2yW4Zk2Hz++u8ew91giNzW5xux4jeEIPepdkTIVUyev220UGIcJlV/D3
94NItP2cym42KkQ57LjnnVcP5XI2lfxvxtCCnFLIq1YybFuztHrE2Qhnjh/n
r42ZRKr8khtHx0kg+hDex1vUMfj2WuCTHhIiqJ+6GHpkEo7Kv+4a820BS9ET
3PeG82FCPh/Nb6ajp+sOGydn2uEbvuoyy7EmwLAbv9Dvo6FBQZdL71Wb4FfJ
lMexQ9/Q1tDeCKwaHVnFj7imBzRBmqzB+V8VNdCSoTJADKYgLXb9b6qqI/DK
PybIa0sitEWx1LcZkdACL89eYQE8uJtp697uygQ/zM0PUssj6EMvZl2glAIy
HEsbGzfImDKmcidJY5nK/fr/8udE0siLmH/2dwKyTlOfXMbox2X93d/JWmPw
qvH/6rhH6v/6j/zHX+evnzFG5z/+yz2Hw35Kx6PA+MaLowmTcJvr0YWym2S4
FLL+DcPejji28dBtm8dBhPlrxn4BMhxqTitsHaPCXp1+nF5mH7htKdr60r8S
fhcM5VyuoEOwBq/ph6ESYLIa0W6czAeueHfc5VUcvMgI8b5MmgNt7z2t4bH1
gD0Zqf5ofwsqCbtNlpahQQXzWpltfBdcuvLtdUrjNFjvxT0qfUUEqoNM2AfH
HnirJ69s4zyB5M68mTJqmoO7d+4qfjnaB0lPHt2dyu+Dr1u3RGQuk1DyTp/N
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
/z+rKIri
     "]], {}},
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["\[Alpha]", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\[Phi]", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      TemplateBox[{0}, "Spacer1"], HoldForm], TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{591.450451702093, 504.},
  LabelStyle->{FontSize -> 20, FontFamily -> "Cambria", 
    GrayLevel[0]},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotLabel->FormBox[
   "\"Fidelity (with \[Alpha]\[Rule]Real, \[Beta]=\\!\\(\\*SqrtBox[\\(1 - \
\\*SuperscriptBox[\\(\[Alpha]\\), \\(2\\)]\\)]\\)\\!\\(\\*SuperscriptBox[\\(\
\[ExponentialE]\\), \\(\[ImaginaryI]\\\\ \[Phi]\\)]\\), \[Epsilon]=0.10, X=\
\[Pi]/2)\"", TraditionalForm],
  PlotRange->{Full, Full, Full},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.7918860953527531`, -2.3740205174022093`, 1.6134344747261267`},
  ViewVertical->{-0.28725339302780856`, 0.38057410597137786`, 
   0.8790044584972807}]], "Output",
 CellChangeTimes->{3.7996784600996065`*^9, 3.7996973034791856`*^9, 
  3.79970733920582*^9, 3.799744215596011*^9, 3.799744540695957*^9, 
  3.799744637859293*^9, 3.7997495759445066`*^9, 3.7997497104067993`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"b7a08536-ebb7-4752-acf5-5a18b2cefa7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"F2", "[", 
  RowBox[{".7", ",", "0", ",", 
   RowBox[{"\[Pi]", "/", "2"}], ",", "0.5", ",", 
   RowBox[{"1", "/", 
    SuperscriptBox["2", 
     RowBox[{"1", "/", "3"}]]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7997495218971314`*^9, 3.79974956439507*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"d67c97c4-8a04-41a6-9ad2-1b8d68609df4"],

Cell[BoxData["0.9986923959267034`"], "Output",
 CellChangeTimes->{{3.799749527917286*^9, 3.79974956501954*^9}},
 CellLabel->"Out[64]=",ExpressionUUID->"969a2848-77d5-428d-9b41-4764ef18ca49"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7996973167262554`*^9, 
  3.799697318291095*^9}},ExpressionUUID->"5f57428e-fca9-4811-b399-\
211876c715b6"]
}, Open  ]]
},
WindowSize->{766, 772},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 194, 3, 28, "Input",ExpressionUUID->"fc150282-8acb-485a-9fd8-8cd950595556"],
Cell[CellGroupData[{
Cell[777, 27, 435, 6, 67, "Section",ExpressionUUID->"ed282fc1-b91e-4684-80fc-9b7c5a8cd08d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1215, 35, 723, 16, 81, "Subsection",ExpressionUUID->"c613112d-ff92-4d84-8f79-e1bc1b576f13",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1941, 53, 1888, 52, 150, "Input",ExpressionUUID->"cb27a031-6616-4475-b60a-d0ce1f3250d0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[3832, 107, 1279, 34, 55, "Output",ExpressionUUID->"8f98ad88-fdba-43fd-98e4-a22d9577b5bb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[5148, 146, 183, 3, 44, "Subsubsection",ExpressionUUID->"d9f1dcbd-e050-4660-9685-1e051c79e55e"],
Cell[5334, 151, 494, 14, 28, "Input",ExpressionUUID->"2d00d780-f67f-4b83-932a-c236438083bd"],
Cell[CellGroupData[{
Cell[5853, 169, 1030, 16, 69, "Subsubsection",ExpressionUUID->"88ee5585-2ccb-4252-b59f-27ba4d5eca4a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[6886, 187, 612, 16, 48, "Input",ExpressionUUID->"6736ffe6-5efe-47d6-8f9e-1c7c27406de7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[7501, 205, 2079, 63, 101, "Output",ExpressionUUID->"4afe4222-d524-4398-b46c-53442c88b570",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[9583, 270, 295, 5, 28, "Input",ExpressionUUID->"1b3f899d-aca2-44b4-9926-e533e2a860f6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[9881, 277, 3119, 97, 105, "Output",ExpressionUUID->"05acdc94-205d-4404-9518-3e5c86464100",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[13003, 376, 849, 18, 28, "Input",ExpressionUUID->"1a5e1205-88f3-4429-ba40-c40c26e5f8d8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[13855, 396, 3232, 95, 105, "Output",ExpressionUUID->"7719ec21-6b61-4d9b-90ad-93738e2912c9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[17090, 493, 382, 6, 44, "Subsubsection",ExpressionUUID->"e5cf3cf1-2642-4a92-9407-5a662719d3c0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[17475, 501, 688, 17, 28, "Input",ExpressionUUID->"c4e9629f-cbcc-401b-aad7-638192fa8b84",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[18166, 520, 3192, 97, 105, "Output",ExpressionUUID->"f0daa879-ce76-4adf-bf0e-dc1268b4e35a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[21361, 619, 330, 5, 44, "Subsubsection",ExpressionUUID->"d6b062c3-bf2b-4231-a749-1db986b78436",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[21694, 626, 693, 17, 48, "Input",ExpressionUUID->"a455cec6-8e9d-466d-8311-a66e81e32944",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[22390, 645, 6311, 189, 201, "Output",ExpressionUUID->"133fb080-42dc-4b24-b238-632907a85f1a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[28704, 836, 382, 6, 44, "Subsubsection",ExpressionUUID->"56f15145-a3ab-4b2a-820c-b6f48e5eb0f2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[29089, 844, 693, 17, 48, "Input",ExpressionUUID->"c3b1e03d-4c0d-47eb-b200-af74b641c6f1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[29785, 863, 10261, 305, 345, "Output",ExpressionUUID->"91d8b115-8d4d-4fea-bbfc-d6ad12a70a83",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[40049, 1170, 664, 12, 131, "Subsection",ExpressionUUID->"f717ac82-8e99-4263-b925-432fd429468a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[40716, 1184, 1089, 24, 48, "Input",ExpressionUUID->"6366c83a-54f9-427e-a8b9-2ed807be358d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[41808, 1210, 1301, 33, 58, "Output",ExpressionUUID->"6d53a656-4fe8-4461-90c1-b896280537e6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[43112, 1245, 646, 14, 78, "Text",ExpressionUUID->"7e8d4a28-8956-404a-8b9b-95b1a51a20da",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[43761, 1261, 301, 5, 67, "Section",ExpressionUUID->"2cc46486-3b03-4e55-b7d6-41989bcab6d0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[44065, 1268, 693, 15, 56, "Text",ExpressionUUID->"6101fe0b-d95b-47f9-9345-c569d5e087eb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[44761, 1285, 867, 19, 111, "Subsection",ExpressionUUID->"3fb6c8ba-16f8-4d52-913c-cbaf65cfe42c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[45631, 1306, 978, 25, 75, "Input",ExpressionUUID->"358096dd-111d-402b-84d8-f2154a2d9135",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[46612, 1333, 766, 19, 61, "Output",ExpressionUUID->"6d3dcdbe-3b50-41ea-b3d6-4fe70f550be1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[47381, 1354, 888, 19, 85, "Subsection",ExpressionUUID->"75a67585-2c84-4eae-a49f-2dd34d77c758",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[48272, 1375, 805, 24, 55, "Input",ExpressionUUID->"32246f4c-ca20-4153-b9df-17e9528e5eee",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[49080, 1401, 677, 18, 61, "Output",ExpressionUUID->"f6d22999-3aaa-41d5-9604-8a7fdac3b534",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[49806, 1425, 167, 3, 67, "Section",ExpressionUUID->"6e66ea3c-6ab6-49d3-8417-629abe6cc929"],
Cell[CellGroupData[{
Cell[49998, 1432, 158, 3, 53, "Subsection",ExpressionUUID->"e4ec886a-fafc-410d-ab2e-dcad71bf5a5f"],
Cell[CellGroupData[{
Cell[50181, 1439, 3524, 96, 271, "Input",ExpressionUUID->"3b866064-0f4a-4c5d-ac11-363ec9d3f38f"],
Cell[53708, 1537, 98903, 1650, 421, 25827, 452, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"b9cbb8da-6f48-4181-98a5-2a8e72e5020a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[152660, 3193, 159, 3, 53, "Subsection",ExpressionUUID->"865c54db-9689-4884-a7f5-963b0dd81852"],
Cell[152822, 3198, 5676, 128, 345, "Input",ExpressionUUID->"5897c199-35d6-4cad-b68d-608ec026f137",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[158501, 3328, 313, 9, 52, "Input",ExpressionUUID->"4bf202a3-1af5-47ef-b003-c45292c73d82"],
Cell[158817, 3339, 1832, 26, 32, "Output",ExpressionUUID->"3154b081-f4b2-44e2-9101-c166ecebc593",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[160652, 3367, 131, 3, 28, "Input",ExpressionUUID->"36b235dd-df5e-455a-b988-006e87fb7619"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[160832, 3376, 157, 3, 67, "Section",ExpressionUUID->"ed23c14e-89df-4790-a9bb-40cbf882a75b"],
Cell[CellGroupData[{
Cell[161014, 3383, 5590, 138, 333, "Input",ExpressionUUID->"87f5c8b6-c350-4eb7-bfd6-1e1a4813b302",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[166607, 3523, 2363, 45, 86, "Input",ExpressionUUID->"919b0c43-5cbf-4336-869e-7b46cff0f328",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[168973, 3570, 16274, 287, 446, "Output",ExpressionUUID->"cffa904f-156b-497d-9366-89543bb640cd",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[185284, 3862, 3518, 82, 307, "Input",ExpressionUUID->"77ca27b1-eab3-49d2-b937-bf2fe0bb5dcf"],
Cell[188805, 3946, 3361, 64, 553, "Output",ExpressionUUID->"71aaa3a1-8d8b-4452-a853-eb77789fd679"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[192215, 4016, 180, 3, 67, "Section",ExpressionUUID->"7068b226-0d67-49f3-b6ef-b562f8dc3f6e"],
Cell[CellGroupData[{
Cell[192420, 4023, 165, 3, 44, "Subsubsection",ExpressionUUID->"663df88b-ce12-4794-a409-b6c7d6fcca0a"],
Cell[CellGroupData[{
Cell[192610, 4030, 1421, 44, 129, "Input",ExpressionUUID->"cb0fe6d4-c15b-4856-ad05-a815d48041fa"],
Cell[194034, 4076, 377, 5, 32, "Output",ExpressionUUID->"440966df-0143-41dc-828f-4eda72e897d2"],
Cell[194414, 4083, 393, 6, 32, "Output",ExpressionUUID->"3f805db0-2ad6-4bf0-83f2-2ffe6e0689dc"],
Cell[194810, 4091, 376, 5, 32, "Output",ExpressionUUID->"93c36bce-5529-4220-b1af-7ac51eadd950"],
Cell[195189, 4098, 394, 6, 32, "Output",ExpressionUUID->"6cd9f8d8-a7ee-43dc-afa4-e4aef013dbd9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195620, 4109, 936, 28, 86, "Input",ExpressionUUID->"e0bdeede-3657-4b0c-a596-cad135c25780"],
Cell[196559, 4139, 190, 2, 32, "Output",ExpressionUUID->"d795ab52-eee6-4a57-afb9-7d7f361dc515"],
Cell[196752, 4143, 190, 2, 32, "Output",ExpressionUUID->"643815f4-295c-4842-b18f-72214428a1af"],
Cell[196945, 4147, 194, 2, 32, "Output",ExpressionUUID->"a388f7bf-f3f5-43b5-8e6a-8df9aa828fef"],
Cell[197142, 4151, 194, 2, 32, "Output",ExpressionUUID->"0de50cfa-0c88-4e8c-b030-fa3d4b3bef8d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197373, 4158, 176, 2, 28, "Input",ExpressionUUID->"15c6ce75-ff22-469b-bf33-ecbbe49ba12d"],
Cell[197552, 4162, 400, 11, 39, "Output",ExpressionUUID->"39611847-d897-411a-bb1a-c9da958fd036"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197989, 4178, 225, 4, 28, "Input",ExpressionUUID->"3863b838-8fc1-4f22-9ba6-835778e30599"],
Cell[198217, 4184, 463, 13, 39, "Output",ExpressionUUID->"a9299611-5e44-47c2-a5de-4cbcf67f4f66"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[198729, 4203, 162, 3, 44, "Subsubsection",ExpressionUUID->"6c4740cf-2363-4556-81c4-0af46262bcc6"],
Cell[CellGroupData[{
Cell[198916, 4210, 5899, 168, 318, "Input",ExpressionUUID->"7bfa545d-e8d3-42a7-8be2-0e2d397c21c5"],
Cell[204818, 4380, 411, 10, 23, "Message",ExpressionUUID->"b81606f2-a88a-4dcd-9240-01e838a62400"],
Cell[205232, 4392, 409, 10, 23, "Message",ExpressionUUID->"6e0f4b29-5a67-4e37-9c00-1a39c069db4e"],
Cell[205644, 4404, 410, 10, 23, "Message",ExpressionUUID->"df0bec35-edcb-43ee-a25a-e6a45c45bf0a"],
Cell[206057, 4416, 494, 11, 21, "Message",ExpressionUUID->"8c09ed86-0d29-495e-9994-259f0f02c756"],
Cell[206554, 4429, 392, 10, 21, "Message",ExpressionUUID->"5000a312-57a0-4e8f-825e-01bb1cd6fd69"],
Cell[206949, 4441, 324, 8, 36, "Output",ExpressionUUID->"f2c7d4de-0a95-487c-8faa-de2c8b1795ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207310, 4454, 1010, 24, 28, "Input",ExpressionUUID->"195c9618-d766-49b5-98c2-f2642a95a88b"],
Cell[208323, 4480, 3531, 94, 171, "Output",ExpressionUUID->"9ab4316a-2724-4dac-b0e4-44c6ddb1b1f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211891, 4579, 607, 15, 48, "Input",ExpressionUUID->"2806e762-1657-4227-8f16-16eef844baae"],
Cell[212501, 4596, 563, 15, 32, "Output",ExpressionUUID->"33948807-c567-41be-8f99-5c4dbeb708ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213101, 4616, 322, 5, 28, "Input",ExpressionUUID->"011417a2-66b5-4131-801e-43a0858ce461"],
Cell[213426, 4623, 1152, 32, 36, "Output",ExpressionUUID->"282e9437-7b7a-4e72-8c9d-e52660394606"]
}, Open  ]],
Cell[CellGroupData[{
Cell[214615, 4660, 399, 9, 32, "Input",ExpressionUUID->"20b76a85-addf-4c45-acfc-bc1fc059e3b1"],
Cell[215017, 4671, 1498, 42, 103, "Output",ExpressionUUID->"937c8342-9fd8-40b6-b18b-8300a41fa343"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216552, 4718, 332, 8, 48, "Input",ExpressionUUID->"2844b9f8-3a8b-418a-a23b-5e1e833924fd"],
Cell[216887, 4728, 515, 13, 32, "Output",ExpressionUUID->"d7943dbe-f65e-44e8-af5b-a031c8150556"]
}, Open  ]],
Cell[CellGroupData[{
Cell[217439, 4746, 287, 7, 48, "Input",ExpressionUUID->"f11048f0-5662-4e93-ad1b-8bfaf85ee94a"],
Cell[217729, 4755, 1613, 45, 55, "Output",ExpressionUUID->"55f11d18-a5df-458b-b6f9-a6c3358755b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219379, 4805, 335, 7, 28, "Input",ExpressionUUID->"93b5cfe7-d008-416f-8eb9-6b8b4673f6ae"],
Cell[219717, 4814, 1078, 28, 36, "Output",ExpressionUUID->"a12b81d4-3957-494e-abce-59b8b15f6062"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220832, 4847, 327, 8, 48, "Input",ExpressionUUID->"eb7d34b2-c0db-4671-9adb-ec9273f9a515"],
Cell[221162, 4857, 1482, 42, 36, "Output",ExpressionUUID->"a17d4f4f-9be3-44ae-8484-dc9f4173392b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222681, 4904, 407, 9, 48, "Input",ExpressionUUID->"73c1c1f1-9b2d-4c7f-9b62-dc8cb5a8d43e"],
Cell[223091, 4915, 1262, 34, 36, "Output",ExpressionUUID->"7257dc97-37dd-429d-bcee-e79926b671bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224390, 4954, 411, 9, 48, "Input",ExpressionUUID->"a093cc00-4335-4120-a82e-aac71dfc0d9a"],
Cell[224804, 4965, 1309, 37, 36, "Output",ExpressionUUID->"7e25b07c-9e44-44b0-a195-7856ca5520b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226150, 5007, 962, 25, 150, "Input",ExpressionUUID->"029eba9d-caf8-4de2-8abb-7c090e50c2de"],
Cell[227115, 5034, 3448, 92, 96, "Output",ExpressionUUID->"2e970190-b16d-4c0d-a9b5-fdd307a2e328"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230600, 5131, 944, 23, 71, "Input",ExpressionUUID->"b24772bb-484f-4c85-9e47-93d84e5140d8"],
Cell[231547, 5156, 1674, 48, 51, "Output",ExpressionUUID->"1f890f7f-d83f-4fad-b0b0-3b6714285e0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233258, 5209, 909, 24, 152, "Input",ExpressionUUID->"6c24e2b3-f11e-46f8-9c57-f312e945c91f"],
Cell[234170, 5235, 2102, 60, 58, "Output",ExpressionUUID->"a7a44764-87c6-4392-91df-0de71aba4c05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236309, 5300, 861, 21, 71, "Input",ExpressionUUID->"ea1e350b-1408-451b-8667-abb1e391066d"],
Cell[237173, 5323, 2388, 71, 52, "Output",ExpressionUUID->"bb528e58-e145-45d9-a9e4-6bd76fe8dbd3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239598, 5399, 245, 4, 28, "Input",ExpressionUUID->"6a57dcc9-44b6-49be-ac1c-9b491dfc4c53"],
Cell[239846, 5405, 3992, 116, 93, "Output",ExpressionUUID->"a30e1074-6134-4a8f-9b24-37e165b6ff52"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[243887, 5527, 227, 7, 53, "Subsection",ExpressionUUID->"7ab357db-88de-4e61-a78d-fa2464cf1d5d"],
Cell[CellGroupData[{
Cell[244139, 5538, 3731, 107, 254, "Input",ExpressionUUID->"d45d79e1-36ff-4821-98a2-240144fada17"],
Cell[247873, 5647, 409, 10, 23, "Message",ExpressionUUID->"81ccca63-7be0-45ef-b10a-bdef00762820"],
Cell[248285, 5659, 407, 10, 23, "Message",ExpressionUUID->"76035398-8f63-441f-a570-cf20af9fe8da"],
Cell[248695, 5671, 410, 10, 23, "Message",ExpressionUUID->"b44e310a-0202-4238-9172-fad17dd3fd2d"],
Cell[249108, 5683, 492, 11, 23, "Message",ExpressionUUID->"4ba9ada0-4359-4e6b-be64-a80348e06c57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249637, 5699, 805, 21, 28, "Input",ExpressionUUID->"c53fb4ea-2bbb-4121-b033-f2acc3153263"],
Cell[250445, 5722, 1911, 57, 87, "Output",ExpressionUUID->"4d86cd2a-70eb-4d05-9a52-7ab36addcf14"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[252405, 5785, 206, 6, 53, "Subsection",ExpressionUUID->"20873235-cc55-4675-8edc-bebc1c8a8b95"],
Cell[CellGroupData[{
Cell[252636, 5795, 3675, 108, 242, "Input",ExpressionUUID->"d63532cb-b7ac-43d0-a9c2-639b0aa869a7"],
Cell[256314, 5905, 411, 10, 23, "Message",ExpressionUUID->"8ef2393d-e31e-41b4-acd6-5c08ebda9e36"],
Cell[256728, 5917, 413, 10, 23, "Message",ExpressionUUID->"b71842b8-1fa1-49e9-9d0c-01f43cc86f84"],
Cell[257144, 5929, 412, 10, 23, "Message",ExpressionUUID->"cd6e0f54-0af0-456d-8e11-1b436d08fd87"],
Cell[257559, 5941, 494, 11, 23, "Message",ExpressionUUID->"ff354733-4948-49bb-995a-1576347e3240"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258090, 5957, 689, 19, 28, "Input",ExpressionUUID->"93e30e28-2e9b-421b-995a-cc3b71a13e9f"],
Cell[258782, 5978, 1585, 48, 49, "Output",ExpressionUUID->"2a1cd288-5d1a-4379-a331-d3659c0e81fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260404, 6031, 937, 31, 78, "Input",ExpressionUUID->"b66d22c4-2bde-4f82-8a41-dcc39c3050c1"],
Cell[261344, 6064, 1516, 47, 69, "Output",ExpressionUUID->"17d26cb2-d59c-4a6b-8b2f-6772db445984"]
}, Open  ]],
Cell[CellGroupData[{
Cell[262897, 6116, 527, 13, 92, "Input",ExpressionUUID->"9f9f39b1-9fc2-45ec-8453-ec5c5832ab50"],
Cell[263427, 6131, 460, 13, 68, "Output",ExpressionUUID->"546a7e0e-8e84-4e5c-a12b-6a0188e2525a"],
Cell[263890, 6146, 547, 16, 68, "Output",ExpressionUUID->"20bcc3a0-abbe-47c8-84c4-60be224696fc"]
}, Open  ]],
Cell[264452, 6165, 2429, 77, 315, "Input",ExpressionUUID->"1177d8dc-29bc-423d-8d59-7604b9d73e62"],
Cell[CellGroupData[{
Cell[266906, 6246, 268, 5, 28, "Input",ExpressionUUID->"11f5d434-3e41-4d9d-8a7f-c7392c8a4ef3"],
Cell[267177, 6253, 762, 23, 68, "Output",ExpressionUUID->"84902832-614e-4f44-82eb-ba71b9b3425f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267976, 6281, 415, 10, 32, "Input",ExpressionUUID->"66362915-7c81-41d2-8057-fd62633b6087"],
Cell[268394, 6293, 354, 9, 23, "Message",ExpressionUUID->"dfdda6e1-163c-4643-b92c-04dee8e4613b"],
Cell[268751, 6304, 3548, 107, 131, "Output",ExpressionUUID->"beebe6c5-6405-45e3-bfad-acb6d9541079"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[272360, 6418, 156, 3, 66, "Section",ExpressionUUID->"d0a96fb8-5dad-4bd5-bb4b-5d299e41d99c"],
Cell[CellGroupData[{
Cell[272541, 6425, 8383, 226, 514, "Input",ExpressionUUID->"4c7e79b5-7e19-47e3-8520-c216551826e7"],
Cell[280927, 6653, 169953, 2810, 521, "Output",ExpressionUUID->"b7a08536-ebb7-4752-acf5-5a18b2cefa7a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[450917, 9468, 361, 8, 33, "Input",ExpressionUUID->"d67c97c4-8a04-41a6-9ad2-1b8d68609df4"],
Cell[451281, 9478, 190, 2, 32, "Output",ExpressionUUID->"969a2848-77d5-428d-9b41-4764ef18ca49"]
}, Open  ]],
Cell[451486, 9483, 154, 3, 28, "Input",ExpressionUUID->"5f57428e-fca9-4811-b399-211876c715b6"]
}, Open  ]]
}
]
*)

